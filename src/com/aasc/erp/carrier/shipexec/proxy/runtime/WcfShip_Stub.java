// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.shipexec.proxy.runtime;

import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.soap.streaming.*;
import oracle.j2ee.ws.common.soap.message.*;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.exception.JAXRPCExceptionBase;
import oracle.j2ee.ws.common.util.SoapWithAttachmentsUtil;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import oracle.j2ee.ws.client.*;
import oracle.j2ee.ws.client.http.*;
import oracle.webservices.transport.*;
import oracle.webservices.*;
import oracle.webservices.attachments.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;
import javax.xml.rpc.soap.SOAPFaultException;

public class WcfShip_Stub
    extends oracle.j2ee.ws.client.StubBase
    implements com.aasc.erp.carrier.shipexec.proxy.IwcfShip {
    
    
    /*
     *  public constructor
     */
    public WcfShip_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://shipexec.com/demo/wcf/soap/wcfShip");
        setSoapVersion(SOAPVersion.SOAP_11);
        setServiceName( new QName("http://tempuri.org/","wcfSoxContract"));
        setPortName( new QName("http://tempuri.org/","wcfShip"));
        setupConfig("com/aasc/erp/carrier/shipexec/proxy/runtime/WcfShip_Stub.xml");
    }
    
    /*
     *  implementation of getTransmitItems
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getTransmitItems(java.lang.String carrier, java.lang.String shipper)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetTransmitItems_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetTransmitItems"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItems _myGetTransmitItems = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItems();
            _myGetTransmitItems.setCarrier(carrier);
            _myGetTransmitItems.setShipper(shipper);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetTransmitItems_GetTransmitItems_QNAME);
            _bodyBlock.setValue(_myGetTransmitItems);
            _bodyBlock.setSerializer(myns1_GetTransmitItems__GetTransmitItems_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetTransmitItems");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsResponse)_responseObj;
            }
            
            return _result.getGetTransmitItemsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of COMethods
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum COMethods()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(COMethods_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","COMethods"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.COMethods _myCOMethods = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.COMethods();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_COMethods_COMethods_QNAME);
            _bodyBlock.setValue(_myCOMethods);
            _bodyBlock.setSerializer(myns1_COMethods__COMethods_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/COMethods");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.COMethodsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.COMethodsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.COMethodsResponse)_responseObj;
            }
            
            return _result.getCOMethodsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of addShipmentToBatch
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn addShipmentToBatch(java.lang.String batchReference, java.lang.String batchItemReference, int sequenceNumber, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchLoadType loadType, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(AddShipmentToBatch_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","AddShipmentToBatch"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddShipmentToBatch _myAddShipmentToBatch = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddShipmentToBatch();
            _myAddShipmentToBatch.setBatchReference(batchReference);
            _myAddShipmentToBatch.setBatchItemReference(batchItemReference);
            _myAddShipmentToBatch.setSequenceNumber(sequenceNumber);
            _myAddShipmentToBatch.setLoadType(loadType);
            _myAddShipmentToBatch.setShipmentRequest(shipmentRequest);
            _myAddShipmentToBatch.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_AddShipmentToBatch_AddShipmentToBatch_QNAME);
            _bodyBlock.setValue(_myAddShipmentToBatch);
            _bodyBlock.setSerializer(myns1_AddShipmentToBatch__AddShipmentToBatch_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/AddShipmentToBatch");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddShipmentToBatchResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddShipmentToBatchResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddShipmentToBatchResponse)_responseObj;
            }
            
            return _result.getAddShipmentToBatchResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of userMethod
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UserMethodResponse userMethod(java.lang.Object params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(UserMethod_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","UserMethod"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UserMethod _myUserMethod = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UserMethod();
            _myUserMethod.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_UserMethod_UserMethod_QNAME);
            _bodyBlock.setValue(_myUserMethod);
            _bodyBlock.setSerializer(myns1_UserMethod__UserMethod_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/UserMethod");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UserMethodResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UserMethodResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UserMethodResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getCountries
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxCountry[] getCountries()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetCountries_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetCountries"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCountries _myGetCountries = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCountries();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetCountries_GetCountries_QNAME);
            _bodyBlock.setValue(_myGetCountries);
            _bodyBlock.setSerializer(myns1_GetCountries__GetCountries_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetCountries");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCountriesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCountriesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCountriesResponse)_responseObj;
            }
            
            return _result.getGetCountriesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of sox_Version
     */
    public java.lang.String sox_Version()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(Sox_Version_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","Sox_Version"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_Version _mySox_Version = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_Version();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_Sox_Version_Sox_Version_QNAME);
            _bodyBlock.setValue(_mySox_Version);
            _bodyBlock.setSerializer(myns1_Sox_Version__Sox_Version_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/Sox_Version");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_VersionResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_VersionResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_VersionResponse)_responseObj;
            }
            
            return _result.getSox_VersionResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByTrackingNumber
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package searchByTrackingNumber(java.lang.String trackingNumber)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByTrackingNumber_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByTrackingNumber"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumber _mySearchByTrackingNumber = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumber();
            _mySearchByTrackingNumber.setTrackingNumber(trackingNumber);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByTrackingNumber_SearchByTrackingNumber_QNAME);
            _bodyBlock.setValue(_mySearchByTrackingNumber);
            _bodyBlock.setSerializer(myns1_SearchByTrackingNumber__SearchByTrackingNumber_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByTrackingNumber");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumberResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumberResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumberResponse)_responseObj;
            }
            
            return _result.getSearchByTrackingNumberResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of sox_Db_Version
     */
    public java.lang.String sox_Db_Version()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(Sox_Db_Version_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","Sox_Db_Version"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_Db_Version _mySox_Db_Version = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_Db_Version();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_Sox_Db_Version_Sox_Db_Version_QNAME);
            _bodyBlock.setValue(_mySox_Db_Version);
            _bodyBlock.setSerializer(myns1_Sox_Db_Version__Sox_Db_Version_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/Sox_Db_Version");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_Db_VersionResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_Db_VersionResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_Db_VersionResponse)_responseObj;
            }
            
            return _result.getSox_Db_VersionResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchPackageHistory
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchPackageHistory(java.lang.String startShipDate, java.lang.String endShipDate, java.lang.String shipper, java.lang.String service, long globalMSN, java.lang.String trackingNumber, java.lang.String company, java.lang.String contact, java.lang.String city, java.lang.String stateProvince, java.lang.String country, java.lang.String postalCode, java.lang.String phone, java.lang.String shipperReference, java.lang.String consigneeReference, java.lang.String miscReference1, java.lang.String miscReference2, java.lang.String miscReference3, java.lang.String miscReference4, java.lang.String miscReference5, java.lang.String carrier, int recordsToReturn)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(searchPackageHistory_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","searchPackageHistory"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchPackageHistory _mySearchPackageHistory = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchPackageHistory();
            _mySearchPackageHistory.setStartShipDate(startShipDate);
            _mySearchPackageHistory.setEndShipDate(endShipDate);
            _mySearchPackageHistory.setShipper(shipper);
            _mySearchPackageHistory.setService(service);
            _mySearchPackageHistory.setGlobalMSN(globalMSN);
            _mySearchPackageHistory.setTrackingNumber(trackingNumber);
            _mySearchPackageHistory.setCompany(company);
            _mySearchPackageHistory.setContact(contact);
            _mySearchPackageHistory.setCity(city);
            _mySearchPackageHistory.setStateProvince(stateProvince);
            _mySearchPackageHistory.setCountry(country);
            _mySearchPackageHistory.setPostalCode(postalCode);
            _mySearchPackageHistory.setPhone(phone);
            _mySearchPackageHistory.setShipperReference(shipperReference);
            _mySearchPackageHistory.setConsigneeReference(consigneeReference);
            _mySearchPackageHistory.setMiscReference1(miscReference1);
            _mySearchPackageHistory.setMiscReference2(miscReference2);
            _mySearchPackageHistory.setMiscReference3(miscReference3);
            _mySearchPackageHistory.setMiscReference4(miscReference4);
            _mySearchPackageHistory.setMiscReference5(miscReference5);
            _mySearchPackageHistory.setCarrier(carrier);
            _mySearchPackageHistory.setRecordsToReturn(recordsToReturn);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_searchPackageHistory_searchPackageHistory_QNAME);
            _bodyBlock.setValue(_mySearchPackageHistory);
            _bodyBlock.setSerializer(myns1_searchPackageHistory__SearchPackageHistory_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/searchPackageHistory");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchPackageHistoryResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchPackageHistoryResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchPackageHistoryResponse)_responseObj;
            }
            
            return _result.getSearchPackageHistoryResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deleteTransmitItem
     */
    public void deleteTransmitItem(java.lang.String carrier, java.lang.String shipper, java.lang.String itemToDelete)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DeleteTransmitItem_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","DeleteTransmitItem"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteTransmitItem _myDeleteTransmitItem = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteTransmitItem();
            _myDeleteTransmitItem.setCarrier(carrier);
            _myDeleteTransmitItem.setShipper(shipper);
            _myDeleteTransmitItem.setItemToDelete(itemToDelete);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DeleteTransmitItem_DeleteTransmitItem_QNAME);
            _bodyBlock.setValue(_myDeleteTransmitItem);
            _bodyBlock.setSerializer(myns1_DeleteTransmitItem__DeleteTransmitItem_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/DeleteTransmitItem");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of updateDocumentProfile
     */
    public boolean updateDocumentProfile(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DocumentProfile documentProfile)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(UpdateDocumentProfile_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","UpdateDocumentProfile"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdateDocumentProfile _myUpdateDocumentProfile = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdateDocumentProfile();
            _myUpdateDocumentProfile.setDocumentProfile(documentProfile);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_UpdateDocumentProfile_UpdateDocumentProfile_QNAME);
            _bodyBlock.setValue(_myUpdateDocumentProfile);
            _bodyBlock.setSerializer(myns1_UpdateDocumentProfile__UpdateDocumentProfile_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/UpdateDocumentProfile");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdateDocumentProfileResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdateDocumentProfileResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdateDocumentProfileResponse)_responseObj;
            }
            
            return _result.isUpdateDocumentProfileResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getNextValidShipDate
     */
    public java.lang.String getNextValidShipDate(java.lang.String carrier, java.lang.String from_date, java.lang.String origin_country, boolean ship_on_sat)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetNextValidShipDate_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetNextValidShipDate"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNextValidShipDate _myGetNextValidShipDate = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNextValidShipDate();
            _myGetNextValidShipDate.setCarrier(carrier);
            _myGetNextValidShipDate.setFrom_date(from_date);
            _myGetNextValidShipDate.setOrigin_country(origin_country);
            _myGetNextValidShipDate.setShip_on_sat(ship_on_sat);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetNextValidShipDate_GetNextValidShipDate_QNAME);
            _bodyBlock.setValue(_myGetNextValidShipDate);
            _bodyBlock.setSerializer(myns1_GetNextValidShipDate__GetNextValidShipDate_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetNextValidShipDate");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNextValidShipDateResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNextValidShipDateResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNextValidShipDateResponse)_responseObj;
            }
            
            return _result.getGetNextValidShipDateResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getCommodityClasses
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getCommodityClasses()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetCommodityClasses_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetCommodityClasses"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommodityClasses _myGetCommodityClasses = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommodityClasses();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetCommodityClasses_GetCommodityClasses_QNAME);
            _bodyBlock.setValue(_myGetCommodityClasses);
            _bodyBlock.setSerializer(myns1_GetCommodityClasses__GetCommodityClasses_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetCommodityClasses");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommodityClassesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommodityClassesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommodityClassesResponse)_responseObj;
            }
            
            return _result.getGetCommodityClassesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of createBatch
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn createBatch(java.lang.String batchReference)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CreateBatch_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CreateBatch"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateBatch _myCreateBatch = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateBatch();
            _myCreateBatch.setBatchReference(batchReference);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CreateBatch_CreateBatch_QNAME);
            _bodyBlock.setValue(_myCreateBatch);
            _bodyBlock.setSerializer(myns1_CreateBatch__CreateBatch_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CreateBatch");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateBatchResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateBatchResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateBatchResponse)_responseObj;
            }
            
            return _result.getCreateBatchResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByConsigneeReferenceWithCount
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByConsigneeReferenceWithCount(java.lang.String consignee_reference, int recordsToReturn)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByConsigneeReferenceWithCount_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByConsigneeReferenceWithCount"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReferenceWithCount _mySearchByConsigneeReferenceWithCount = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReferenceWithCount();
            _mySearchByConsigneeReferenceWithCount.setConsignee_reference(consignee_reference);
            _mySearchByConsigneeReferenceWithCount.setRecordsToReturn(recordsToReturn);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByConsigneeReferenceWithCount_SearchByConsigneeReferenceWithCount_QNAME);
            _bodyBlock.setValue(_mySearchByConsigneeReferenceWithCount);
            _bodyBlock.setSerializer(myns1_SearchByConsigneeReferenceWithCount__SearchByConsigneeReferenceWithCount_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByConsigneeReferenceWithCount");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReferenceWithCountResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReferenceWithCountResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReferenceWithCountResponse)_responseObj;
            }
            
            return _result.getSearchByConsigneeReferenceWithCountResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getUnitOfMeasures
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getUnitOfMeasures()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetUnitOfMeasures_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetUnitOfMeasures"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetUnitOfMeasures _myGetUnitOfMeasures = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetUnitOfMeasures();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetUnitOfMeasures_GetUnitOfMeasures_QNAME);
            _bodyBlock.setValue(_myGetUnitOfMeasures);
            _bodyBlock.setSerializer(myns1_GetUnitOfMeasures__GetUnitOfMeasures_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetUnitOfMeasures");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetUnitOfMeasuresResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetUnitOfMeasuresResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetUnitOfMeasuresResponse)_responseObj;
            }
            
            return _result.getGetUnitOfMeasuresResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getShipFileDocuments
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getShipFileDocuments(java.lang.String carrier)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetShipFileDocuments_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetShipFileDocuments"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipFileDocuments _myGetShipFileDocuments = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipFileDocuments();
            _myGetShipFileDocuments.setCarrier(carrier);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetShipFileDocuments_GetShipFileDocuments_QNAME);
            _bodyBlock.setValue(_myGetShipFileDocuments);
            _bodyBlock.setSerializer(myns1_GetShipFileDocuments__GetShipFileDocuments_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetShipFileDocuments");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipFileDocumentsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipFileDocumentsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipFileDocumentsResponse)_responseObj;
            }
            
            return _result.getGetShipFileDocumentsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of voidPackageByTrackingNumber
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByTrackingNumberResponse voidPackageByTrackingNumber(java.lang.String trackingNumber, java.lang.String carrier, java.lang.String shipper, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(VoidPackageByTrackingNumber_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","VoidPackageByTrackingNumber"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByTrackingNumber _myVoidPackageByTrackingNumber = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByTrackingNumber();
            _myVoidPackageByTrackingNumber.setTrackingNumber(trackingNumber);
            _myVoidPackageByTrackingNumber.setCarrier(carrier);
            _myVoidPackageByTrackingNumber.setShipper(shipper);
            _myVoidPackageByTrackingNumber.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_VoidPackageByTrackingNumber_VoidPackageByTrackingNumber_QNAME);
            _bodyBlock.setValue(_myVoidPackageByTrackingNumber);
            _bodyBlock.setSerializer(myns1_VoidPackageByTrackingNumber__VoidPackageByTrackingNumber_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/VoidPackageByTrackingNumber");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByTrackingNumberResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByTrackingNumberResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByTrackingNumberResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getShipperNameAddress
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress getShipperNameAddress(java.lang.String shipper)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetShipperNameAddress_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetShipperNameAddress"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipperNameAddress _myGetShipperNameAddress = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipperNameAddress();
            _myGetShipperNameAddress.setShipper(shipper);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetShipperNameAddress_GetShipperNameAddress_QNAME);
            _bodyBlock.setValue(_myGetShipperNameAddress);
            _bodyBlock.setSerializer(myns1_GetShipperNameAddress__GetShipperNameAddress_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetShipperNameAddress");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipperNameAddressResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipperNameAddressResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipperNameAddressResponse)_responseObj;
            }
            
            return _result.getGetShipperNameAddressResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getConfiguredPrinters
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer[] getConfiguredPrinters()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetConfiguredPrinters_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetConfiguredPrinters"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetConfiguredPrinters _myGetConfiguredPrinters = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetConfiguredPrinters();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetConfiguredPrinters_GetConfiguredPrinters_QNAME);
            _bodyBlock.setValue(_myGetConfiguredPrinters);
            _bodyBlock.setSerializer(myns1_GetConfiguredPrinters__GetConfiguredPrinters_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetConfiguredPrinters");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetConfiguredPrintersResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetConfiguredPrintersResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetConfiguredPrintersResponse)_responseObj;
            }
            
            return _result.getGetConfiguredPrintersResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of closeGroup
     */
    public boolean closeGroup(java.lang.String carrier, java.lang.String grouping_symbol, java.lang.String group_id)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CloseGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CloseGroup"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroup _myCloseGroup = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroup();
            _myCloseGroup.setCarrier(carrier);
            _myCloseGroup.setGrouping_symbol(grouping_symbol);
            _myCloseGroup.setGroup_id(group_id);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CloseGroup_CloseGroup_QNAME);
            _bodyBlock.setValue(_myCloseGroup);
            _bodyBlock.setSerializer(myns1_CloseGroup__CloseGroup_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CloseGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupResponseType _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupResponseType)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupResponseType)_responseObj;
            }
            
            return _result.isCloseGroupResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getWeightUnitByCountryLocale
     */
    public java.lang.String getWeightUnitByCountryLocale(java.lang.String country_symbol)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetWeightUnitByCountryLocale_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetWeightUnitByCountryLocale"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetWeightUnitByCountryLocale _myGetWeightUnitByCountryLocale = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetWeightUnitByCountryLocale();
            _myGetWeightUnitByCountryLocale.setCountry_symbol(country_symbol);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetWeightUnitByCountryLocale_GetWeightUnitByCountryLocale_QNAME);
            _bodyBlock.setValue(_myGetWeightUnitByCountryLocale);
            _bodyBlock.setSerializer(myns1_GetWeightUnitByCountryLocale__GetWeightUnitByCountryLocale_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetWeightUnitByCountryLocale");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetWeightUnitByCountryLocaleResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetWeightUnitByCountryLocaleResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetWeightUnitByCountryLocaleResponse)_responseObj;
            }
            
            return _result.getGetWeightUnitByCountryLocaleResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByShipperReferenceWithCount
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperReferenceWithCount(java.lang.String shipper_reference, int recordsToReturn)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByShipperReferenceWithCount_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByShipperReferenceWithCount"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReferenceWithCount _mySearchByShipperReferenceWithCount = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReferenceWithCount();
            _mySearchByShipperReferenceWithCount.setShipper_reference(shipper_reference);
            _mySearchByShipperReferenceWithCount.setRecordsToReturn(recordsToReturn);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByShipperReferenceWithCount_SearchByShipperReferenceWithCount_QNAME);
            _bodyBlock.setValue(_mySearchByShipperReferenceWithCount);
            _bodyBlock.setSerializer(myns1_SearchByShipperReferenceWithCount__SearchByShipperReferenceWithCount_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByShipperReferenceWithCount");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReferenceWithCountResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReferenceWithCountResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReferenceWithCountResponse)_responseObj;
            }
            
            return _result.getSearchByShipperReferenceWithCountResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of ship
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipResponse ship(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest request, boolean shipWithoutTransaction, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(Ship_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","Ship"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Ship _myShip = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Ship();
            _myShip.setRequest(request);
            _myShip.setShipWithoutTransaction(shipWithoutTransaction);
            _myShip.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_Ship_Ship_QNAME);
            _bodyBlock.setValue(_myShip);
            _bodyBlock.setSerializer(myns1_Ship__Ship_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/Ship");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of createGroup
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Group createGroup(java.lang.String carrier, java.lang.String grouping_symbol, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackageRequest pkg_req)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CreateGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CreateGroup"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateGroup _myCreateGroup = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateGroup();
            _myCreateGroup.setCarrier(carrier);
            _myCreateGroup.setGrouping_symbol(grouping_symbol);
            _myCreateGroup.setPkg_req(pkg_req);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CreateGroup_CreateGroup_QNAME);
            _bodyBlock.setValue(_myCreateGroup);
            _bodyBlock.setSerializer(myns1_CreateGroup__CreateGroup_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CreateGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateGroupResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateGroupResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateGroupResponse)_responseObj;
            }
            
            return _result.getCreateGroupResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of modifyGroup
     */
    public boolean modifyGroup(java.lang.String carrier, java.lang.String grouping_symbol, java.lang.String group_id, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackageRequest pkg_req)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ModifyGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ModifyGroup"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyGroup _myModifyGroup = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyGroup();
            _myModifyGroup.setCarrier(carrier);
            _myModifyGroup.setGrouping_symbol(grouping_symbol);
            _myModifyGroup.setGroup_id(group_id);
            _myModifyGroup.setPkg_req(pkg_req);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ModifyGroup_ModifyGroup_QNAME);
            _bodyBlock.setValue(_myModifyGroup);
            _bodyBlock.setSerializer(myns1_ModifyGroup__ModifyGroup_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ModifyGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyGroupResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyGroupResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyGroupResponse)_responseObj;
            }
            
            return _result.isModifyGroupResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of commodityCondition
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum commodityCondition()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CommodityCondition_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CommodityCondition"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityCondition _myCommodityCondition = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityCondition();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CommodityCondition_CommodityCondition_QNAME);
            _bodyBlock.setValue(_myCommodityCondition);
            _bodyBlock.setSerializer(myns1_CommodityCondition__CommodityCondition_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CommodityCondition");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityConditionResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityConditionResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityConditionResponse)_responseObj;
            }
            
            return _result.getCommodityConditionResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of brokerageMethod
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum brokerageMethod()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(BrokerageMethod_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","BrokerageMethod"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BrokerageMethod _myBrokerageMethod = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BrokerageMethod();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_BrokerageMethod_BrokerageMethod_QNAME);
            _bodyBlock.setValue(_myBrokerageMethod);
            _bodyBlock.setSerializer(myns1_BrokerageMethod__BrokerageMethod_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/BrokerageMethod");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BrokerageMethodResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BrokerageMethodResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BrokerageMethodResponse)_responseObj;
            }
            
            return _result.getBrokerageMethodResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByShipperAndShipdateAndStatus
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperAndShipdateAndStatus(java.lang.String shipper, java.lang.String shipdate, int recordsToReturn, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchCloseoutStatus searchCloseoutStatus)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByShipperAndShipdateAndStatus_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByShipperAndShipdateAndStatus"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateAndStatus _mySearchByShipperAndShipdateAndStatus = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateAndStatus();
            _mySearchByShipperAndShipdateAndStatus.setShipper(shipper);
            _mySearchByShipperAndShipdateAndStatus.setShipdate(shipdate);
            _mySearchByShipperAndShipdateAndStatus.setRecordsToReturn(recordsToReturn);
            _mySearchByShipperAndShipdateAndStatus.setSearchCloseoutStatus(searchCloseoutStatus);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByShipperAndShipdateAndStatus_SearchByShipperAndShipdateAndStatus_QNAME);
            _bodyBlock.setValue(_mySearchByShipperAndShipdateAndStatus);
            _bodyBlock.setSerializer(myns1_SearchByShipperAndShipdateAndStatus__SearchByShipperAndShipdateAndStatus_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByShipperAndShipdateAndStatus");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateAndStatusResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateAndStatusResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateAndStatusResponse)_responseObj;
            }
            
            return _result.getSearchByShipperAndShipdateAndStatusResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of alcoholTypes
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum alcoholTypes()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(AlcoholTypes_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","AlcoholTypes"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholTypes _myAlcoholTypes = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholTypes();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_AlcoholTypes_AlcoholTypes_QNAME);
            _bodyBlock.setValue(_myAlcoholTypes);
            _bodyBlock.setSerializer(myns1_AlcoholTypes__AlcoholTypes_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/AlcoholTypes");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholTypesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholTypesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholTypesResponse)_responseObj;
            }
            
            return _result.getAlcoholTypesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getDocumentProfiles
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DocumentProfile[] getDocumentProfiles()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetDocumentProfiles_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetDocumentProfiles"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfiles _myGetDocumentProfiles = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfiles();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetDocumentProfiles_GetDocumentProfiles_QNAME);
            _bodyBlock.setValue(_myGetDocumentProfiles);
            _bodyBlock.setSerializer(myns1_GetDocumentProfiles__GetDocumentProfiles_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetDocumentProfiles");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfilesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfilesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfilesResponse)_responseObj;
            }
            
            return _result.getGetDocumentProfilesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of insertSoxDbPackage
     */
    public void insertSoxDbPackage(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package pkg)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(InsertSoxDbPackage_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","InsertSoxDbPackage"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InsertSoxDbPackage _myInsertSoxDbPackage = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InsertSoxDbPackage();
            _myInsertSoxDbPackage.setPkg(pkg);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_InsertSoxDbPackage_InsertSoxDbPackage_QNAME);
            _bodyBlock.setValue(_myInsertSoxDbPackage);
            _bodyBlock.setSerializer(myns1_InsertSoxDbPackage__InsertSoxDbPackage_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/InsertSoxDbPackage");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByFilter
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByFilter(java.lang.String filter, int recordsToReturn, java.lang.String order_by)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByFilter_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByFilter"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFilter _mySearchByFilter = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFilter();
            _mySearchByFilter.setFilter(filter);
            _mySearchByFilter.setRecordsToReturn(recordsToReturn);
            _mySearchByFilter.setOrder_by(order_by);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByFilter_SearchByFilter_QNAME);
            _bodyBlock.setValue(_mySearchByFilter);
            _bodyBlock.setSerializer(myns1_SearchByFilter__SearchByFilter_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByFilter");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFilterResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFilterResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFilterResponse)_responseObj;
            }
            
            return _result.getSearchByFilterResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByShipperAndShipdate
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperAndShipdate(java.lang.String shipper, java.lang.String shipdate)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByShipperAndShipdate_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByShipperAndShipdate"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdate _mySearchByShipperAndShipdate = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdate();
            _mySearchByShipperAndShipdate.setShipper(shipper);
            _mySearchByShipperAndShipdate.setShipdate(shipdate);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByShipperAndShipdate_SearchByShipperAndShipdate_QNAME);
            _bodyBlock.setValue(_mySearchByShipperAndShipdate);
            _bodyBlock.setSerializer(myns1_SearchByShipperAndShipdate__SearchByShipperAndShipdate_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByShipperAndShipdate");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateResponse)_responseObj;
            }
            
            return _result.getSearchByShipperAndShipdateResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getGroup
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Group getGroup(java.lang.String carrier, java.lang.String grouping_symbol, java.lang.String group_id)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetGroup"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroup _myGetGroup = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroup();
            _myGetGroup.setCarrier(carrier);
            _myGetGroup.setGrouping_symbol(grouping_symbol);
            _myGetGroup.setGroup_id(group_id);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetGroup_GetGroup_QNAME);
            _bodyBlock.setValue(_myGetGroup);
            _bodyBlock.setSerializer(myns1_GetGroup__GetGroup_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupResponse)_responseObj;
            }
            
            return _result.getGetGroupResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getCurrencyByCountry
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxCurrency getCurrencyByCountry(java.lang.String country_symbol)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetCurrencyByCountry_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetCurrencyByCountry"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountry _myGetCurrencyByCountry = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountry();
            _myGetCurrencyByCountry.setCountry_symbol(country_symbol);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetCurrencyByCountry_GetCurrencyByCountry_QNAME);
            _bodyBlock.setValue(_myGetCurrencyByCountry);
            _bodyBlock.setSerializer(myns1_GetCurrencyByCountry__GetCurrencyByCountry_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetCurrencyByCountry");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountryResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountryResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountryResponse)_responseObj;
            }
            
            return _result.getGetCurrencyByCountryResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getSearchFieldswithType
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getSearchFieldswithType()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetSearchFieldswithType_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetSearchFieldswithType"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldswithType _myGetSearchFieldswithType = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldswithType();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetSearchFieldswithType_GetSearchFieldswithType_QNAME);
            _bodyBlock.setValue(_myGetSearchFieldswithType);
            _bodyBlock.setSerializer(myns1_GetSearchFieldswithType__GetSearchFieldswithType_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetSearchFieldswithType");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldswithTypeResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldswithTypeResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldswithTypeResponse)_responseObj;
            }
            
            return _result.getGetSearchFieldswithTypeResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getServicesbyCarriers
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getServicesbyCarriers(java.lang.String[] carriers)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetServicesbyCarriers_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetServicesbyCarriers"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServicesbyCarriers _myGetServicesbyCarriers = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServicesbyCarriers();
            _myGetServicesbyCarriers.setCarriers(carriers);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetServicesbyCarriers_GetServicesbyCarriers_QNAME);
            _bodyBlock.setValue(_myGetServicesbyCarriers);
            _bodyBlock.setSerializer(myns1_GetServicesbyCarriers__GetServicesbyCarriers_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetServicesbyCarriers");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServicesbyCarriersResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServicesbyCarriersResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServicesbyCarriersResponse)_responseObj;
            }
            
            return _result.getGetServicesbyCarriersResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getCommitments
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getCommitments()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetCommitments_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetCommitments"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommitments _myGetCommitments = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommitments();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetCommitments_GetCommitments_QNAME);
            _bodyBlock.setValue(_myGetCommitments);
            _bodyBlock.setSerializer(myns1_GetCommitments__GetCommitments_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetCommitments");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommitmentsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommitmentsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommitmentsResponse)_responseObj;
            }
            
            return _result.getGetCommitmentsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of voidPackageByGlobalMsn
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByGlobalMsnResponse voidPackageByGlobalMsn(long global_msn, java.lang.String carrier, java.lang.String shipper, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(VoidPackageByGlobalMsn_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","VoidPackageByGlobalMsn"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByGlobalMsn _myVoidPackageByGlobalMsn = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByGlobalMsn();
            _myVoidPackageByGlobalMsn.setGlobal_msn(global_msn);
            _myVoidPackageByGlobalMsn.setCarrier(carrier);
            _myVoidPackageByGlobalMsn.setShipper(shipper);
            _myVoidPackageByGlobalMsn.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_VoidPackageByGlobalMsn_VoidPackageByGlobalMsn_QNAME);
            _bodyBlock.setValue(_myVoidPackageByGlobalMsn);
            _bodyBlock.setSerializer(myns1_VoidPackageByGlobalMsn__VoidPackageByGlobalMsn_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/VoidPackageByGlobalMsn");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByGlobalMsnResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByGlobalMsnResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByGlobalMsnResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of printDocument
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintDocumentResponse printDocument(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDocument document, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printer, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(PrintDocument_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","PrintDocument"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintDocument _myPrintDocument = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintDocument();
            _myPrintDocument.setDocument(document);
            _myPrintDocument.setPrinter(printer);
            _myPrintDocument.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_PrintDocument_PrintDocument_QNAME);
            _bodyBlock.setValue(_myPrintDocument);
            _bodyBlock.setSerializer(myns1_PrintDocument__PrintDocument_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/PrintDocument");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintDocumentResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintDocumentResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintDocumentResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of returnDeliveryMethods
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum returnDeliveryMethods()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ReturnDeliveryMethods_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ReturnDeliveryMethods"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnDeliveryMethods _myReturnDeliveryMethods = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnDeliveryMethods();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ReturnDeliveryMethods_ReturnDeliveryMethods_QNAME);
            _bodyBlock.setValue(_myReturnDeliveryMethods);
            _bodyBlock.setSerializer(myns1_ReturnDeliveryMethods__ReturnDeliveryMethods_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ReturnDeliveryMethods");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnDeliveryMethodsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnDeliveryMethodsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnDeliveryMethodsResponse)_responseObj;
            }
            
            return _result.getReturnDeliveryMethodsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getIncoterms
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getIncoterms()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetIncoterms_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetIncoterms"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetIncoterms _myGetIncoterms = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetIncoterms();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetIncoterms_GetIncoterms_QNAME);
            _bodyBlock.setValue(_myGetIncoterms);
            _bodyBlock.setSerializer(myns1_GetIncoterms__GetIncoterms_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetIncoterms");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetIncotermsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetIncotermsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetIncotermsResponse)_responseObj;
            }
            
            return _result.getGetIncotermsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getPrinter
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer getPrinter(int printer_id)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetPrinter_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetPrinter"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPrinter _myGetPrinter = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPrinter();
            _myGetPrinter.setPrinter_id(printer_id);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetPrinter_GetPrinter_QNAME);
            _bodyBlock.setValue(_myGetPrinter);
            _bodyBlock.setSerializer(myns1_GetPrinter__GetPrinter_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetPrinter");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPrinterResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPrinterResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPrinterResponse)_responseObj;
            }
            
            return _result.getGetPrinterResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByShipFileID
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipFileID(long shipFileID, java.lang.String carrier, int recordsToReturn)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByShipFileID_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByShipFileID"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipFileID _mySearchByShipFileID = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipFileID();
            _mySearchByShipFileID.setShipFileID(shipFileID);
            _mySearchByShipFileID.setCarrier(carrier);
            _mySearchByShipFileID.setRecordsToReturn(recordsToReturn);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByShipFileID_SearchByShipFileID_QNAME);
            _bodyBlock.setValue(_mySearchByShipFileID);
            _bodyBlock.setSerializer(myns1_SearchByShipFileID__SearchByShipFileID_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByShipFileID");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipFileIDResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipFileIDResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipFileIDResponse)_responseObj;
            }
            
            return _result.getSearchByShipFileIDResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of closeOutBySymbolsAndPrint
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsAndPrintResponse closeOutBySymbolsAndPrint(java.lang.String carrier, java.lang.String shipper, java.lang.String[] closeOutItems, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CloseOutBySymbolsAndPrint_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CloseOutBySymbolsAndPrint"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsAndPrint _myCloseOutBySymbolsAndPrint = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsAndPrint();
            _myCloseOutBySymbolsAndPrint.setCarrier(carrier);
            _myCloseOutBySymbolsAndPrint.setShipper(shipper);
            _myCloseOutBySymbolsAndPrint.setCloseOutItems(closeOutItems);
            _myCloseOutBySymbolsAndPrint.setPrintRequest(printRequest);
            _myCloseOutBySymbolsAndPrint.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CloseOutBySymbolsAndPrint_CloseOutBySymbolsAndPrint_QNAME);
            _bodyBlock.setValue(_myCloseOutBySymbolsAndPrint);
            _bodyBlock.setSerializer(myns1_CloseOutBySymbolsAndPrint__CloseOutBySymbolsAndPrint_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CloseOutBySymbolsAndPrint");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsAndPrintResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsAndPrintResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsAndPrintResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getAvailablePrinterStocks
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getAvailablePrinterStocks()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetAvailablePrinterStocks_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetAvailablePrinterStocks"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrinterStocks _myGetAvailablePrinterStocks = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrinterStocks();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetAvailablePrinterStocks_GetAvailablePrinterStocks_QNAME);
            _bodyBlock.setValue(_myGetAvailablePrinterStocks);
            _bodyBlock.setSerializer(myns1_GetAvailablePrinterStocks__GetAvailablePrinterStocks_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetAvailablePrinterStocks");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrinterStocksResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrinterStocksResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrinterStocksResponse)_responseObj;
            }
            
            return _result.getGetAvailablePrinterStocksResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of updateSoxDbPackage
     */
    public void updateSoxDbPackage(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package pkg)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(UpdateSoxDbPackage_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","UpdateSoxDbPackage"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdateSoxDbPackage _myUpdateSoxDbPackage = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdateSoxDbPackage();
            _myUpdateSoxDbPackage.setPkg(pkg);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_UpdateSoxDbPackage_UpdateSoxDbPackage_QNAME);
            _bodyBlock.setValue(_myUpdateSoxDbPackage);
            _bodyBlock.setSerializer(myns1_UpdateSoxDbPackage__UpdateSoxDbPackage_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/UpdateSoxDbPackage");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of hazmatPackingGroups
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazmatPackingGroups()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(HazmatPackingGroups_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","HazmatPackingGroups"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPackingGroups _myHazmatPackingGroups = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPackingGroups();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_HazmatPackingGroups_HazmatPackingGroups_QNAME);
            _bodyBlock.setValue(_myHazmatPackingGroups);
            _bodyBlock.setSerializer(myns1_HazmatPackingGroups__HazmatPackingGroups_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/HazmatPackingGroups");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPackingGroupsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPackingGroupsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPackingGroupsResponse)_responseObj;
            }
            
            return _result.getHazmatPackingGroupsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getDeleteTransmitItemsList
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getDeleteTransmitItemsList(java.lang.String carrier, java.lang.String shipper)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetDeleteTransmitItemsList_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetDeleteTransmitItemsList"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeleteTransmitItemsList _myGetDeleteTransmitItemsList = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeleteTransmitItemsList();
            _myGetDeleteTransmitItemsList.setCarrier(carrier);
            _myGetDeleteTransmitItemsList.setShipper(shipper);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetDeleteTransmitItemsList_GetDeleteTransmitItemsList_QNAME);
            _bodyBlock.setValue(_myGetDeleteTransmitItemsList);
            _bodyBlock.setSerializer(myns1_GetDeleteTransmitItemsList__GetDeleteTransmitItemsList_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetDeleteTransmitItemsList");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeleteTransmitItemsListResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeleteTransmitItemsListResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeleteTransmitItemsListResponse)_responseObj;
            }
            
            return _result.getGetDeleteTransmitItemsListResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of addShipper
     */
    public void addShipper(java.lang.String shipperSymbol, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress nameAddress)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(AddShipper_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","AddShipper"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddShipper _myAddShipper = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddShipper();
            _myAddShipper.setShipperSymbol(shipperSymbol);
            _myAddShipper.setNameAddress(nameAddress);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_AddShipper_AddShipper_QNAME);
            _bodyBlock.setValue(_myAddShipper);
            _bodyBlock.setSerializer(myns1_AddShipper__AddShipper_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/AddShipper");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of removeBatch
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn removeBatch(java.lang.String batchReference)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(RemoveBatch_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","RemoveBatch"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatch _myRemoveBatch = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatch();
            _myRemoveBatch.setBatchReference(batchReference);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_RemoveBatch_RemoveBatch_QNAME);
            _bodyBlock.setValue(_myRemoveBatch);
            _bodyBlock.setSerializer(myns1_RemoveBatch__RemoveBatch_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/RemoveBatch");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatchResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatchResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatchResponse)_responseObj;
            }
            
            return _result.getRemoveBatchResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of dispositionMethods
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum dispositionMethods()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DispositionMethods_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","DispositionMethods"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DispositionMethods _myDispositionMethods = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DispositionMethods();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DispositionMethods_DispositionMethods_QNAME);
            _bodyBlock.setValue(_myDispositionMethods);
            _bodyBlock.setSerializer(myns1_DispositionMethods__DispositionMethods_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/DispositionMethods");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DispositionMethodsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DispositionMethodsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DispositionMethodsResponse)_responseObj;
            }
            
            return _result.getDispositionMethodsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getShippers
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getShippers()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetShippers_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetShippers"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShippers _myGetShippers = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShippers();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetShippers_GetShippers_QNAME);
            _bodyBlock.setValue(_myGetShippers);
            _bodyBlock.setSerializer(myns1_GetShippers__GetShippers_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetShippers");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShippersResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShippersResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShippersResponse)_responseObj;
            }
            
            return _result.getGetShippersResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isValidShipDate
     */
    public boolean isValidShipDate(java.lang.String carrier, java.lang.String ship_date, java.lang.String origin_country, boolean ship_on_sat)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(IsValidShipDate_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","IsValidShipDate"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.IsValidShipDate _myIsValidShipDate = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.IsValidShipDate();
            _myIsValidShipDate.setCarrier(carrier);
            _myIsValidShipDate.setShip_date(ship_date);
            _myIsValidShipDate.setOrigin_country(origin_country);
            _myIsValidShipDate.setShip_on_sat(ship_on_sat);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_IsValidShipDate_IsValidShipDate_QNAME);
            _bodyBlock.setValue(_myIsValidShipDate);
            _bodyBlock.setSerializer(myns1_IsValidShipDate__IsValidShipDate_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/IsValidShipDate");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.IsValidShipDateResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.IsValidShipDateResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.IsValidShipDateResponse)_responseObj;
            }
            
            return _result.isIsValidShipDateResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of load
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadResponse load(java.lang.String key, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(Load_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","Load"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Load _myLoad = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Load();
            _myLoad.setKey(key);
            _myLoad.setShipmentRequest(shipmentRequest);
            _myLoad.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_Load_Load_QNAME);
            _bodyBlock.setValue(_myLoad);
            _bodyBlock.setSerializer(myns1_Load__Load_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/Load");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getCloseOutItems
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutItem[] getCloseOutItems(java.lang.String carrier, java.lang.String shipper)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetCloseOutItems_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetCloseOutItems"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutItems _myGetCloseOutItems = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutItems();
            _myGetCloseOutItems.setCarrier(carrier);
            _myGetCloseOutItems.setShipper(shipper);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetCloseOutItems_GetCloseOutItems_QNAME);
            _bodyBlock.setValue(_myGetCloseOutItems);
            _bodyBlock.setSerializer(myns1_GetCloseOutItems__GetCloseOutItems_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetCloseOutItems");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutItemsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutItemsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutItemsResponse)_responseObj;
            }
            
            return _result.getGetCloseOutItemsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getStagedBatch
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchRequest getStagedBatch(java.lang.String batchReference)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetStagedBatch_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetStagedBatch"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatch _myGetStagedBatch = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatch();
            _myGetStagedBatch.setBatchReference(batchReference);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetStagedBatch_GetStagedBatch_QNAME);
            _bodyBlock.setValue(_myGetStagedBatch);
            _bodyBlock.setSerializer(myns1_GetStagedBatch__GetStagedBatch_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetStagedBatch");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatchResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatchResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatchResponse)_responseObj;
            }
            
            return _result.getGetStagedBatchResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getScales
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getScales()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetScales_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetScales"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetScales _myGetScales = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetScales();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetScales_GetScales_QNAME);
            _bodyBlock.setValue(_myGetScales);
            _bodyBlock.setSerializer(myns1_GetScales__GetScales_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetScales");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetScalesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetScalesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetScalesResponse)_responseObj;
            }
            
            return _result.getGetScalesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getDeviceDrivers
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getDeviceDrivers()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetDeviceDrivers_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetDeviceDrivers"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeviceDrivers _myGetDeviceDrivers = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeviceDrivers();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetDeviceDrivers_GetDeviceDrivers_QNAME);
            _bodyBlock.setValue(_myGetDeviceDrivers);
            _bodyBlock.setSerializer(myns1_GetDeviceDrivers__GetDeviceDrivers_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetDeviceDrivers");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeviceDriversResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeviceDriversResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeviceDriversResponse)_responseObj;
            }
            
            return _result.getGetDeviceDriversResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of additionalHandlingTypes
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum additionalHandlingTypes()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(AdditionalHandlingTypes_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","AdditionalHandlingTypes"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AdditionalHandlingTypes _myAdditionalHandlingTypes = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AdditionalHandlingTypes();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_AdditionalHandlingTypes_AdditionalHandlingTypes_QNAME);
            _bodyBlock.setValue(_myAdditionalHandlingTypes);
            _bodyBlock.setSerializer(myns1_AdditionalHandlingTypes__AdditionalHandlingTypes_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/AdditionalHandlingTypes");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AdditionalHandlingTypesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AdditionalHandlingTypesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AdditionalHandlingTypesResponse)_responseObj;
            }
            
            return _result.getAdditionalHandlingTypesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of transmitItems
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] transmitItems(java.lang.String carrier, java.lang.String shipper, java.lang.String[] itemsToTransmit, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(TransmitItems_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","TransmitItems"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItems _myTransmitItems = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItems();
            _myTransmitItems.setCarrier(carrier);
            _myTransmitItems.setShipper(shipper);
            _myTransmitItems.setItemsToTransmit(itemsToTransmit);
            _myTransmitItems.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_TransmitItems_TransmitItems_QNAME);
            _bodyBlock.setValue(_myTransmitItems);
            _bodyBlock.setSerializer(myns1_TransmitItems__TransmitItems_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/TransmitItems");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItemsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItemsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItemsResponse)_responseObj;
            }
            
            return _result.getParams();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getCurrencyByCountryLocale
     */
    public java.lang.String getCurrencyByCountryLocale(java.lang.String country_symbol)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetCurrencyByCountryLocale_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetCurrencyByCountryLocale"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountryLocale _myGetCurrencyByCountryLocale = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountryLocale();
            _myGetCurrencyByCountryLocale.setCountry_symbol(country_symbol);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetCurrencyByCountryLocale_GetCurrencyByCountryLocale_QNAME);
            _bodyBlock.setValue(_myGetCurrencyByCountryLocale);
            _bodyBlock.setSerializer(myns1_GetCurrencyByCountryLocale__GetCurrencyByCountryLocale_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetCurrencyByCountryLocale");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountryLocaleResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountryLocaleResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountryLocaleResponse)_responseObj;
            }
            
            return _result.getGetCurrencyByCountryLocaleResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of NAFTAProducer
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum NAFTAProducer()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(NAFTAProducer_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","NAFTAProducer"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAProducer _myNAFTAProducer = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAProducer();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_NAFTAProducer_NAFTAProducer_QNAME);
            _bodyBlock.setValue(_myNAFTAProducer);
            _bodyBlock.setSerializer(myns1_NAFTAProducer__NAFTAProducer_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/NAFTAProducer");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAProducerResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAProducerResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAProducerResponse)_responseObj;
            }
            
            return _result.getNAFTAProducerResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of addDocumentProfile
     */
    public boolean addDocumentProfile(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DocumentProfile documentProfile)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(AddDocumentProfile_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","AddDocumentProfile"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddDocumentProfile _myAddDocumentProfile = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddDocumentProfile();
            _myAddDocumentProfile.setDocumentProfile(documentProfile);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_AddDocumentProfile_AddDocumentProfile_QNAME);
            _bodyBlock.setValue(_myAddDocumentProfile);
            _bodyBlock.setSerializer(myns1_AddDocumentProfile__AddDocumentProfile_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/AddDocumentProfile");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddDocumentProfileResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddDocumentProfileResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddDocumentProfileResponse)_responseObj;
            }
            
            return _result.isAddDocumentProfileResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of printRequest
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequestResponse printRequest(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(PrintRequest_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","PrintRequest"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequestType _myPrintRequestType = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequestType();
            _myPrintRequestType.setPrintRequest(printRequest);
            _myPrintRequestType.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_PrintRequest_PrintRequest_QNAME);
            _bodyBlock.setValue(_myPrintRequestType);
            _bodyBlock.setSerializer(myns1_PrintRequestType__PrintRequestType_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/PrintRequest");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequestResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequestResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequestResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of hazmatLabels
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazmatLabels()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(HazmatLabels_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","HazmatLabels"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatLabels _myHazmatLabels = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatLabels();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_HazmatLabels_HazmatLabels_QNAME);
            _bodyBlock.setValue(_myHazmatLabels);
            _bodyBlock.setSerializer(myns1_HazmatLabels__HazmatLabels_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/HazmatLabels");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatLabelsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatLabelsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatLabelsResponse)_responseObj;
            }
            
            return _result.getHazmatLabelsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of SEDMethods
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum SEDMethods()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SEDMethods_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SEDMethods"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SEDMethods _mySEDMethods = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SEDMethods();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SEDMethods_SEDMethods_QNAME);
            _bodyBlock.setValue(_mySEDMethods);
            _bodyBlock.setSerializer(myns1_SEDMethods__SEDMethods_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SEDMethods");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SEDMethodsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SEDMethodsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SEDMethodsResponse)_responseObj;
            }
            
            return _result.getSEDMethodsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getPackageTypes
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getPackageTypes()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetPackageTypes_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetPackageTypes"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPackageTypes _myGetPackageTypes = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPackageTypes();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetPackageTypes_GetPackageTypes_QNAME);
            _bodyBlock.setValue(_myGetPackageTypes);
            _bodyBlock.setSerializer(myns1_GetPackageTypes__GetPackageTypes_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetPackageTypes");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPackageTypesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPackageTypesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPackageTypesResponse)_responseObj;
            }
            
            return _result.getGetPackageTypesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deleteHistoryItems
     */
    public void deleteHistoryItems(java.lang.String carrier, java.lang.String shipper, int[] historyItems)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DeleteHistoryItems_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","DeleteHistoryItems"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteHistoryItems _myDeleteHistoryItems = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteHistoryItems();
            _myDeleteHistoryItems.setCarrier(carrier);
            _myDeleteHistoryItems.setShipper(shipper);
            _myDeleteHistoryItems.setHistoryItems(historyItems);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DeleteHistoryItems_DeleteHistoryItems_QNAME);
            _bodyBlock.setValue(_myDeleteHistoryItems);
            _bodyBlock.setSerializer(myns1_DeleteHistoryItems__DeleteHistoryItems_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/DeleteHistoryItems");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getSearchFieldList
     */
    public java.lang.String[] getSearchFieldList()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetSearchFieldList_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetSearchFieldList"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldList _myGetSearchFieldList = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldList();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetSearchFieldList_GetSearchFieldList_QNAME);
            _bodyBlock.setValue(_myGetSearchFieldList);
            _bodyBlock.setSerializer(myns1_GetSearchFieldList__GetSearchFieldList_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetSearchFieldList");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldListResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldListResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldListResponse)_responseObj;
            }
            
            return _result.getGetSearchFieldListResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deleteShipper
     */
    public void deleteShipper(java.lang.String shipper)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DeleteShipper_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","DeleteShipper"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteShipper _myDeleteShipper = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteShipper();
            _myDeleteShipper.setShipper(shipper);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DeleteShipper_DeleteShipper_QNAME);
            _bodyBlock.setValue(_myDeleteShipper);
            _bodyBlock.setSerializer(myns1_DeleteShipper__DeleteShipper_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/DeleteShipper");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of app_Db_Version
     */
    public java.lang.String app_Db_Version()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(App_Db_Version_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","App_Db_Version"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.App_Db_Version _myApp_Db_Version = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.App_Db_Version();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_App_Db_Version_App_Db_Version_QNAME);
            _bodyBlock.setValue(_myApp_Db_Version);
            _bodyBlock.setSerializer(myns1_App_Db_Version__App_Db_Version_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/App_Db_Version");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.App_Db_VersionResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.App_Db_VersionResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.App_Db_VersionResponse)_responseObj;
            }
            
            return _result.getApp_Db_VersionResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of CODPaymentMethods
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum CODPaymentMethods()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CODPaymentMethods_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CODPaymentMethods"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODPaymentMethods _myCODPaymentMethods = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODPaymentMethods();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CODPaymentMethods_CODPaymentMethods_QNAME);
            _bodyBlock.setValue(_myCODPaymentMethods);
            _bodyBlock.setSerializer(myns1_CODPaymentMethods__CODPaymentMethods_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CODPaymentMethods");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODPaymentMethodsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODPaymentMethodsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODPaymentMethodsResponse)_responseObj;
            }
            
            return _result.getCODPaymentMethodsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of inspectNameAddress
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] inspectNameAddress(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress na)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(InspectNameAddress_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","InspectNameAddress"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InspectNameAddress _myInspectNameAddress = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InspectNameAddress();
            _myInspectNameAddress.setNa(na);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_InspectNameAddress_InspectNameAddress_QNAME);
            _bodyBlock.setValue(_myInspectNameAddress);
            _bodyBlock.setSerializer(myns1_InspectNameAddress__InspectNameAddress_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/InspectNameAddress");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InspectNameAddressResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InspectNameAddressResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InspectNameAddressResponse)_responseObj;
            }
            
            return _result.getInspectNameAddressResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of hazMatRegulations
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazMatRegulations()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(HazMatRegulations_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","HazMatRegulations"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulations _myHazMatRegulations = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulations();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_HazMatRegulations_HazMatRegulations_QNAME);
            _bodyBlock.setValue(_myHazMatRegulations);
            _bodyBlock.setSerializer(myns1_HazMatRegulations__HazMatRegulations_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/HazMatRegulations");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulationsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulationsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulationsResponse)_responseObj;
            }
            
            return _result.getHazMatRegulationsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of reShip
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReShipResponse reShip(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package packageToReship, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ReShip_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ReShip"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReShip _myReShip = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReShip();
            _myReShip.setPackageToReship(packageToReship);
            _myReShip.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ReShip_ReShip_QNAME);
            _bodyBlock.setValue(_myReShip);
            _bodyBlock.setSerializer(myns1_ReShip__ReShip_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ReShip");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReShipResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReShipResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReShipResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of processBatch
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchResponse processBatch(java.lang.String batchReference, int batchMode, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ProcessBatch_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ProcessBatch"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatch _myProcessBatch = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatch();
            _myProcessBatch.setBatchReference(batchReference);
            _myProcessBatch.setBatchMode(batchMode);
            _myProcessBatch.setPrintRequest(printRequest);
            _myProcessBatch.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ProcessBatch_ProcessBatch_QNAME);
            _bodyBlock.setValue(_myProcessBatch);
            _bodyBlock.setSerializer(myns1_ProcessBatch__ProcessBatch_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ProcessBatch");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchResponse)_responseObj;
            }
            
            return _result.getProcessBatchResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of dryIcePurposes
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum dryIcePurposes()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DryIcePurposes_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","DryIcePurposes"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIcePurposes _myDryIcePurposes = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIcePurposes();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DryIcePurposes_DryIcePurposes_QNAME);
            _bodyBlock.setValue(_myDryIcePurposes);
            _bodyBlock.setSerializer(myns1_DryIcePurposes__DryIcePurposes_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/DryIcePurposes");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIcePurposesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIcePurposesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIcePurposesResponse)_responseObj;
            }
            
            return _result.getDryIcePurposesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByShipperAndShipdateWithCount
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperAndShipdateWithCount(java.lang.String shipper, java.lang.String shipdate, int recordsToReturn)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByShipperAndShipdateWithCount_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByShipperAndShipdateWithCount"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateWithCount _mySearchByShipperAndShipdateWithCount = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateWithCount();
            _mySearchByShipperAndShipdateWithCount.setShipper(shipper);
            _mySearchByShipperAndShipdateWithCount.setShipdate(shipdate);
            _mySearchByShipperAndShipdateWithCount.setRecordsToReturn(recordsToReturn);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByShipperAndShipdateWithCount_SearchByShipperAndShipdateWithCount_QNAME);
            _bodyBlock.setValue(_mySearchByShipperAndShipdateWithCount);
            _bodyBlock.setSerializer(myns1_SearchByShipperAndShipdateWithCount__SearchByShipperAndShipdateWithCount_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByShipperAndShipdateWithCount");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateWithCountResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateWithCountResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateWithCountResponse)_responseObj;
            }
            
            return _result.getSearchByShipperAndShipdateWithCountResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of instantiateWCF
     */
    public void instantiateWCF(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package _package)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(InstantiateWCF_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","InstantiateWCF"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InstantiateWCF _myInstantiateWCF = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InstantiateWCF();
            _myInstantiateWCF.setShipmentRequest(shipmentRequest);
            _myInstantiateWCF.set_package(_package);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_InstantiateWCF_InstantiateWCF_QNAME);
            _bodyBlock.setValue(_myInstantiateWCF);
            _bodyBlock.setSerializer(myns1_InstantiateWCF__InstantiateWCF_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/InstantiateWCF");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getServices
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getServices()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetServices_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetServices"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServices _myGetServices = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServices();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetServices_GetServices_QNAME);
            _bodyBlock.setValue(_myGetServices);
            _bodyBlock.setSerializer(myns1_GetServices__GetServices_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetServices");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServicesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServicesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServicesResponse)_responseObj;
            }
            
            return _result.getGetServicesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of changeShipperSymbol
     */
    public void changeShipperSymbol(java.lang.String currentShipper, java.lang.String newShipper)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ChangeShipperSymbol_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ChangeShipperSymbol"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ChangeShipperSymbol _myChangeShipperSymbol = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ChangeShipperSymbol();
            _myChangeShipperSymbol.setCurrentShipper(currentShipper);
            _myChangeShipperSymbol.setNewShipper(newShipper);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ChangeShipperSymbol_ChangeShipperSymbol_QNAME);
            _bodyBlock.setValue(_myChangeShipperSymbol);
            _bodyBlock.setSerializer(myns1_ChangeShipperSymbol__ChangeShipperSymbol_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ChangeShipperSymbol");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByTrackingNumberWithCount
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByTrackingNumberWithCount(java.lang.String trackingNumber, int recordsToReturn)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByTrackingNumberWithCount_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByTrackingNumberWithCount"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumberWithCount _mySearchByTrackingNumberWithCount = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumberWithCount();
            _mySearchByTrackingNumberWithCount.setTrackingNumber(trackingNumber);
            _mySearchByTrackingNumberWithCount.setRecordsToReturn(recordsToReturn);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByTrackingNumberWithCount_SearchByTrackingNumberWithCount_QNAME);
            _bodyBlock.setValue(_mySearchByTrackingNumberWithCount);
            _bodyBlock.setSerializer(myns1_SearchByTrackingNumberWithCount__SearchByTrackingNumberWithCount_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByTrackingNumberWithCount");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumberWithCountResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumberWithCountResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumberWithCountResponse)_responseObj;
            }
            
            return _result.getSearchByTrackingNumberWithCountResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getHistoryItemList
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getHistoryItemList(java.lang.String carrier, java.lang.String shipper)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetHistoryItemList_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetHistoryItemList"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHistoryItemList _myGetHistoryItemList = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHistoryItemList();
            _myGetHistoryItemList.setCarrier(carrier);
            _myGetHistoryItemList.setShipper(shipper);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetHistoryItemList_GetHistoryItemList_QNAME);
            _bodyBlock.setValue(_myGetHistoryItemList);
            _bodyBlock.setSerializer(myns1_GetHistoryItemList__GetHistoryItemList_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetHistoryItemList");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHistoryItemListResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHistoryItemListResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHistoryItemListResponse)_responseObj;
            }
            
            return _result.getGetHistoryItemListResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of addPrinter
     */
    public boolean addPrinter(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printer)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(AddPrinter_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","AddPrinter"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddPrinter _myAddPrinter = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddPrinter();
            _myAddPrinter.setPrinter(printer);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_AddPrinter_AddPrinter_QNAME);
            _bodyBlock.setValue(_myAddPrinter);
            _bodyBlock.setSerializer(myns1_AddPrinter__AddPrinter_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/AddPrinter");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddPrinterResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddPrinterResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddPrinterResponse)_responseObj;
            }
            
            return _result.isAddPrinterResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of exchangeMethods
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum exchangeMethods()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ExchangeMethods_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ExchangeMethods"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ExchangeMethods _myExchangeMethods = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ExchangeMethods();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ExchangeMethods_ExchangeMethods_QNAME);
            _bodyBlock.setValue(_myExchangeMethods);
            _bodyBlock.setSerializer(myns1_ExchangeMethods__ExchangeMethods_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ExchangeMethods");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ExchangeMethodsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ExchangeMethodsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ExchangeMethodsResponse)_responseObj;
            }
            
            return _result.getExchangeMethodsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of hazMatRegulationSets
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazMatRegulationSets()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(HazMatRegulationSets_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","HazMatRegulationSets"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulationSets _myHazMatRegulationSets = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulationSets();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_HazMatRegulationSets_HazMatRegulationSets_QNAME);
            _bodyBlock.setValue(_myHazMatRegulationSets);
            _bodyBlock.setSerializer(myns1_HazMatRegulationSets__HazMatRegulationSets_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/HazMatRegulationSets");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulationSetsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulationSetsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulationSetsResponse)_responseObj;
            }
            
            return _result.getHazMatRegulationSetsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of commercialInvoiceMethods
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum commercialInvoiceMethods()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CommercialInvoiceMethods_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CommercialInvoiceMethods"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommercialInvoiceMethods _myCommercialInvoiceMethods = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommercialInvoiceMethods();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CommercialInvoiceMethods_CommercialInvoiceMethods_QNAME);
            _bodyBlock.setValue(_myCommercialInvoiceMethods);
            _bodyBlock.setSerializer(myns1_CommercialInvoiceMethods__CommercialInvoiceMethods_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CommercialInvoiceMethods");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommercialInvoiceMethodsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommercialInvoiceMethodsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommercialInvoiceMethodsResponse)_responseObj;
            }
            
            return _result.getCommercialInvoiceMethodsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of dryIceRegulationSets
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum dryIceRegulationSets()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DryIceRegulationSets_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","DryIceRegulationSets"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIceRegulationSets _myDryIceRegulationSets = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIceRegulationSets();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DryIceRegulationSets_DryIceRegulationSets_QNAME);
            _bodyBlock.setValue(_myDryIceRegulationSets);
            _bodyBlock.setSerializer(myns1_DryIceRegulationSets__DryIceRegulationSets_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/DryIceRegulationSets");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIceRegulationSetsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIceRegulationSetsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIceRegulationSetsResponse)_responseObj;
            }
            
            return _result.getDryIceRegulationSetsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of closeOutModes
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum closeOutModes()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CloseOutModes_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CloseOutModes"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutModes _myCloseOutModes = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutModes();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CloseOutModes_CloseOutModes_QNAME);
            _bodyBlock.setValue(_myCloseOutModes);
            _bodyBlock.setSerializer(myns1_CloseOutModes__CloseOutModes_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CloseOutModes");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutModesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutModesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutModesResponse)_responseObj;
            }
            
            return _result.getCloseOutModesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deletePrinter
     */
    public boolean deletePrinter(int printer_id)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DeletePrinter_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","DeletePrinter"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeletePrinter _myDeletePrinter = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeletePrinter();
            _myDeletePrinter.setPrinter_id(printer_id);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DeletePrinter_DeletePrinter_QNAME);
            _bodyBlock.setValue(_myDeletePrinter);
            _bodyBlock.setSerializer(myns1_DeletePrinter__DeletePrinter_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/DeletePrinter");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeletePrinterResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeletePrinterResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeletePrinterResponse)_responseObj;
            }
            
            return _result.isDeletePrinterResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of modifyPackageList
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyPackageListResult modifyPackageList(java.lang.String carrier, int[] msnlist, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] packageAttributes)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ModifyPackageList_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ModifyPackageList"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyPackageList _myModifyPackageList = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyPackageList();
            _myModifyPackageList.setCarrier(carrier);
            _myModifyPackageList.setMsnlist(msnlist);
            _myModifyPackageList.setPackageAttributes(packageAttributes);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ModifyPackageList_ModifyPackageList_QNAME);
            _bodyBlock.setValue(_myModifyPackageList);
            _bodyBlock.setSerializer(myns1_ModifyPackageList__ModifyPackageList_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ModifyPackageList");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyPackageListResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyPackageListResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyPackageListResponse)_responseObj;
            }
            
            return _result.getModifyPackageListResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of shipOrder
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipOrderResponse shipOrder(java.lang.String value, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ShipOrder_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ShipOrder"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipOrder _myShipOrder = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipOrder();
            _myShipOrder.setValue(value);
            _myShipOrder.setShipmentRequest(shipmentRequest);
            _myShipOrder.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ShipOrder_ShipOrder_QNAME);
            _bodyBlock.setValue(_myShipOrder);
            _bodyBlock.setSerializer(myns1_ShipOrder__ShipOrder_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ShipOrder");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipOrderResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipOrderResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipOrderResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of reProcess
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReProcessResponse reProcess(java.lang.String carrier, int[] msnlist)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ReProcess_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ReProcess"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReProcess _myReProcess = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReProcess();
            _myReProcess.setCarrier(carrier);
            _myReProcess.setMsnlist(msnlist);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ReProcess_ReProcess_QNAME);
            _bodyBlock.setValue(_myReProcess);
            _bodyBlock.setSerializer(myns1_ReProcess__ReProcess_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ReProcess");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReProcessResponseType _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReProcessResponseType)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReProcessResponseType)_responseObj;
            }
            
            return _result.getReProcessResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getDocumentProfile
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DocumentProfile getDocumentProfile(int profile_id)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetDocumentProfile_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetDocumentProfile"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfile _myGetDocumentProfile = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfile();
            _myGetDocumentProfile.setProfile_id(profile_id);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetDocumentProfile_GetDocumentProfile_QNAME);
            _bodyBlock.setValue(_myGetDocumentProfile);
            _bodyBlock.setSerializer(myns1_GetDocumentProfile__GetDocumentProfile_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetDocumentProfile");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfileResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfileResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfileResponse)_responseObj;
            }
            
            return _result.getGetDocumentProfileResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of printPositionDocumentXml
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintPositionDocumentXmlResponse printPositionDocumentXml(java.lang.String pos_doc_xml, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printerSettings, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(PrintPositionDocumentXml_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","PrintPositionDocumentXml"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintPositionDocumentXml _myPrintPositionDocumentXml = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintPositionDocumentXml();
            _myPrintPositionDocumentXml.setPos_doc_xml(pos_doc_xml);
            _myPrintPositionDocumentXml.setPrinterSettings(printerSettings);
            _myPrintPositionDocumentXml.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_PrintPositionDocumentXml_PrintPositionDocumentXml_QNAME);
            _bodyBlock.setValue(_myPrintPositionDocumentXml);
            _bodyBlock.setSerializer(myns1_PrintPositionDocumentXml__PrintPositionDocumentXml_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/PrintPositionDocumentXml");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintPositionDocumentXmlResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintPositionDocumentXmlResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintPositionDocumentXmlResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getLanguages
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getLanguages()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetLanguages_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetLanguages"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetLanguages _myGetLanguages = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetLanguages();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetLanguages_GetLanguages_QNAME);
            _bodyBlock.setValue(_myGetLanguages);
            _bodyBlock.setSerializer(myns1_GetLanguages__GetLanguages_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetLanguages");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetLanguagesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetLanguagesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetLanguagesResponse)_responseObj;
            }
            
            return _result.getGetLanguagesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of chargesOnDocumentation
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum chargesOnDocumentation()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ChargesOnDocumentation_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ChargesOnDocumentation"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ChargesOnDocumentation _myChargesOnDocumentation = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ChargesOnDocumentation();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ChargesOnDocumentation_ChargesOnDocumentation_QNAME);
            _bodyBlock.setValue(_myChargesOnDocumentation);
            _bodyBlock.setSerializer(myns1_ChargesOnDocumentation__ChargesOnDocumentation_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ChargesOnDocumentation");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ChargesOnDocumentationResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ChargesOnDocumentationResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ChargesOnDocumentationResponse)_responseObj;
            }
            
            return _result.getChargesOnDocumentationResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getTransmitItemsByStatus
     */
    public java.lang.String[] getTransmitItemsByStatus(java.lang.String carrier, java.lang.String shipper, int status)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetTransmitItemsByStatus_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetTransmitItemsByStatus"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsByStatus _myGetTransmitItemsByStatus = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsByStatus();
            _myGetTransmitItemsByStatus.setCarrier(carrier);
            _myGetTransmitItemsByStatus.setShipper(shipper);
            _myGetTransmitItemsByStatus.setStatus(status);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetTransmitItemsByStatus_GetTransmitItemsByStatus_QNAME);
            _bodyBlock.setValue(_myGetTransmitItemsByStatus);
            _bodyBlock.setSerializer(myns1_GetTransmitItemsByStatus__GetTransmitItemsByStatus_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetTransmitItemsByStatus");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsByStatusResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsByStatusResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsByStatusResponse)_responseObj;
            }
            
            return _result.getGetTransmitItemsByStatusResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deliveryMethods
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum deliveryMethods()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DeliveryMethods_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","DeliveryMethods"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeliveryMethods _myDeliveryMethods = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeliveryMethods();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DeliveryMethods_DeliveryMethods_QNAME);
            _bodyBlock.setValue(_myDeliveryMethods);
            _bodyBlock.setSerializer(myns1_DeliveryMethods__DeliveryMethods_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/DeliveryMethods");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeliveryMethodsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeliveryMethodsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeliveryMethodsResponse)_responseObj;
            }
            
            return _result.getDeliveryMethodsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of voidPackagesByGlobalMsnList
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackagesByGlobalMsnListResponse voidPackagesByGlobalMsnList(long[] msnList, java.lang.String carrier, java.lang.String shipper, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(VoidPackagesByGlobalMsnList_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","VoidPackagesByGlobalMsnList"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackagesByGlobalMsnList _myVoidPackagesByGlobalMsnList = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackagesByGlobalMsnList();
            _myVoidPackagesByGlobalMsnList.setMsnList(msnList);
            _myVoidPackagesByGlobalMsnList.setCarrier(carrier);
            _myVoidPackagesByGlobalMsnList.setShipper(shipper);
            _myVoidPackagesByGlobalMsnList.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_VoidPackagesByGlobalMsnList_VoidPackagesByGlobalMsnList_QNAME);
            _bodyBlock.setValue(_myVoidPackagesByGlobalMsnList);
            _bodyBlock.setSerializer(myns1_VoidPackagesByGlobalMsnList__VoidPackagesByGlobalMsnList_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/VoidPackagesByGlobalMsnList");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackagesByGlobalMsnListResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackagesByGlobalMsnListResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackagesByGlobalMsnListResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of shipBatchItem
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentResponse shipBatchItem(java.lang.String batchReference, java.lang.String batchItemReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ShipBatchItem_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ShipBatchItem"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipBatchItem _myShipBatchItem = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipBatchItem();
            _myShipBatchItem.setBatchReference(batchReference);
            _myShipBatchItem.setBatchItemReference(batchItemReference);
            _myShipBatchItem.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ShipBatchItem_ShipBatchItem_QNAME);
            _bodyBlock.setValue(_myShipBatchItem);
            _bodyBlock.setSerializer(myns1_ShipBatchItem__ShipBatchItem_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ShipBatchItem");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipBatchItemResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipBatchItemResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipBatchItemResponse)_responseObj;
            }
            
            return _result.getShipBatchItemResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of updatePrinter
     */
    public boolean updatePrinter(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printer)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(UpdatePrinter_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","UpdatePrinter"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdatePrinter _myUpdatePrinter = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdatePrinter();
            _myUpdatePrinter.setPrinter(printer);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_UpdatePrinter_UpdatePrinter_QNAME);
            _bodyBlock.setValue(_myUpdatePrinter);
            _bodyBlock.setSerializer(myns1_UpdatePrinter__UpdatePrinter_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/UpdatePrinter");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdatePrinterResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdatePrinterResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdatePrinterResponse)_responseObj;
            }
            
            return _result.isUpdatePrinterResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByGlobalMsn
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package searchByGlobalMsn(long global_msn)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByGlobalMsn_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByGlobalMsn"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalMsn _mySearchByGlobalMsn = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalMsn();
            _mySearchByGlobalMsn.setGlobal_msn(global_msn);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByGlobalMsn_SearchByGlobalMsn_QNAME);
            _bodyBlock.setValue(_mySearchByGlobalMsn);
            _bodyBlock.setSerializer(myns1_SearchByGlobalMsn__SearchByGlobalMsn_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByGlobalMsn");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalMsnResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalMsnResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalMsnResponse)_responseObj;
            }
            
            return _result.getSearchByGlobalMsnResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of CSAdapter_Version
     */
    public java.lang.String CSAdapter_Version()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CSAdapter_Version_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CSAdapter_Version"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CSAdapter_Version _myCSAdapter_Version = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CSAdapter_Version();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CSAdapter_Version_CSAdapter_Version_QNAME);
            _bodyBlock.setValue(_myCSAdapter_Version);
            _bodyBlock.setSerializer(myns1_CSAdapter_Version__CSAdapter_Version_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CSAdapter_Version");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CSAdapter_VersionResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CSAdapter_VersionResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CSAdapter_VersionResponse)_responseObj;
            }
            
            return _result.getCSAdapter_VersionResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of CODReturnMethods
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum CODReturnMethods()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CODReturnMethods_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CODReturnMethods"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODReturnMethods _myCODReturnMethods = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODReturnMethods();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CODReturnMethods_CODReturnMethods_QNAME);
            _bodyBlock.setValue(_myCODReturnMethods);
            _bodyBlock.setSerializer(myns1_CODReturnMethods__CODReturnMethods_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CODReturnMethods");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODReturnMethodsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODReturnMethodsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODReturnMethodsResponse)_responseObj;
            }
            
            return _result.getCODReturnMethodsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of processBatchByRequest
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchResponse processBatchByRequest(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchRequest batchRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchMode batchMode, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ProcessBatchByRequest_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ProcessBatchByRequest"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchByRequest _myProcessBatchByRequest = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchByRequest();
            _myProcessBatchByRequest.setBatchRequest(batchRequest);
            _myProcessBatchByRequest.setBatchMode(batchMode);
            _myProcessBatchByRequest.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ProcessBatchByRequest_ProcessBatchByRequest_QNAME);
            _bodyBlock.setValue(_myProcessBatchByRequest);
            _bodyBlock.setSerializer(myns1_ProcessBatchByRequest__ProcessBatchByRequest_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ProcessBatchByRequest");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchByRequestResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchByRequestResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchByRequestResponse)_responseObj;
            }
            
            return _result.getProcessBatchByRequestResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of hazMatCACategories
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazMatCACategories()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(HazMatCACategories_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","HazMatCACategories"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatCACategories _myHazMatCACategories = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatCACategories();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_HazMatCACategories_HazMatCACategories_QNAME);
            _bodyBlock.setValue(_myHazMatCACategories);
            _bodyBlock.setSerializer(myns1_HazMatCACategories__HazMatCACategories_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/HazMatCACategories");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatCACategoriesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatCACategoriesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatCACategoriesResponse)_responseObj;
            }
            
            return _result.getHazMatCACategoriesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getNameAddressValidationCandidates
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddressValidationCandidate[] getNameAddressValidationCandidates(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress na, boolean useSimpleNameAddress)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetNameAddressValidationCandidates_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetNameAddressValidationCandidates"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidates _myGetNameAddressValidationCandidates = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidates();
            _myGetNameAddressValidationCandidates.setNa(na);
            _myGetNameAddressValidationCandidates.setUseSimpleNameAddress(useSimpleNameAddress);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetNameAddressValidationCandidates_GetNameAddressValidationCandidates_QNAME);
            _bodyBlock.setValue(_myGetNameAddressValidationCandidates);
            _bodyBlock.setSerializer(myns1_GetNameAddressValidationCandidates__GetNameAddressValidationCandidates_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetNameAddressValidationCandidates");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesResponse)_responseObj;
            }
            
            return _result.getGetNameAddressValidationCandidatesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getCurrencies
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxCurrency[] getCurrencies()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetCurrencies_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetCurrencies"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencies _myGetCurrencies = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencies();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetCurrencies_GetCurrencies_QNAME);
            _bodyBlock.setValue(_myGetCurrencies);
            _bodyBlock.setSerializer(myns1_GetCurrencies__GetCurrencies_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetCurrencies");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrenciesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrenciesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrenciesResponse)_responseObj;
            }
            
            return _result.getGetCurrenciesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getTransmitItemsAvailableForDeletion
     */
    public java.lang.String[] getTransmitItemsAvailableForDeletion(java.lang.String carrier, java.lang.String shipper)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetTransmitItemsAvailableForDeletion_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetTransmitItemsAvailableForDeletion"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsAvailableForDeletion _myGetTransmitItemsAvailableForDeletion = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsAvailableForDeletion();
            _myGetTransmitItemsAvailableForDeletion.setCarrier(carrier);
            _myGetTransmitItemsAvailableForDeletion.setShipper(shipper);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetTransmitItemsAvailableForDeletion_GetTransmitItemsAvailableForDeletion_QNAME);
            _bodyBlock.setValue(_myGetTransmitItemsAvailableForDeletion);
            _bodyBlock.setSerializer(myns1_GetTransmitItemsAvailableForDeletion__GetTransmitItemsAvailableForDeletion_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetTransmitItemsAvailableForDeletion");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsAvailableForDeletionResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsAvailableForDeletionResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsAvailableForDeletionResponse)_responseObj;
            }
            
            return _result.getGetTransmitItemsAvailableForDeletionResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByGlobalBundleId
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByGlobalBundleId(long global_bundle_id)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByGlobalBundleId_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByGlobalBundleId"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalBundleId _mySearchByGlobalBundleId = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalBundleId();
            _mySearchByGlobalBundleId.setGlobal_bundle_id(global_bundle_id);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByGlobalBundleId_SearchByGlobalBundleId_QNAME);
            _bodyBlock.setValue(_mySearchByGlobalBundleId);
            _bodyBlock.setSerializer(myns1_SearchByGlobalBundleId__SearchByGlobalBundleId_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByGlobalBundleId");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalBundleIdResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalBundleIdResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalBundleIdResponse)_responseObj;
            }
            
            return _result.getSearchByGlobalBundleIdResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getAvailablePrinters
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getAvailablePrinters()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetAvailablePrinters_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetAvailablePrinters"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrinters _myGetAvailablePrinters = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrinters();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetAvailablePrinters_GetAvailablePrinters_QNAME);
            _bodyBlock.setValue(_myGetAvailablePrinters);
            _bodyBlock.setSerializer(myns1_GetAvailablePrinters__GetAvailablePrinters_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetAvailablePrinters");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrintersResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrintersResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrintersResponse)_responseObj;
            }
            
            return _result.getGetAvailablePrintersResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getBatchShipmentErrors
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchRequest getBatchShipmentErrors(java.lang.String batchReference)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetBatchShipmentErrors_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetBatchShipmentErrors"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchShipmentErrors _myGetBatchShipmentErrors = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchShipmentErrors();
            _myGetBatchShipmentErrors.setBatchReference(batchReference);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetBatchShipmentErrors_GetBatchShipmentErrors_QNAME);
            _bodyBlock.setValue(_myGetBatchShipmentErrors);
            _bodyBlock.setSerializer(myns1_GetBatchShipmentErrors__GetBatchShipmentErrors_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetBatchShipmentErrors");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchShipmentErrorsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchShipmentErrorsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchShipmentErrorsResponse)_responseObj;
            }
            
            return _result.getGetBatchShipmentErrorsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of loadBatchItem
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest loadBatchItem(java.lang.String batchReference, java.lang.String batchItemReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(LoadBatchItem_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","LoadBatchItem"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchItem _myLoadBatchItem = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchItem();
            _myLoadBatchItem.setBatchReference(batchReference);
            _myLoadBatchItem.setBatchItemReference(batchItemReference);
            _myLoadBatchItem.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_LoadBatchItem_LoadBatchItem_QNAME);
            _bodyBlock.setValue(_myLoadBatchItem);
            _bodyBlock.setSerializer(myns1_LoadBatchItem__LoadBatchItem_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/LoadBatchItem");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchItemResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchItemResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchItemResponse)_responseObj;
            }
            
            return _result.getLoadBatchItemResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of stageBatch
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.StageBatchResponse stageBatch(java.lang.String batchReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(StageBatch_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","StageBatch"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.StageBatch _myStageBatch = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.StageBatch();
            _myStageBatch.setBatchReference(batchReference);
            _myStageBatch.setShipmentRequest(shipmentRequest);
            _myStageBatch.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_StageBatch_StageBatch_QNAME);
            _bodyBlock.setValue(_myStageBatch);
            _bodyBlock.setSerializer(myns1_StageBatch__StageBatch_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/StageBatch");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.StageBatchResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.StageBatchResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.StageBatchResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of copyPrinter
     */
    public int copyPrinter(int printer_id)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CopyPrinter_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CopyPrinter"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyPrinter _myCopyPrinter = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyPrinter();
            _myCopyPrinter.setPrinter_id(printer_id);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CopyPrinter_CopyPrinter_QNAME);
            _bodyBlock.setValue(_myCopyPrinter);
            _bodyBlock.setSerializer(myns1_CopyPrinter__CopyPrinter_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CopyPrinter");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyPrinterResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyPrinterResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyPrinterResponse)_responseObj;
            }
            
            return _result.getCopyPrinterResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deleteTransmitItems
     */
    public void deleteTransmitItems(java.lang.String carrier, java.lang.String shipper, java.lang.String[] itemsToDelete)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DeleteTransmitItems_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","DeleteTransmitItems"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteTransmitItems _myDeleteTransmitItems = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteTransmitItems();
            _myDeleteTransmitItems.setCarrier(carrier);
            _myDeleteTransmitItems.setShipper(shipper);
            _myDeleteTransmitItems.setItemsToDelete(itemsToDelete);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DeleteTransmitItems_DeleteTransmitItems_QNAME);
            _bodyBlock.setValue(_myDeleteTransmitItems);
            _bodyBlock.setSerializer(myns1_DeleteTransmitItems__DeleteTransmitItems_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/DeleteTransmitItems");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of NAFTARVCMethods
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum NAFTARVCMethods()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(NAFTARVCMethods_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","NAFTARVCMethods"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTARVCMethods _myNAFTARVCMethods = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTARVCMethods();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_NAFTARVCMethods_NAFTARVCMethods_QNAME);
            _bodyBlock.setValue(_myNAFTARVCMethods);
            _bodyBlock.setSerializer(myns1_NAFTARVCMethods__NAFTARVCMethods_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/NAFTARVCMethods");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTARVCMethodsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTARVCMethodsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTARVCMethodsResponse)_responseObj;
            }
            
            return _result.getNAFTARVCMethodsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of loadBatch
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchResponse loadBatch(java.lang.String batchReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(LoadBatch_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","LoadBatch"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatch _myLoadBatch = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatch();
            _myLoadBatch.setBatchReference(batchReference);
            _myLoadBatch.setShipmentRequest(shipmentRequest);
            _myLoadBatch.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_LoadBatch_LoadBatch_QNAME);
            _bodyBlock.setValue(_myLoadBatch);
            _bodyBlock.setSerializer(myns1_LoadBatch__LoadBatch_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/LoadBatch");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByConsigneeReference
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByConsigneeReference(java.lang.String consignee_reference)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByConsigneeReference_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByConsigneeReference"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReference _mySearchByConsigneeReference = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReference();
            _mySearchByConsigneeReference.setConsignee_reference(consignee_reference);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByConsigneeReference_SearchByConsigneeReference_QNAME);
            _bodyBlock.setValue(_mySearchByConsigneeReference);
            _bodyBlock.setSerializer(myns1_SearchByConsigneeReference__SearchByConsigneeReference_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByConsigneeReference");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReferenceResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReferenceResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReferenceResponse)_responseObj;
            }
            
            return _result.getSearchByConsigneeReferenceResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getNameAddressValidationCandidatesWithParams
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesWithParamsResponse getNameAddressValidationCandidatesWithParams(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress na, boolean useSimpleNameAddress, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetNameAddressValidationCandidatesWithParams_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetNameAddressValidationCandidatesWithParams"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesWithParams _myGetNameAddressValidationCandidatesWithParams = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesWithParams();
            _myGetNameAddressValidationCandidatesWithParams.setNa(na);
            _myGetNameAddressValidationCandidatesWithParams.setUseSimpleNameAddress(useSimpleNameAddress);
            _myGetNameAddressValidationCandidatesWithParams.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetNameAddressValidationCandidatesWithParams_GetNameAddressValidationCandidatesWithParams_QNAME);
            _bodyBlock.setValue(_myGetNameAddressValidationCandidatesWithParams);
            _bodyBlock.setSerializer(myns1_GetNameAddressValidationCandidatesWithParams__GetNameAddressValidationCandidatesWithParams_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetNameAddressValidationCandidatesWithParams");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesWithParamsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesWithParamsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesWithParamsResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getCarriersbyShippers
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getCarriersbyShippers(java.lang.String[] shippers)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetCarriersbyShippers_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetCarriersbyShippers"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriersbyShippers _myGetCarriersbyShippers = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriersbyShippers();
            _myGetCarriersbyShippers.setShippers(shippers);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetCarriersbyShippers_GetCarriersbyShippers_QNAME);
            _bodyBlock.setValue(_myGetCarriersbyShippers);
            _bodyBlock.setSerializer(myns1_GetCarriersbyShippers__GetCarriersbyShippers_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetCarriersbyShippers");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriersbyShippersResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriersbyShippersResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriersbyShippersResponse)_responseObj;
            }
            
            return _result.getGetCarriersbyShippersResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getGroupDocuments
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getGroupDocuments(java.lang.String carrier)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetGroupDocuments_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetGroupDocuments"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupDocuments _myGetGroupDocuments = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupDocuments();
            _myGetGroupDocuments.setCarrier(carrier);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetGroupDocuments_GetGroupDocuments_QNAME);
            _bodyBlock.setValue(_myGetGroupDocuments);
            _bodyBlock.setSerializer(myns1_GetGroupDocuments__GetGroupDocuments_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetGroupDocuments");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupDocumentsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupDocumentsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupDocumentsResponse)_responseObj;
            }
            
            return _result.getGetGroupDocumentsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of business_Object_Version
     */
    public java.lang.String business_Object_Version()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(Business_Object_Version_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","Business_Object_Version"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Business_Object_Version _myBusiness_Object_Version = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Business_Object_Version();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_Business_Object_Version_Business_Object_Version_QNAME);
            _bodyBlock.setValue(_myBusiness_Object_Version);
            _bodyBlock.setSerializer(myns1_Business_Object_Version__Business_Object_Version_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/Business_Object_Version");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Business_Object_VersionResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Business_Object_VersionResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Business_Object_VersionResponse)_responseObj;
            }
            
            return _result.getBusiness_Object_VersionResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getCarriers
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getCarriers()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetCarriers_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetCarriers"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriers _myGetCarriers = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriers();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetCarriers_GetCarriers_QNAME);
            _bodyBlock.setValue(_myGetCarriers);
            _bodyBlock.setSerializer(myns1_GetCarriers__GetCarriers_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetCarriers");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriersResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriersResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriersResponse)_responseObj;
            }
            
            return _result.getGetCarriersResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of setCloseOutMode
     */
    public void setCloseOutMode(java.lang.String carrier, long global_msn, int closeOutMode)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SetCloseOutMode_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SetCloseOutMode"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SetCloseOutMode _mySetCloseOutMode = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SetCloseOutMode();
            _mySetCloseOutMode.setCarrier(carrier);
            _mySetCloseOutMode.setGlobal_msn(global_msn);
            _mySetCloseOutMode.setCloseOutMode(closeOutMode);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SetCloseOutMode_SetCloseOutMode_QNAME);
            _bodyBlock.setValue(_mySetCloseOutMode);
            _bodyBlock.setSerializer(myns1_SetCloseOutMode__SetCloseOutMode_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SetCloseOutMode");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of returnAddressMethods
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum returnAddressMethods()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ReturnAddressMethods_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ReturnAddressMethods"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnAddressMethods _myReturnAddressMethods = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnAddressMethods();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ReturnAddressMethods_ReturnAddressMethods_QNAME);
            _bodyBlock.setValue(_myReturnAddressMethods);
            _bodyBlock.setSerializer(myns1_ReturnAddressMethods__ReturnAddressMethods_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ReturnAddressMethods");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnAddressMethodsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnAddressMethodsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnAddressMethodsResponse)_responseObj;
            }
            
            return _result.getReturnAddressMethodsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getGroupingTypes
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxGroupingType[] getGroupingTypes()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetGroupingTypes_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetGroupingTypes"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupingTypes _myGetGroupingTypes = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupingTypes();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetGroupingTypes_GetGroupingTypes_QNAME);
            _bodyBlock.setValue(_myGetGroupingTypes);
            _bodyBlock.setSerializer(myns1_GetGroupingTypes__GetGroupingTypes_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetGroupingTypes");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupingTypesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupingTypesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupingTypesResponse)_responseObj;
            }
            
            return _result.getGetGroupingTypesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByShipperReference
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperReference(java.lang.String shipper_reference)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByShipperReference_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByShipperReference"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReference _mySearchByShipperReference = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReference();
            _mySearchByShipperReference.setShipper_reference(shipper_reference);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByShipperReference_SearchByShipperReference_QNAME);
            _bodyBlock.setValue(_mySearchByShipperReference);
            _bodyBlock.setSerializer(myns1_SearchByShipperReference__SearchByShipperReference_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByShipperReference");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReferenceResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReferenceResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReferenceResponse)_responseObj;
            }
            
            return _result.getSearchByShipperReferenceResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of validateEntitlements
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LicenseValidationResponse[] validateEntitlements(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LicenseValidationRequest[] license_ids)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ValidateEntitlements_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ValidateEntitlements"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ValidateEntitlements _myValidateEntitlements = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ValidateEntitlements();
            _myValidateEntitlements.setLicense_ids(license_ids);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ValidateEntitlements_ValidateEntitlements_QNAME);
            _bodyBlock.setValue(_myValidateEntitlements);
            _bodyBlock.setSerializer(myns1_ValidateEntitlements__ValidateEntitlements_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ValidateEntitlements");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ValidateEntitlementsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ValidateEntitlementsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ValidateEntitlementsResponse)_responseObj;
            }
            
            return _result.getValidateEntitlementsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of openGroup
     */
    public boolean openGroup(java.lang.String carrier, java.lang.String grouping_symbol, java.lang.String group_id)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(OpenGroup_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","OpenGroup"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.OpenGroup _myOpenGroup = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.OpenGroup();
            _myOpenGroup.setCarrier(carrier);
            _myOpenGroup.setGrouping_symbol(grouping_symbol);
            _myOpenGroup.setGroup_id(group_id);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_OpenGroup_OpenGroup_QNAME);
            _bodyBlock.setValue(_myOpenGroup);
            _bodyBlock.setSerializer(myns1_OpenGroup__OpenGroup_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/OpenGroup");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.OpenGroupResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.OpenGroupResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.OpenGroupResponse)_responseObj;
            }
            
            return _result.isOpenGroupResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of NAFTAPreferenceCriterion
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum NAFTAPreferenceCriterion()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(NAFTAPreferenceCriterion_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","NAFTAPreferenceCriterion"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAPreferenceCriterion _myNAFTAPreferenceCriterion = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAPreferenceCriterion();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_NAFTAPreferenceCriterion_NAFTAPreferenceCriterion_QNAME);
            _bodyBlock.setValue(_myNAFTAPreferenceCriterion);
            _bodyBlock.setSerializer(myns1_NAFTAPreferenceCriterion__NAFTAPreferenceCriterion_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/NAFTAPreferenceCriterion");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAPreferenceCriterionResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAPreferenceCriterionResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAPreferenceCriterionResponse)_responseObj;
            }
            
            return _result.getNAFTAPreferenceCriterionResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of transmitItem
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] transmitItem(java.lang.String carrier, java.lang.String shipper, java.lang.String itemToTransmit, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(TransmitItem_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","TransmitItem"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItemType _myTransmitItemType = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItemType();
            _myTransmitItemType.setCarrier(carrier);
            _myTransmitItemType.setShipper(shipper);
            _myTransmitItemType.setItemToTransmit(itemToTransmit);
            _myTransmitItemType.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_TransmitItem_TransmitItem_QNAME);
            _bodyBlock.setValue(_myTransmitItemType);
            _bodyBlock.setSerializer(myns1_TransmitItemType__TransmitItemType_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/TransmitItem");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItemResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItemResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItemResponse)_responseObj;
            }
            
            return _result.getParams();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of searchByFilters
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByFilters(java.lang.String[] filters, int recordsToReturn, java.lang.String order_by)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(SearchByFilters_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","SearchByFilters"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFilters _mySearchByFilters = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFilters();
            _mySearchByFilters.setFilters(filters);
            _mySearchByFilters.setRecordsToReturn(recordsToReturn);
            _mySearchByFilters.setOrder_by(order_by);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_SearchByFilters_SearchByFilters_QNAME);
            _bodyBlock.setValue(_mySearchByFilters);
            _bodyBlock.setSerializer(myns1_SearchByFilters__SearchByFilters_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/SearchByFilters");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFiltersResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFiltersResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFiltersResponse)_responseObj;
            }
            
            return _result.getSearchByFiltersResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deleteDocumentProfile
     */
    public boolean deleteDocumentProfile(int profile_id)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DeleteDocumentProfile_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","DeleteDocumentProfile"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteDocumentProfile _myDeleteDocumentProfile = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteDocumentProfile();
            _myDeleteDocumentProfile.setProfile_id(profile_id);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DeleteDocumentProfile_DeleteDocumentProfile_QNAME);
            _bodyBlock.setValue(_myDeleteDocumentProfile);
            _bodyBlock.setSerializer(myns1_DeleteDocumentProfile__DeleteDocumentProfile_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/DeleteDocumentProfile");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteDocumentProfileResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteDocumentProfileResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteDocumentProfileResponse)_responseObj;
            }
            
            return _result.isDeleteDocumentProfileResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getStagedBatches
     */
    public java.lang.String[] getStagedBatches()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetStagedBatches_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetStagedBatches"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatches _myGetStagedBatches = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatches();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetStagedBatches_GetStagedBatches_QNAME);
            _bodyBlock.setValue(_myGetStagedBatches);
            _bodyBlock.setSerializer(myns1_GetStagedBatches__GetStagedBatches_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetStagedBatches");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatchesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatchesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatchesResponse)_responseObj;
            }
            
            return _result.getGetStagedBatchesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getGroups
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Group[] getGroups(java.lang.String carrier, java.lang.String grouping_symbol, int status_flag)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetGroups_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetGroups"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroups _myGetGroups = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroups();
            _myGetGroups.setCarrier(carrier);
            _myGetGroups.setGrouping_symbol(grouping_symbol);
            _myGetGroups.setStatus_flag(status_flag);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetGroups_GetGroups_QNAME);
            _bodyBlock.setValue(_myGetGroups);
            _bodyBlock.setSerializer(myns1_GetGroups__GetGroups_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetGroups");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupsResponse)_responseObj;
            }
            
            return _result.getGetGroupsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getBatchCount
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn getBatchCount(java.lang.String batchReference)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetBatchCount_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetBatchCount"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchCount _myGetBatchCount = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchCount();
            _myGetBatchCount.setBatchReference(batchReference);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetBatchCount_GetBatchCount_QNAME);
            _bodyBlock.setValue(_myGetBatchCount);
            _bodyBlock.setSerializer(myns1_GetBatchCount__GetBatchCount_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetBatchCount");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchCountResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchCountResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchCountResponse)_responseObj;
            }
            
            return _result.getGetBatchCountResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getHolidays
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Holiday[] getHolidays(java.lang.String carrier, java.lang.String origin_country)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetHolidays_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetHolidays"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHolidays _myGetHolidays = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHolidays();
            _myGetHolidays.setCarrier(carrier);
            _myGetHolidays.setOrigin_country(origin_country);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetHolidays_GetHolidays_QNAME);
            _bodyBlock.setValue(_myGetHolidays);
            _bodyBlock.setSerializer(myns1_GetHolidays__GetHolidays_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetHolidays");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHolidaysResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHolidaysResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHolidaysResponse)_responseObj;
            }
            
            return _result.getGetHolidaysResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of managementLayer_Version
     */
    public java.lang.String managementLayer_Version()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ManagementLayer_Version_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","ManagementLayer_Version"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ManagementLayer_Version _myManagementLayer_Version = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ManagementLayer_Version();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ManagementLayer_Version_ManagementLayer_Version_QNAME);
            _bodyBlock.setValue(_myManagementLayer_Version);
            _bodyBlock.setSerializer(myns1_ManagementLayer_Version__ManagementLayer_Version_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/ManagementLayer_Version");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ManagementLayer_VersionResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ManagementLayer_VersionResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ManagementLayer_VersionResponse)_responseObj;
            }
            
            return _result.getManagementLayer_VersionResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of areTransmitItemsAvailableForDeletion
     */
    public boolean areTransmitItemsAvailableForDeletion(java.lang.String carrier, java.lang.String shipper)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(AreTransmitItemsAvailableForDeletion_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","AreTransmitItemsAvailableForDeletion"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AreTransmitItemsAvailableForDeletion _myAreTransmitItemsAvailableForDeletion = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AreTransmitItemsAvailableForDeletion();
            _myAreTransmitItemsAvailableForDeletion.setCarrier(carrier);
            _myAreTransmitItemsAvailableForDeletion.setShipper(shipper);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_AreTransmitItemsAvailableForDeletion_AreTransmitItemsAvailableForDeletion_QNAME);
            _bodyBlock.setValue(_myAreTransmitItemsAvailableForDeletion);
            _bodyBlock.setSerializer(myns1_AreTransmitItemsAvailableForDeletion__AreTransmitItemsAvailableForDeletion_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/AreTransmitItemsAvailableForDeletion");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AreTransmitItemsAvailableForDeletionResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AreTransmitItemsAvailableForDeletionResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AreTransmitItemsAvailableForDeletionResponse)_responseObj;
            }
            
            return _result.isAreTransmitItemsAvailableForDeletionResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of copyDocumentProfile
     */
    public int copyDocumentProfile(int profile_id)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CopyDocumentProfile_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CopyDocumentProfile"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyDocumentProfile _myCopyDocumentProfile = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyDocumentProfile();
            _myCopyDocumentProfile.setProfile_id(profile_id);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CopyDocumentProfile_CopyDocumentProfile_QNAME);
            _bodyBlock.setValue(_myCopyDocumentProfile);
            _bodyBlock.setSerializer(myns1_CopyDocumentProfile__CopyDocumentProfile_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CopyDocumentProfile");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyDocumentProfileResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyDocumentProfileResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyDocumentProfileResponse)_responseObj;
            }
            
            return _result.getCopyDocumentProfileResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of rate
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateResponse rate(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest request, java.lang.String service, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(Rate_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","Rate"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Rate _myRate = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Rate();
            _myRate.setRequest(request);
            _myRate.setService(service);
            _myRate.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_Rate_Rate_QNAME);
            _bodyBlock.setValue(_myRate);
            _bodyBlock.setSerializer(myns1_Rate__Rate_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/Rate");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getDocumentFormats
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDoc[] getDocumentFormats(java.lang.String carrier)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetDocumentFormats_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetDocumentFormats"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentFormats _myGetDocumentFormats = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentFormats();
            _myGetDocumentFormats.setCarrier(carrier);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetDocumentFormats_GetDocumentFormats_QNAME);
            _bodyBlock.setValue(_myGetDocumentFormats);
            _bodyBlock.setSerializer(myns1_GetDocumentFormats__GetDocumentFormats_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetDocumentFormats");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentFormatsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentFormatsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentFormatsResponse)_responseObj;
            }
            
            return _result.getGetDocumentFormatsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getCloseOutMode
     */
    public int getCloseOutMode(java.lang.String carrier, long global_msn)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetCloseOutMode_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetCloseOutMode"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutMode _myGetCloseOutMode = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutMode();
            _myGetCloseOutMode.setCarrier(carrier);
            _myGetCloseOutMode.setGlobal_msn(global_msn);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetCloseOutMode_GetCloseOutMode_QNAME);
            _bodyBlock.setValue(_myGetCloseOutMode);
            _bodyBlock.setSerializer(myns1_GetCloseOutMode__GetCloseOutMode_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetCloseOutMode");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutModeResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutModeResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutModeResponse)_responseObj;
            }
            
            return _result.getGetCloseOutModeResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of rateServices
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateServicesResponse rateServices(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest request, java.lang.String[] services, int sortType, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(RateServices_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","RateServices"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateServices _myRateServices = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateServices();
            _myRateServices.setRequest(request);
            _myRateServices.setServices(services);
            _myRateServices.setSortType(sortType);
            _myRateServices.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_RateServices_RateServices_QNAME);
            _bodyBlock.setValue(_myRateServices);
            _bodyBlock.setSerializer(myns1_RateServices__RateServices_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/RateServices");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateServicesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateServicesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateServicesResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of printBatch
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDocument[] printBatch(java.lang.String batchReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(PrintBatch_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","PrintBatch"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintBatch _myPrintBatch = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintBatch();
            _myPrintBatch.setBatchReference(batchReference);
            _myPrintBatch.setPrintRequest(printRequest);
            _myPrintBatch.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_PrintBatch_PrintBatch_QNAME);
            _bodyBlock.setValue(_myPrintBatch);
            _bodyBlock.setSerializer(myns1_PrintBatch__PrintBatch_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/PrintBatch");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintBatchResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintBatchResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintBatchResponse)_responseObj;
            }
            
            return _result.getPrintBatchResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getGroupings
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Grouping[] getGroupings(java.lang.String carrier)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetGroupings_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetGroupings"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupings _myGetGroupings = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupings();
            _myGetGroupings.setCarrier(carrier);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetGroupings_GetGroupings_QNAME);
            _bodyBlock.setValue(_myGetGroupings);
            _bodyBlock.setSerializer(myns1_GetGroupings__GetGroupings_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetGroupings");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupingsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupingsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupingsResponse)_responseObj;
            }
            
            return _result.getGetGroupingsResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of alcoholPackaging
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum alcoholPackaging()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(AlcoholPackaging_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","AlcoholPackaging"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholPackaging _myAlcoholPackaging = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholPackaging();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_AlcoholPackaging_AlcoholPackaging_QNAME);
            _bodyBlock.setValue(_myAlcoholPackaging);
            _bodyBlock.setSerializer(myns1_AlcoholPackaging__AlcoholPackaging_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/AlcoholPackaging");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholPackagingResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholPackagingResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholPackagingResponse)_responseObj;
            }
            
            return _result.getAlcoholPackagingResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of deleteHistoryItem
     */
    public void deleteHistoryItem(java.lang.String carrier, java.lang.String shipper, int historyItem)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DeleteHistoryItem_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","DeleteHistoryItem"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteHistoryItem _myDeleteHistoryItem = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteHistoryItem();
            _myDeleteHistoryItem.setCarrier(carrier);
            _myDeleteHistoryItem.setShipper(shipper);
            _myDeleteHistoryItem.setHistoryItem(historyItem);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DeleteHistoryItem_DeleteHistoryItem_QNAME);
            _bodyBlock.setValue(_myDeleteHistoryItem);
            _bodyBlock.setSerializer(myns1_DeleteHistoryItem__DeleteHistoryItem_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/DeleteHistoryItem");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of removeBatchItem
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn removeBatchItem(java.lang.String batchReference, java.lang.String batchItemReference)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(RemoveBatchItem_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","RemoveBatchItem"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatchItem _myRemoveBatchItem = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatchItem();
            _myRemoveBatchItem.setBatchReference(batchReference);
            _myRemoveBatchItem.setBatchItemReference(batchItemReference);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_RemoveBatchItem_RemoveBatchItem_QNAME);
            _bodyBlock.setValue(_myRemoveBatchItem);
            _bodyBlock.setSerializer(myns1_RemoveBatchItem__RemoveBatchItem_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/RemoveBatchItem");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatchItemResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatchItemResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatchItemResponse)_responseObj;
            }
            
            return _result.getRemoveBatchItemResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of validate
     */
    public void validate(java.lang.String user_name, java.lang.String password)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(Validate_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","Validate"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Validate _myValidate = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Validate();
            _myValidate.setUser_name(user_name);
            _myValidate.setPassword(password);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_Validate_Validate_QNAME);
            _bodyBlock.setValue(_myValidate);
            _bodyBlock.setSerializer(myns1_Validate__Validate_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/Validate");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of hazmatPhysicalForm
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazmatPhysicalForm()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(HazmatPhysicalForm_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","HazmatPhysicalForm"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPhysicalForm _myHazmatPhysicalForm = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPhysicalForm();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_HazmatPhysicalForm_HazmatPhysicalForm_QNAME);
            _bodyBlock.setValue(_myHazmatPhysicalForm);
            _bodyBlock.setSerializer(myns1_HazmatPhysicalForm__HazmatPhysicalForm_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/HazmatPhysicalForm");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPhysicalFormResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPhysicalFormResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPhysicalFormResponse)_responseObj;
            }
            
            return _result.getHazmatPhysicalFormResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of closeOutBySymbols
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsResponse closeOutBySymbols(java.lang.String carrier, java.lang.String shipper, java.lang.String[] closeOutItems, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CloseOutBySymbols_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CloseOutBySymbols"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbols _myCloseOutBySymbols = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbols();
            _myCloseOutBySymbols.setCarrier(carrier);
            _myCloseOutBySymbols.setShipper(shipper);
            _myCloseOutBySymbols.setCloseOutItems(closeOutItems);
            _myCloseOutBySymbols.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CloseOutBySymbols_CloseOutBySymbols_QNAME);
            _bodyBlock.setValue(_myCloseOutBySymbols);
            _bodyBlock.setSerializer(myns1_CloseOutBySymbols__CloseOutBySymbols_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CloseOutBySymbols");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of hazmatRadioactiveException
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazmatRadioactiveException()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(HazmatRadioactiveException_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","HazmatRadioactiveException"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatRadioactiveException _myHazmatRadioactiveException = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatRadioactiveException();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_HazmatRadioactiveException_HazmatRadioactiveException_QNAME);
            _bodyBlock.setValue(_myHazmatRadioactiveException);
            _bodyBlock.setSerializer(myns1_HazmatRadioactiveException__HazmatRadioactiveException_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/HazmatRadioactiveException");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatRadioactiveExceptionResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatRadioactiveExceptionResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatRadioactiveExceptionResponse)_responseObj;
            }
            
            return _result.getHazmatRadioactiveExceptionResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of closeGroupAndPrint
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupAndPrintResponse closeGroupAndPrint(java.lang.String carrier, java.lang.String grouping_symbol, java.lang.String group_id, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params)
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CloseGroupAndPrint_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","CloseGroupAndPrint"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupAndPrint _myCloseGroupAndPrint = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupAndPrint();
            _myCloseGroupAndPrint.setCarrier(carrier);
            _myCloseGroupAndPrint.setGrouping_symbol(grouping_symbol);
            _myCloseGroupAndPrint.setGroup_id(group_id);
            _myCloseGroupAndPrint.setPrintRequest(printRequest);
            _myCloseGroupAndPrint.setParams(params);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CloseGroupAndPrint_CloseGroupAndPrint_QNAME);
            _bodyBlock.setValue(_myCloseGroupAndPrint);
            _bodyBlock.setSerializer(myns1_CloseGroupAndPrint__CloseGroupAndPrint_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/CloseGroupAndPrint");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupAndPrintResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupAndPrintResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupAndPrintResponse)_responseObj;
            }
            
            return _result;
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getPaymentTypes
     */
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getPaymentTypes()
        throws java.rmi.RemoteException {
        
        StreamingSenderState _state = null;
        try {
            
            _state = _start(_handlerChain);
            if (_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS) != null) {
                _state.getMessageContext().getMessage().setProperty("DimeEncode",_getProperty(ClientConstants.DIME_ENCODE_MESSAGES_WITH_ATTACHMENTS));
            }
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(GetPaymentTypes_OPCODE);
            _state.getMessageContext().setProperty("oracle.j2ee.ws.mgmt.interceptor.operation-qname",new QName("","GetPaymentTypes"));
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPaymentTypes _myGetPaymentTypes = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPaymentTypes();
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_GetPaymentTypes_GetPaymentTypes_QNAME);
            _bodyBlock.setValue(_myGetPaymentTypes);
            _bodyBlock.setSerializer(myns1_GetPaymentTypes__GetPaymentTypes_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty("http.soap.action", "http://PSI.Wcf/IwcfShip/GetPaymentTypes");
            
            _send((String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPaymentTypesResponse _result = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPaymentTypesResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPaymentTypesResponse)_responseObj;
            }
            
            return _result.getGetPaymentTypesResult();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (ClientTransportException e) {
            throw new RemoteException( "", e );
        } catch (JAXRPCException e) {
            throw e;
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case GetTransmitItems_OPCODE:
                _deserialize_GetTransmitItems(bodyReader, deserializationContext, state);
                break;
            case COMethods_OPCODE:
                _deserialize_COMethods(bodyReader, deserializationContext, state);
                break;
            case AddShipmentToBatch_OPCODE:
                _deserialize_AddShipmentToBatch(bodyReader, deserializationContext, state);
                break;
            case UserMethod_OPCODE:
                _deserialize_UserMethod(bodyReader, deserializationContext, state);
                break;
            case GetCountries_OPCODE:
                _deserialize_GetCountries(bodyReader, deserializationContext, state);
                break;
            case Sox_Version_OPCODE:
                _deserialize_Sox_Version(bodyReader, deserializationContext, state);
                break;
            case SearchByTrackingNumber_OPCODE:
                _deserialize_SearchByTrackingNumber(bodyReader, deserializationContext, state);
                break;
            case Sox_Db_Version_OPCODE:
                _deserialize_Sox_Db_Version(bodyReader, deserializationContext, state);
                break;
            case searchPackageHistory_OPCODE:
                _deserialize_searchPackageHistory(bodyReader, deserializationContext, state);
                break;
            case DeleteTransmitItem_OPCODE:
                _deserialize_DeleteTransmitItem(bodyReader, deserializationContext, state);
                break;
            case UpdateDocumentProfile_OPCODE:
                _deserialize_UpdateDocumentProfile(bodyReader, deserializationContext, state);
                break;
            case GetNextValidShipDate_OPCODE:
                _deserialize_GetNextValidShipDate(bodyReader, deserializationContext, state);
                break;
            case GetCommodityClasses_OPCODE:
                _deserialize_GetCommodityClasses(bodyReader, deserializationContext, state);
                break;
            case CreateBatch_OPCODE:
                _deserialize_CreateBatch(bodyReader, deserializationContext, state);
                break;
            case SearchByConsigneeReferenceWithCount_OPCODE:
                _deserialize_SearchByConsigneeReferenceWithCount(bodyReader, deserializationContext, state);
                break;
            case GetUnitOfMeasures_OPCODE:
                _deserialize_GetUnitOfMeasures(bodyReader, deserializationContext, state);
                break;
            case GetShipFileDocuments_OPCODE:
                _deserialize_GetShipFileDocuments(bodyReader, deserializationContext, state);
                break;
            case VoidPackageByTrackingNumber_OPCODE:
                _deserialize_VoidPackageByTrackingNumber(bodyReader, deserializationContext, state);
                break;
            case GetShipperNameAddress_OPCODE:
                _deserialize_GetShipperNameAddress(bodyReader, deserializationContext, state);
                break;
            case GetConfiguredPrinters_OPCODE:
                _deserialize_GetConfiguredPrinters(bodyReader, deserializationContext, state);
                break;
            case CloseGroup_OPCODE:
                _deserialize_CloseGroup(bodyReader, deserializationContext, state);
                break;
            case GetWeightUnitByCountryLocale_OPCODE:
                _deserialize_GetWeightUnitByCountryLocale(bodyReader, deserializationContext, state);
                break;
            case SearchByShipperReferenceWithCount_OPCODE:
                _deserialize_SearchByShipperReferenceWithCount(bodyReader, deserializationContext, state);
                break;
            case Ship_OPCODE:
                _deserialize_Ship(bodyReader, deserializationContext, state);
                break;
            case CreateGroup_OPCODE:
                _deserialize_CreateGroup(bodyReader, deserializationContext, state);
                break;
            case ModifyGroup_OPCODE:
                _deserialize_ModifyGroup(bodyReader, deserializationContext, state);
                break;
            case CommodityCondition_OPCODE:
                _deserialize_CommodityCondition(bodyReader, deserializationContext, state);
                break;
            case BrokerageMethod_OPCODE:
                _deserialize_BrokerageMethod(bodyReader, deserializationContext, state);
                break;
            case SearchByShipperAndShipdateAndStatus_OPCODE:
                _deserialize_SearchByShipperAndShipdateAndStatus(bodyReader, deserializationContext, state);
                break;
            case AlcoholTypes_OPCODE:
                _deserialize_AlcoholTypes(bodyReader, deserializationContext, state);
                break;
            case GetDocumentProfiles_OPCODE:
                _deserialize_GetDocumentProfiles(bodyReader, deserializationContext, state);
                break;
            case InsertSoxDbPackage_OPCODE:
                _deserialize_InsertSoxDbPackage(bodyReader, deserializationContext, state);
                break;
            case SearchByFilter_OPCODE:
                _deserialize_SearchByFilter(bodyReader, deserializationContext, state);
                break;
            case SearchByShipperAndShipdate_OPCODE:
                _deserialize_SearchByShipperAndShipdate(bodyReader, deserializationContext, state);
                break;
            case GetGroup_OPCODE:
                _deserialize_GetGroup(bodyReader, deserializationContext, state);
                break;
            case GetCurrencyByCountry_OPCODE:
                _deserialize_GetCurrencyByCountry(bodyReader, deserializationContext, state);
                break;
            case GetSearchFieldswithType_OPCODE:
                _deserialize_GetSearchFieldswithType(bodyReader, deserializationContext, state);
                break;
            case GetServicesbyCarriers_OPCODE:
                _deserialize_GetServicesbyCarriers(bodyReader, deserializationContext, state);
                break;
            case GetCommitments_OPCODE:
                _deserialize_GetCommitments(bodyReader, deserializationContext, state);
                break;
            case VoidPackageByGlobalMsn_OPCODE:
                _deserialize_VoidPackageByGlobalMsn(bodyReader, deserializationContext, state);
                break;
            case PrintDocument_OPCODE:
                _deserialize_PrintDocument(bodyReader, deserializationContext, state);
                break;
            case ReturnDeliveryMethods_OPCODE:
                _deserialize_ReturnDeliveryMethods(bodyReader, deserializationContext, state);
                break;
            case GetIncoterms_OPCODE:
                _deserialize_GetIncoterms(bodyReader, deserializationContext, state);
                break;
            case GetPrinter_OPCODE:
                _deserialize_GetPrinter(bodyReader, deserializationContext, state);
                break;
            case SearchByShipFileID_OPCODE:
                _deserialize_SearchByShipFileID(bodyReader, deserializationContext, state);
                break;
            case CloseOutBySymbolsAndPrint_OPCODE:
                _deserialize_CloseOutBySymbolsAndPrint(bodyReader, deserializationContext, state);
                break;
            case GetAvailablePrinterStocks_OPCODE:
                _deserialize_GetAvailablePrinterStocks(bodyReader, deserializationContext, state);
                break;
            case UpdateSoxDbPackage_OPCODE:
                _deserialize_UpdateSoxDbPackage(bodyReader, deserializationContext, state);
                break;
            case HazmatPackingGroups_OPCODE:
                _deserialize_HazmatPackingGroups(bodyReader, deserializationContext, state);
                break;
            case GetDeleteTransmitItemsList_OPCODE:
                _deserialize_GetDeleteTransmitItemsList(bodyReader, deserializationContext, state);
                break;
            case AddShipper_OPCODE:
                _deserialize_AddShipper(bodyReader, deserializationContext, state);
                break;
            case RemoveBatch_OPCODE:
                _deserialize_RemoveBatch(bodyReader, deserializationContext, state);
                break;
            case DispositionMethods_OPCODE:
                _deserialize_DispositionMethods(bodyReader, deserializationContext, state);
                break;
            case GetShippers_OPCODE:
                _deserialize_GetShippers(bodyReader, deserializationContext, state);
                break;
            case IsValidShipDate_OPCODE:
                _deserialize_IsValidShipDate(bodyReader, deserializationContext, state);
                break;
            case Load_OPCODE:
                _deserialize_Load(bodyReader, deserializationContext, state);
                break;
            case GetCloseOutItems_OPCODE:
                _deserialize_GetCloseOutItems(bodyReader, deserializationContext, state);
                break;
            case GetStagedBatch_OPCODE:
                _deserialize_GetStagedBatch(bodyReader, deserializationContext, state);
                break;
            case GetScales_OPCODE:
                _deserialize_GetScales(bodyReader, deserializationContext, state);
                break;
            case GetDeviceDrivers_OPCODE:
                _deserialize_GetDeviceDrivers(bodyReader, deserializationContext, state);
                break;
            case AdditionalHandlingTypes_OPCODE:
                _deserialize_AdditionalHandlingTypes(bodyReader, deserializationContext, state);
                break;
            case TransmitItems_OPCODE:
                _deserialize_TransmitItems(bodyReader, deserializationContext, state);
                break;
            case GetCurrencyByCountryLocale_OPCODE:
                _deserialize_GetCurrencyByCountryLocale(bodyReader, deserializationContext, state);
                break;
            case NAFTAProducer_OPCODE:
                _deserialize_NAFTAProducer(bodyReader, deserializationContext, state);
                break;
            case AddDocumentProfile_OPCODE:
                _deserialize_AddDocumentProfile(bodyReader, deserializationContext, state);
                break;
            case PrintRequest_OPCODE:
                _deserialize_PrintRequest(bodyReader, deserializationContext, state);
                break;
            case HazmatLabels_OPCODE:
                _deserialize_HazmatLabels(bodyReader, deserializationContext, state);
                break;
            case SEDMethods_OPCODE:
                _deserialize_SEDMethods(bodyReader, deserializationContext, state);
                break;
            case GetPackageTypes_OPCODE:
                _deserialize_GetPackageTypes(bodyReader, deserializationContext, state);
                break;
            case DeleteHistoryItems_OPCODE:
                _deserialize_DeleteHistoryItems(bodyReader, deserializationContext, state);
                break;
            case GetSearchFieldList_OPCODE:
                _deserialize_GetSearchFieldList(bodyReader, deserializationContext, state);
                break;
            case DeleteShipper_OPCODE:
                _deserialize_DeleteShipper(bodyReader, deserializationContext, state);
                break;
            case App_Db_Version_OPCODE:
                _deserialize_App_Db_Version(bodyReader, deserializationContext, state);
                break;
            case CODPaymentMethods_OPCODE:
                _deserialize_CODPaymentMethods(bodyReader, deserializationContext, state);
                break;
            case InspectNameAddress_OPCODE:
                _deserialize_InspectNameAddress(bodyReader, deserializationContext, state);
                break;
            case HazMatRegulations_OPCODE:
                _deserialize_HazMatRegulations(bodyReader, deserializationContext, state);
                break;
            case ReShip_OPCODE:
                _deserialize_ReShip(bodyReader, deserializationContext, state);
                break;
            case ProcessBatch_OPCODE:
                _deserialize_ProcessBatch(bodyReader, deserializationContext, state);
                break;
            case DryIcePurposes_OPCODE:
                _deserialize_DryIcePurposes(bodyReader, deserializationContext, state);
                break;
            case SearchByShipperAndShipdateWithCount_OPCODE:
                _deserialize_SearchByShipperAndShipdateWithCount(bodyReader, deserializationContext, state);
                break;
            case InstantiateWCF_OPCODE:
                _deserialize_InstantiateWCF(bodyReader, deserializationContext, state);
                break;
            case GetServices_OPCODE:
                _deserialize_GetServices(bodyReader, deserializationContext, state);
                break;
            case ChangeShipperSymbol_OPCODE:
                _deserialize_ChangeShipperSymbol(bodyReader, deserializationContext, state);
                break;
            case SearchByTrackingNumberWithCount_OPCODE:
                _deserialize_SearchByTrackingNumberWithCount(bodyReader, deserializationContext, state);
                break;
            case GetHistoryItemList_OPCODE:
                _deserialize_GetHistoryItemList(bodyReader, deserializationContext, state);
                break;
            case AddPrinter_OPCODE:
                _deserialize_AddPrinter(bodyReader, deserializationContext, state);
                break;
            case ExchangeMethods_OPCODE:
                _deserialize_ExchangeMethods(bodyReader, deserializationContext, state);
                break;
            case HazMatRegulationSets_OPCODE:
                _deserialize_HazMatRegulationSets(bodyReader, deserializationContext, state);
                break;
            case CommercialInvoiceMethods_OPCODE:
                _deserialize_CommercialInvoiceMethods(bodyReader, deserializationContext, state);
                break;
            case DryIceRegulationSets_OPCODE:
                _deserialize_DryIceRegulationSets(bodyReader, deserializationContext, state);
                break;
            case CloseOutModes_OPCODE:
                _deserialize_CloseOutModes(bodyReader, deserializationContext, state);
                break;
            case DeletePrinter_OPCODE:
                _deserialize_DeletePrinter(bodyReader, deserializationContext, state);
                break;
            case ModifyPackageList_OPCODE:
                _deserialize_ModifyPackageList(bodyReader, deserializationContext, state);
                break;
            case ShipOrder_OPCODE:
                _deserialize_ShipOrder(bodyReader, deserializationContext, state);
                break;
            case ReProcess_OPCODE:
                _deserialize_ReProcess(bodyReader, deserializationContext, state);
                break;
            case GetDocumentProfile_OPCODE:
                _deserialize_GetDocumentProfile(bodyReader, deserializationContext, state);
                break;
            case PrintPositionDocumentXml_OPCODE:
                _deserialize_PrintPositionDocumentXml(bodyReader, deserializationContext, state);
                break;
            case GetLanguages_OPCODE:
                _deserialize_GetLanguages(bodyReader, deserializationContext, state);
                break;
            case ChargesOnDocumentation_OPCODE:
                _deserialize_ChargesOnDocumentation(bodyReader, deserializationContext, state);
                break;
            case GetTransmitItemsByStatus_OPCODE:
                _deserialize_GetTransmitItemsByStatus(bodyReader, deserializationContext, state);
                break;
            case DeliveryMethods_OPCODE:
                _deserialize_DeliveryMethods(bodyReader, deserializationContext, state);
                break;
            case VoidPackagesByGlobalMsnList_OPCODE:
                _deserialize_VoidPackagesByGlobalMsnList(bodyReader, deserializationContext, state);
                break;
            case ShipBatchItem_OPCODE:
                _deserialize_ShipBatchItem(bodyReader, deserializationContext, state);
                break;
            case UpdatePrinter_OPCODE:
                _deserialize_UpdatePrinter(bodyReader, deserializationContext, state);
                break;
            case SearchByGlobalMsn_OPCODE:
                _deserialize_SearchByGlobalMsn(bodyReader, deserializationContext, state);
                break;
            case CSAdapter_Version_OPCODE:
                _deserialize_CSAdapter_Version(bodyReader, deserializationContext, state);
                break;
            case CODReturnMethods_OPCODE:
                _deserialize_CODReturnMethods(bodyReader, deserializationContext, state);
                break;
            case ProcessBatchByRequest_OPCODE:
                _deserialize_ProcessBatchByRequest(bodyReader, deserializationContext, state);
                break;
            case HazMatCACategories_OPCODE:
                _deserialize_HazMatCACategories(bodyReader, deserializationContext, state);
                break;
            case GetNameAddressValidationCandidates_OPCODE:
                _deserialize_GetNameAddressValidationCandidates(bodyReader, deserializationContext, state);
                break;
            case GetCurrencies_OPCODE:
                _deserialize_GetCurrencies(bodyReader, deserializationContext, state);
                break;
            case GetTransmitItemsAvailableForDeletion_OPCODE:
                _deserialize_GetTransmitItemsAvailableForDeletion(bodyReader, deserializationContext, state);
                break;
            case SearchByGlobalBundleId_OPCODE:
                _deserialize_SearchByGlobalBundleId(bodyReader, deserializationContext, state);
                break;
            case GetAvailablePrinters_OPCODE:
                _deserialize_GetAvailablePrinters(bodyReader, deserializationContext, state);
                break;
            case GetBatchShipmentErrors_OPCODE:
                _deserialize_GetBatchShipmentErrors(bodyReader, deserializationContext, state);
                break;
            case LoadBatchItem_OPCODE:
                _deserialize_LoadBatchItem(bodyReader, deserializationContext, state);
                break;
            case StageBatch_OPCODE:
                _deserialize_StageBatch(bodyReader, deserializationContext, state);
                break;
            case CopyPrinter_OPCODE:
                _deserialize_CopyPrinter(bodyReader, deserializationContext, state);
                break;
            case DeleteTransmitItems_OPCODE:
                _deserialize_DeleteTransmitItems(bodyReader, deserializationContext, state);
                break;
            case NAFTARVCMethods_OPCODE:
                _deserialize_NAFTARVCMethods(bodyReader, deserializationContext, state);
                break;
            case LoadBatch_OPCODE:
                _deserialize_LoadBatch(bodyReader, deserializationContext, state);
                break;
            case SearchByConsigneeReference_OPCODE:
                _deserialize_SearchByConsigneeReference(bodyReader, deserializationContext, state);
                break;
            case GetNameAddressValidationCandidatesWithParams_OPCODE:
                _deserialize_GetNameAddressValidationCandidatesWithParams(bodyReader, deserializationContext, state);
                break;
            case GetCarriersbyShippers_OPCODE:
                _deserialize_GetCarriersbyShippers(bodyReader, deserializationContext, state);
                break;
            case GetGroupDocuments_OPCODE:
                _deserialize_GetGroupDocuments(bodyReader, deserializationContext, state);
                break;
            case Business_Object_Version_OPCODE:
                _deserialize_Business_Object_Version(bodyReader, deserializationContext, state);
                break;
            case GetCarriers_OPCODE:
                _deserialize_GetCarriers(bodyReader, deserializationContext, state);
                break;
            case SetCloseOutMode_OPCODE:
                _deserialize_SetCloseOutMode(bodyReader, deserializationContext, state);
                break;
            case ReturnAddressMethods_OPCODE:
                _deserialize_ReturnAddressMethods(bodyReader, deserializationContext, state);
                break;
            case GetGroupingTypes_OPCODE:
                _deserialize_GetGroupingTypes(bodyReader, deserializationContext, state);
                break;
            case SearchByShipperReference_OPCODE:
                _deserialize_SearchByShipperReference(bodyReader, deserializationContext, state);
                break;
            case ValidateEntitlements_OPCODE:
                _deserialize_ValidateEntitlements(bodyReader, deserializationContext, state);
                break;
            case OpenGroup_OPCODE:
                _deserialize_OpenGroup(bodyReader, deserializationContext, state);
                break;
            case NAFTAPreferenceCriterion_OPCODE:
                _deserialize_NAFTAPreferenceCriterion(bodyReader, deserializationContext, state);
                break;
            case TransmitItem_OPCODE:
                _deserialize_TransmitItem(bodyReader, deserializationContext, state);
                break;
            case SearchByFilters_OPCODE:
                _deserialize_SearchByFilters(bodyReader, deserializationContext, state);
                break;
            case DeleteDocumentProfile_OPCODE:
                _deserialize_DeleteDocumentProfile(bodyReader, deserializationContext, state);
                break;
            case GetStagedBatches_OPCODE:
                _deserialize_GetStagedBatches(bodyReader, deserializationContext, state);
                break;
            case GetGroups_OPCODE:
                _deserialize_GetGroups(bodyReader, deserializationContext, state);
                break;
            case GetBatchCount_OPCODE:
                _deserialize_GetBatchCount(bodyReader, deserializationContext, state);
                break;
            case GetHolidays_OPCODE:
                _deserialize_GetHolidays(bodyReader, deserializationContext, state);
                break;
            case ManagementLayer_Version_OPCODE:
                _deserialize_ManagementLayer_Version(bodyReader, deserializationContext, state);
                break;
            case AreTransmitItemsAvailableForDeletion_OPCODE:
                _deserialize_AreTransmitItemsAvailableForDeletion(bodyReader, deserializationContext, state);
                break;
            case CopyDocumentProfile_OPCODE:
                _deserialize_CopyDocumentProfile(bodyReader, deserializationContext, state);
                break;
            case Rate_OPCODE:
                _deserialize_Rate(bodyReader, deserializationContext, state);
                break;
            case GetDocumentFormats_OPCODE:
                _deserialize_GetDocumentFormats(bodyReader, deserializationContext, state);
                break;
            case GetCloseOutMode_OPCODE:
                _deserialize_GetCloseOutMode(bodyReader, deserializationContext, state);
                break;
            case RateServices_OPCODE:
                _deserialize_RateServices(bodyReader, deserializationContext, state);
                break;
            case PrintBatch_OPCODE:
                _deserialize_PrintBatch(bodyReader, deserializationContext, state);
                break;
            case GetGroupings_OPCODE:
                _deserialize_GetGroupings(bodyReader, deserializationContext, state);
                break;
            case AlcoholPackaging_OPCODE:
                _deserialize_AlcoholPackaging(bodyReader, deserializationContext, state);
                break;
            case DeleteHistoryItem_OPCODE:
                _deserialize_DeleteHistoryItem(bodyReader, deserializationContext, state);
                break;
            case RemoveBatchItem_OPCODE:
                _deserialize_RemoveBatchItem(bodyReader, deserializationContext, state);
                break;
            case Validate_OPCODE:
                _deserialize_Validate(bodyReader, deserializationContext, state);
                break;
            case HazmatPhysicalForm_OPCODE:
                _deserialize_HazmatPhysicalForm(bodyReader, deserializationContext, state);
                break;
            case CloseOutBySymbols_OPCODE:
                _deserialize_CloseOutBySymbols(bodyReader, deserializationContext, state);
                break;
            case HazmatRadioactiveException_OPCODE:
                _deserialize_HazmatRadioactiveException(bodyReader, deserializationContext, state);
                break;
            case CloseGroupAndPrint_OPCODE:
                _deserialize_CloseGroupAndPrint(bodyReader, deserializationContext, state);
                break;
            case GetPaymentTypes_OPCODE:
                _deserialize_GetPaymentTypes(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the GetTransmitItems operation.
     */
    private void _deserialize_GetTransmitItems(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetTransmitItemsResponseObj =
                myns1_GetTransmitItemsResponse__GetTransmitItemsResponse_LiteralSerializer.deserialize(ns1_GetTransmitItems_GetTransmitItemsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetTransmitItems_GetTransmitItemsResponse_QNAME);
            bodyBlock.setValue(myGetTransmitItemsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the COMethods operation.
     */
    private void _deserialize_COMethods(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCOMethodsResponseObj =
                myns1_COMethodsResponse__COMethodsResponse_LiteralSerializer.deserialize(ns1_COMethods_COMethodsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_COMethods_COMethodsResponse_QNAME);
            bodyBlock.setValue(myCOMethodsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the AddShipmentToBatch operation.
     */
    private void _deserialize_AddShipmentToBatch(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myAddShipmentToBatchResponseObj =
                myns1_AddShipmentToBatchResponse__AddShipmentToBatchResponse_LiteralSerializer.deserialize(ns1_AddShipmentToBatch_AddShipmentToBatchResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_AddShipmentToBatch_AddShipmentToBatchResponse_QNAME);
            bodyBlock.setValue(myAddShipmentToBatchResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the UserMethod operation.
     */
    private void _deserialize_UserMethod(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myUserMethodResponseObj =
                myns1_UserMethodResponse__UserMethodResponse_LiteralSerializer.deserialize(ns1_UserMethod_UserMethodResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_UserMethod_UserMethodResponse_QNAME);
            bodyBlock.setValue(myUserMethodResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetCountries operation.
     */
    private void _deserialize_GetCountries(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetCountriesResponseObj =
                myns1_GetCountriesResponse__GetCountriesResponse_LiteralSerializer.deserialize(ns1_GetCountries_GetCountriesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetCountries_GetCountriesResponse_QNAME);
            bodyBlock.setValue(myGetCountriesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the Sox_Version operation.
     */
    private void _deserialize_Sox_Version(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySox_VersionResponseObj =
                myns1_Sox_VersionResponse__Sox_VersionResponse_LiteralSerializer.deserialize(ns1_Sox_Version_Sox_VersionResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_Sox_Version_Sox_VersionResponse_QNAME);
            bodyBlock.setValue(mySox_VersionResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByTrackingNumber operation.
     */
    private void _deserialize_SearchByTrackingNumber(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByTrackingNumberResponseObj =
                myns1_SearchByTrackingNumberResponse__SearchByTrackingNumberResponse_LiteralSerializer.deserialize(ns1_SearchByTrackingNumber_SearchByTrackingNumberResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByTrackingNumber_SearchByTrackingNumberResponse_QNAME);
            bodyBlock.setValue(mySearchByTrackingNumberResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the Sox_Db_Version operation.
     */
    private void _deserialize_Sox_Db_Version(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySox_Db_VersionResponseObj =
                myns1_Sox_Db_VersionResponse__Sox_Db_VersionResponse_LiteralSerializer.deserialize(ns1_Sox_Db_Version_Sox_Db_VersionResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_Sox_Db_Version_Sox_Db_VersionResponse_QNAME);
            bodyBlock.setValue(mySox_Db_VersionResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the searchPackageHistory operation.
     */
    private void _deserialize_searchPackageHistory(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchPackageHistoryResponseObj =
                myns1_searchPackageHistoryResponse__SearchPackageHistoryResponse_LiteralSerializer.deserialize(ns1_searchPackageHistory_searchPackageHistoryResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_searchPackageHistory_searchPackageHistoryResponse_QNAME);
            bodyBlock.setValue(mySearchPackageHistoryResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the DeleteTransmitItem operation.
     */
    private void _deserialize_DeleteTransmitItem(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDeleteTransmitItemResponseObj =
                myns1_DeleteTransmitItemResponse__DeleteTransmitItemResponse_LiteralSerializer.deserialize(ns1_DeleteTransmitItem_DeleteTransmitItemResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DeleteTransmitItem_DeleteTransmitItemResponse_QNAME);
            bodyBlock.setValue(myDeleteTransmitItemResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the UpdateDocumentProfile operation.
     */
    private void _deserialize_UpdateDocumentProfile(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myUpdateDocumentProfileResponseObj =
                myns1_UpdateDocumentProfileResponse__UpdateDocumentProfileResponse_LiteralSerializer.deserialize(ns1_UpdateDocumentProfile_UpdateDocumentProfileResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_UpdateDocumentProfile_UpdateDocumentProfileResponse_QNAME);
            bodyBlock.setValue(myUpdateDocumentProfileResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetNextValidShipDate operation.
     */
    private void _deserialize_GetNextValidShipDate(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetNextValidShipDateResponseObj =
                myns1_GetNextValidShipDateResponse__GetNextValidShipDateResponse_LiteralSerializer.deserialize(ns1_GetNextValidShipDate_GetNextValidShipDateResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetNextValidShipDate_GetNextValidShipDateResponse_QNAME);
            bodyBlock.setValue(myGetNextValidShipDateResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetCommodityClasses operation.
     */
    private void _deserialize_GetCommodityClasses(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetCommodityClassesResponseObj =
                myns1_GetCommodityClassesResponse__GetCommodityClassesResponse_LiteralSerializer.deserialize(ns1_GetCommodityClasses_GetCommodityClassesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetCommodityClasses_GetCommodityClassesResponse_QNAME);
            bodyBlock.setValue(myGetCommodityClassesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CreateBatch operation.
     */
    private void _deserialize_CreateBatch(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCreateBatchResponseObj =
                myns1_CreateBatchResponse__CreateBatchResponse_LiteralSerializer.deserialize(ns1_CreateBatch_CreateBatchResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CreateBatch_CreateBatchResponse_QNAME);
            bodyBlock.setValue(myCreateBatchResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByConsigneeReferenceWithCount operation.
     */
    private void _deserialize_SearchByConsigneeReferenceWithCount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByConsigneeReferenceWithCountResponseObj =
                myns1_SearchByConsigneeReferenceWithCountResponse__SearchByConsigneeReferenceWithCountResponse_LiteralSerializer.deserialize(ns1_SearchByConsigneeReferenceWithCount_SearchByConsigneeReferenceWithCountResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByConsigneeReferenceWithCount_SearchByConsigneeReferenceWithCountResponse_QNAME);
            bodyBlock.setValue(mySearchByConsigneeReferenceWithCountResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetUnitOfMeasures operation.
     */
    private void _deserialize_GetUnitOfMeasures(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetUnitOfMeasuresResponseObj =
                myns1_GetUnitOfMeasuresResponse__GetUnitOfMeasuresResponse_LiteralSerializer.deserialize(ns1_GetUnitOfMeasures_GetUnitOfMeasuresResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetUnitOfMeasures_GetUnitOfMeasuresResponse_QNAME);
            bodyBlock.setValue(myGetUnitOfMeasuresResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetShipFileDocuments operation.
     */
    private void _deserialize_GetShipFileDocuments(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetShipFileDocumentsResponseObj =
                myns1_GetShipFileDocumentsResponse__GetShipFileDocumentsResponse_LiteralSerializer.deserialize(ns1_GetShipFileDocuments_GetShipFileDocumentsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetShipFileDocuments_GetShipFileDocumentsResponse_QNAME);
            bodyBlock.setValue(myGetShipFileDocumentsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the VoidPackageByTrackingNumber operation.
     */
    private void _deserialize_VoidPackageByTrackingNumber(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myVoidPackageByTrackingNumberResponseObj =
                myns1_VoidPackageByTrackingNumberResponse__VoidPackageByTrackingNumberResponse_LiteralSerializer.deserialize(ns1_VoidPackageByTrackingNumber_VoidPackageByTrackingNumberResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_VoidPackageByTrackingNumber_VoidPackageByTrackingNumberResponse_QNAME);
            bodyBlock.setValue(myVoidPackageByTrackingNumberResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetShipperNameAddress operation.
     */
    private void _deserialize_GetShipperNameAddress(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetShipperNameAddressResponseObj =
                myns1_GetShipperNameAddressResponse__GetShipperNameAddressResponse_LiteralSerializer.deserialize(ns1_GetShipperNameAddress_GetShipperNameAddressResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetShipperNameAddress_GetShipperNameAddressResponse_QNAME);
            bodyBlock.setValue(myGetShipperNameAddressResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetConfiguredPrinters operation.
     */
    private void _deserialize_GetConfiguredPrinters(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetConfiguredPrintersResponseObj =
                myns1_GetConfiguredPrintersResponse__GetConfiguredPrintersResponse_LiteralSerializer.deserialize(ns1_GetConfiguredPrinters_GetConfiguredPrintersResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetConfiguredPrinters_GetConfiguredPrintersResponse_QNAME);
            bodyBlock.setValue(myGetConfiguredPrintersResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CloseGroup operation.
     */
    private void _deserialize_CloseGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCloseGroupResponseTypeObj =
                myns1_CloseGroupResponseType__CloseGroupResponseType_LiteralSerializer.deserialize(ns1_CloseGroup_CloseGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CloseGroup_CloseGroupResponse_QNAME);
            bodyBlock.setValue(myCloseGroupResponseTypeObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetWeightUnitByCountryLocale operation.
     */
    private void _deserialize_GetWeightUnitByCountryLocale(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetWeightUnitByCountryLocaleResponseObj =
                myns1_GetWeightUnitByCountryLocaleResponse__GetWeightUnitByCountryLocaleResponse_LiteralSerializer.deserialize(ns1_GetWeightUnitByCountryLocale_GetWeightUnitByCountryLocaleResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetWeightUnitByCountryLocale_GetWeightUnitByCountryLocaleResponse_QNAME);
            bodyBlock.setValue(myGetWeightUnitByCountryLocaleResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByShipperReferenceWithCount operation.
     */
    private void _deserialize_SearchByShipperReferenceWithCount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByShipperReferenceWithCountResponseObj =
                myns1_SearchByShipperReferenceWithCountResponse__SearchByShipperReferenceWithCountResponse_LiteralSerializer.deserialize(ns1_SearchByShipperReferenceWithCount_SearchByShipperReferenceWithCountResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByShipperReferenceWithCount_SearchByShipperReferenceWithCountResponse_QNAME);
            bodyBlock.setValue(mySearchByShipperReferenceWithCountResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the Ship operation.
     */
    private void _deserialize_Ship(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myShipResponseObj =
                myns1_ShipResponse__ShipResponse_LiteralSerializer.deserialize(ns1_Ship_ShipResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_Ship_ShipResponse_QNAME);
            bodyBlock.setValue(myShipResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CreateGroup operation.
     */
    private void _deserialize_CreateGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCreateGroupResponseObj =
                myns1_CreateGroupResponse__CreateGroupResponse_LiteralSerializer.deserialize(ns1_CreateGroup_CreateGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CreateGroup_CreateGroupResponse_QNAME);
            bodyBlock.setValue(myCreateGroupResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ModifyGroup operation.
     */
    private void _deserialize_ModifyGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myModifyGroupResponseObj =
                myns1_ModifyGroupResponse__ModifyGroupResponse_LiteralSerializer.deserialize(ns1_ModifyGroup_ModifyGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ModifyGroup_ModifyGroupResponse_QNAME);
            bodyBlock.setValue(myModifyGroupResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CommodityCondition operation.
     */
    private void _deserialize_CommodityCondition(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCommodityConditionResponseObj =
                myns1_CommodityConditionResponse__CommodityConditionResponse_LiteralSerializer.deserialize(ns1_CommodityCondition_CommodityConditionResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CommodityCondition_CommodityConditionResponse_QNAME);
            bodyBlock.setValue(myCommodityConditionResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the BrokerageMethod operation.
     */
    private void _deserialize_BrokerageMethod(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myBrokerageMethodResponseObj =
                myns1_BrokerageMethodResponse__BrokerageMethodResponse_LiteralSerializer.deserialize(ns1_BrokerageMethod_BrokerageMethodResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_BrokerageMethod_BrokerageMethodResponse_QNAME);
            bodyBlock.setValue(myBrokerageMethodResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByShipperAndShipdateAndStatus operation.
     */
    private void _deserialize_SearchByShipperAndShipdateAndStatus(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByShipperAndShipdateAndStatusResponseObj =
                myns1_SearchByShipperAndShipdateAndStatusResponse__SearchByShipperAndShipdateAndStatusResponse_LiteralSerializer.deserialize(ns1_SearchByShipperAndShipdateAndStatus_SearchByShipperAndShipdateAndStatusResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByShipperAndShipdateAndStatus_SearchByShipperAndShipdateAndStatusResponse_QNAME);
            bodyBlock.setValue(mySearchByShipperAndShipdateAndStatusResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the AlcoholTypes operation.
     */
    private void _deserialize_AlcoholTypes(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myAlcoholTypesResponseObj =
                myns1_AlcoholTypesResponse__AlcoholTypesResponse_LiteralSerializer.deserialize(ns1_AlcoholTypes_AlcoholTypesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_AlcoholTypes_AlcoholTypesResponse_QNAME);
            bodyBlock.setValue(myAlcoholTypesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetDocumentProfiles operation.
     */
    private void _deserialize_GetDocumentProfiles(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetDocumentProfilesResponseObj =
                myns1_GetDocumentProfilesResponse__GetDocumentProfilesResponse_LiteralSerializer.deserialize(ns1_GetDocumentProfiles_GetDocumentProfilesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetDocumentProfiles_GetDocumentProfilesResponse_QNAME);
            bodyBlock.setValue(myGetDocumentProfilesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the InsertSoxDbPackage operation.
     */
    private void _deserialize_InsertSoxDbPackage(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myInsertSoxDbPackageResponseObj =
                myns1_InsertSoxDbPackageResponse__InsertSoxDbPackageResponse_LiteralSerializer.deserialize(ns1_InsertSoxDbPackage_InsertSoxDbPackageResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_InsertSoxDbPackage_InsertSoxDbPackageResponse_QNAME);
            bodyBlock.setValue(myInsertSoxDbPackageResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByFilter operation.
     */
    private void _deserialize_SearchByFilter(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByFilterResponseObj =
                myns1_SearchByFilterResponse__SearchByFilterResponse_LiteralSerializer.deserialize(ns1_SearchByFilter_SearchByFilterResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByFilter_SearchByFilterResponse_QNAME);
            bodyBlock.setValue(mySearchByFilterResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByShipperAndShipdate operation.
     */
    private void _deserialize_SearchByShipperAndShipdate(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByShipperAndShipdateResponseObj =
                myns1_SearchByShipperAndShipdateResponse__SearchByShipperAndShipdateResponse_LiteralSerializer.deserialize(ns1_SearchByShipperAndShipdate_SearchByShipperAndShipdateResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByShipperAndShipdate_SearchByShipperAndShipdateResponse_QNAME);
            bodyBlock.setValue(mySearchByShipperAndShipdateResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetGroup operation.
     */
    private void _deserialize_GetGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetGroupResponseObj =
                myns1_GetGroupResponse__GetGroupResponse_LiteralSerializer.deserialize(ns1_GetGroup_GetGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetGroup_GetGroupResponse_QNAME);
            bodyBlock.setValue(myGetGroupResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetCurrencyByCountry operation.
     */
    private void _deserialize_GetCurrencyByCountry(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetCurrencyByCountryResponseObj =
                myns1_GetCurrencyByCountryResponse__GetCurrencyByCountryResponse_LiteralSerializer.deserialize(ns1_GetCurrencyByCountry_GetCurrencyByCountryResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetCurrencyByCountry_GetCurrencyByCountryResponse_QNAME);
            bodyBlock.setValue(myGetCurrencyByCountryResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetSearchFieldswithType operation.
     */
    private void _deserialize_GetSearchFieldswithType(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetSearchFieldswithTypeResponseObj =
                myns1_GetSearchFieldswithTypeResponse__GetSearchFieldswithTypeResponse_LiteralSerializer.deserialize(ns1_GetSearchFieldswithType_GetSearchFieldswithTypeResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetSearchFieldswithType_GetSearchFieldswithTypeResponse_QNAME);
            bodyBlock.setValue(myGetSearchFieldswithTypeResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetServicesbyCarriers operation.
     */
    private void _deserialize_GetServicesbyCarriers(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetServicesbyCarriersResponseObj =
                myns1_GetServicesbyCarriersResponse__GetServicesbyCarriersResponse_LiteralSerializer.deserialize(ns1_GetServicesbyCarriers_GetServicesbyCarriersResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetServicesbyCarriers_GetServicesbyCarriersResponse_QNAME);
            bodyBlock.setValue(myGetServicesbyCarriersResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetCommitments operation.
     */
    private void _deserialize_GetCommitments(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetCommitmentsResponseObj =
                myns1_GetCommitmentsResponse__GetCommitmentsResponse_LiteralSerializer.deserialize(ns1_GetCommitments_GetCommitmentsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetCommitments_GetCommitmentsResponse_QNAME);
            bodyBlock.setValue(myGetCommitmentsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the VoidPackageByGlobalMsn operation.
     */
    private void _deserialize_VoidPackageByGlobalMsn(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myVoidPackageByGlobalMsnResponseObj =
                myns1_VoidPackageByGlobalMsnResponse__VoidPackageByGlobalMsnResponse_LiteralSerializer.deserialize(ns1_VoidPackageByGlobalMsn_VoidPackageByGlobalMsnResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_VoidPackageByGlobalMsn_VoidPackageByGlobalMsnResponse_QNAME);
            bodyBlock.setValue(myVoidPackageByGlobalMsnResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the PrintDocument operation.
     */
    private void _deserialize_PrintDocument(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myPrintDocumentResponseObj =
                myns1_PrintDocumentResponse__PrintDocumentResponse_LiteralSerializer.deserialize(ns1_PrintDocument_PrintDocumentResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_PrintDocument_PrintDocumentResponse_QNAME);
            bodyBlock.setValue(myPrintDocumentResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ReturnDeliveryMethods operation.
     */
    private void _deserialize_ReturnDeliveryMethods(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myReturnDeliveryMethodsResponseObj =
                myns1_ReturnDeliveryMethodsResponse__ReturnDeliveryMethodsResponse_LiteralSerializer.deserialize(ns1_ReturnDeliveryMethods_ReturnDeliveryMethodsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ReturnDeliveryMethods_ReturnDeliveryMethodsResponse_QNAME);
            bodyBlock.setValue(myReturnDeliveryMethodsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetIncoterms operation.
     */
    private void _deserialize_GetIncoterms(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetIncotermsResponseObj =
                myns1_GetIncotermsResponse__GetIncotermsResponse_LiteralSerializer.deserialize(ns1_GetIncoterms_GetIncotermsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetIncoterms_GetIncotermsResponse_QNAME);
            bodyBlock.setValue(myGetIncotermsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetPrinter operation.
     */
    private void _deserialize_GetPrinter(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetPrinterResponseObj =
                myns1_GetPrinterResponse__GetPrinterResponse_LiteralSerializer.deserialize(ns1_GetPrinter_GetPrinterResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetPrinter_GetPrinterResponse_QNAME);
            bodyBlock.setValue(myGetPrinterResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByShipFileID operation.
     */
    private void _deserialize_SearchByShipFileID(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByShipFileIDResponseObj =
                myns1_SearchByShipFileIDResponse__SearchByShipFileIDResponse_LiteralSerializer.deserialize(ns1_SearchByShipFileID_SearchByShipFileIDResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByShipFileID_SearchByShipFileIDResponse_QNAME);
            bodyBlock.setValue(mySearchByShipFileIDResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CloseOutBySymbolsAndPrint operation.
     */
    private void _deserialize_CloseOutBySymbolsAndPrint(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCloseOutBySymbolsAndPrintResponseObj =
                myns1_CloseOutBySymbolsAndPrintResponse__CloseOutBySymbolsAndPrintResponse_LiteralSerializer.deserialize(ns1_CloseOutBySymbolsAndPrint_CloseOutBySymbolsAndPrintResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CloseOutBySymbolsAndPrint_CloseOutBySymbolsAndPrintResponse_QNAME);
            bodyBlock.setValue(myCloseOutBySymbolsAndPrintResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetAvailablePrinterStocks operation.
     */
    private void _deserialize_GetAvailablePrinterStocks(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetAvailablePrinterStocksResponseObj =
                myns1_GetAvailablePrinterStocksResponse__GetAvailablePrinterStocksResponse_LiteralSerializer.deserialize(ns1_GetAvailablePrinterStocks_GetAvailablePrinterStocksResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetAvailablePrinterStocks_GetAvailablePrinterStocksResponse_QNAME);
            bodyBlock.setValue(myGetAvailablePrinterStocksResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the UpdateSoxDbPackage operation.
     */
    private void _deserialize_UpdateSoxDbPackage(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myUpdateSoxDbPackageResponseObj =
                myns1_UpdateSoxDbPackageResponse__UpdateSoxDbPackageResponse_LiteralSerializer.deserialize(ns1_UpdateSoxDbPackage_UpdateSoxDbPackageResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_UpdateSoxDbPackage_UpdateSoxDbPackageResponse_QNAME);
            bodyBlock.setValue(myUpdateSoxDbPackageResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the HazmatPackingGroups operation.
     */
    private void _deserialize_HazmatPackingGroups(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myHazmatPackingGroupsResponseObj =
                myns1_HazmatPackingGroupsResponse__HazmatPackingGroupsResponse_LiteralSerializer.deserialize(ns1_HazmatPackingGroups_HazmatPackingGroupsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_HazmatPackingGroups_HazmatPackingGroupsResponse_QNAME);
            bodyBlock.setValue(myHazmatPackingGroupsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetDeleteTransmitItemsList operation.
     */
    private void _deserialize_GetDeleteTransmitItemsList(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetDeleteTransmitItemsListResponseObj =
                myns1_GetDeleteTransmitItemsListResponse__GetDeleteTransmitItemsListResponse_LiteralSerializer.deserialize(ns1_GetDeleteTransmitItemsList_GetDeleteTransmitItemsListResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetDeleteTransmitItemsList_GetDeleteTransmitItemsListResponse_QNAME);
            bodyBlock.setValue(myGetDeleteTransmitItemsListResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the AddShipper operation.
     */
    private void _deserialize_AddShipper(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myAddShipperResponseObj =
                myns1_AddShipperResponse__AddShipperResponse_LiteralSerializer.deserialize(ns1_AddShipper_AddShipperResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_AddShipper_AddShipperResponse_QNAME);
            bodyBlock.setValue(myAddShipperResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the RemoveBatch operation.
     */
    private void _deserialize_RemoveBatch(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myRemoveBatchResponseObj =
                myns1_RemoveBatchResponse__RemoveBatchResponse_LiteralSerializer.deserialize(ns1_RemoveBatch_RemoveBatchResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RemoveBatch_RemoveBatchResponse_QNAME);
            bodyBlock.setValue(myRemoveBatchResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the DispositionMethods operation.
     */
    private void _deserialize_DispositionMethods(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDispositionMethodsResponseObj =
                myns1_DispositionMethodsResponse__DispositionMethodsResponse_LiteralSerializer.deserialize(ns1_DispositionMethods_DispositionMethodsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DispositionMethods_DispositionMethodsResponse_QNAME);
            bodyBlock.setValue(myDispositionMethodsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetShippers operation.
     */
    private void _deserialize_GetShippers(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetShippersResponseObj =
                myns1_GetShippersResponse__GetShippersResponse_LiteralSerializer.deserialize(ns1_GetShippers_GetShippersResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetShippers_GetShippersResponse_QNAME);
            bodyBlock.setValue(myGetShippersResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the IsValidShipDate operation.
     */
    private void _deserialize_IsValidShipDate(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myIsValidShipDateResponseObj =
                myns1_IsValidShipDateResponse__IsValidShipDateResponse_LiteralSerializer.deserialize(ns1_IsValidShipDate_IsValidShipDateResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_IsValidShipDate_IsValidShipDateResponse_QNAME);
            bodyBlock.setValue(myIsValidShipDateResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the Load operation.
     */
    private void _deserialize_Load(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myLoadResponseObj =
                myns1_LoadResponse__LoadResponse_LiteralSerializer.deserialize(ns1_Load_LoadResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_Load_LoadResponse_QNAME);
            bodyBlock.setValue(myLoadResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetCloseOutItems operation.
     */
    private void _deserialize_GetCloseOutItems(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetCloseOutItemsResponseObj =
                myns1_GetCloseOutItemsResponse__GetCloseOutItemsResponse_LiteralSerializer.deserialize(ns1_GetCloseOutItems_GetCloseOutItemsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetCloseOutItems_GetCloseOutItemsResponse_QNAME);
            bodyBlock.setValue(myGetCloseOutItemsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetStagedBatch operation.
     */
    private void _deserialize_GetStagedBatch(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetStagedBatchResponseObj =
                myns1_GetStagedBatchResponse__GetStagedBatchResponse_LiteralSerializer.deserialize(ns1_GetStagedBatch_GetStagedBatchResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetStagedBatch_GetStagedBatchResponse_QNAME);
            bodyBlock.setValue(myGetStagedBatchResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetScales operation.
     */
    private void _deserialize_GetScales(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetScalesResponseObj =
                myns1_GetScalesResponse__GetScalesResponse_LiteralSerializer.deserialize(ns1_GetScales_GetScalesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetScales_GetScalesResponse_QNAME);
            bodyBlock.setValue(myGetScalesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetDeviceDrivers operation.
     */
    private void _deserialize_GetDeviceDrivers(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetDeviceDriversResponseObj =
                myns1_GetDeviceDriversResponse__GetDeviceDriversResponse_LiteralSerializer.deserialize(ns1_GetDeviceDrivers_GetDeviceDriversResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetDeviceDrivers_GetDeviceDriversResponse_QNAME);
            bodyBlock.setValue(myGetDeviceDriversResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the AdditionalHandlingTypes operation.
     */
    private void _deserialize_AdditionalHandlingTypes(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myAdditionalHandlingTypesResponseObj =
                myns1_AdditionalHandlingTypesResponse__AdditionalHandlingTypesResponse_LiteralSerializer.deserialize(ns1_AdditionalHandlingTypes_AdditionalHandlingTypesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_AdditionalHandlingTypes_AdditionalHandlingTypesResponse_QNAME);
            bodyBlock.setValue(myAdditionalHandlingTypesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the TransmitItems operation.
     */
    private void _deserialize_TransmitItems(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myTransmitItemsResponseObj =
                myns1_TransmitItemsResponse__TransmitItemsResponse_LiteralSerializer.deserialize(ns1_TransmitItems_TransmitItemsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_TransmitItems_TransmitItemsResponse_QNAME);
            bodyBlock.setValue(myTransmitItemsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetCurrencyByCountryLocale operation.
     */
    private void _deserialize_GetCurrencyByCountryLocale(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetCurrencyByCountryLocaleResponseObj =
                myns1_GetCurrencyByCountryLocaleResponse__GetCurrencyByCountryLocaleResponse_LiteralSerializer.deserialize(ns1_GetCurrencyByCountryLocale_GetCurrencyByCountryLocaleResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetCurrencyByCountryLocale_GetCurrencyByCountryLocaleResponse_QNAME);
            bodyBlock.setValue(myGetCurrencyByCountryLocaleResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the NAFTAProducer operation.
     */
    private void _deserialize_NAFTAProducer(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myNAFTAProducerResponseObj =
                myns1_NAFTAProducerResponse__NAFTAProducerResponse_LiteralSerializer.deserialize(ns1_NAFTAProducer_NAFTAProducerResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_NAFTAProducer_NAFTAProducerResponse_QNAME);
            bodyBlock.setValue(myNAFTAProducerResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the AddDocumentProfile operation.
     */
    private void _deserialize_AddDocumentProfile(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myAddDocumentProfileResponseObj =
                myns1_AddDocumentProfileResponse__AddDocumentProfileResponse_LiteralSerializer.deserialize(ns1_AddDocumentProfile_AddDocumentProfileResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_AddDocumentProfile_AddDocumentProfileResponse_QNAME);
            bodyBlock.setValue(myAddDocumentProfileResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the PrintRequest operation.
     */
    private void _deserialize_PrintRequest(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myPrintRequestResponseObj =
                myns1_PrintRequestResponse__PrintRequestResponse_LiteralSerializer.deserialize(ns1_PrintRequest_PrintRequestResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_PrintRequest_PrintRequestResponse_QNAME);
            bodyBlock.setValue(myPrintRequestResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the HazmatLabels operation.
     */
    private void _deserialize_HazmatLabels(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myHazmatLabelsResponseObj =
                myns1_HazmatLabelsResponse__HazmatLabelsResponse_LiteralSerializer.deserialize(ns1_HazmatLabels_HazmatLabelsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_HazmatLabels_HazmatLabelsResponse_QNAME);
            bodyBlock.setValue(myHazmatLabelsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SEDMethods operation.
     */
    private void _deserialize_SEDMethods(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySEDMethodsResponseObj =
                myns1_SEDMethodsResponse__SEDMethodsResponse_LiteralSerializer.deserialize(ns1_SEDMethods_SEDMethodsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SEDMethods_SEDMethodsResponse_QNAME);
            bodyBlock.setValue(mySEDMethodsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetPackageTypes operation.
     */
    private void _deserialize_GetPackageTypes(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetPackageTypesResponseObj =
                myns1_GetPackageTypesResponse__GetPackageTypesResponse_LiteralSerializer.deserialize(ns1_GetPackageTypes_GetPackageTypesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetPackageTypes_GetPackageTypesResponse_QNAME);
            bodyBlock.setValue(myGetPackageTypesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the DeleteHistoryItems operation.
     */
    private void _deserialize_DeleteHistoryItems(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDeleteHistoryItemsResponseObj =
                myns1_DeleteHistoryItemsResponse__DeleteHistoryItemsResponse_LiteralSerializer.deserialize(ns1_DeleteHistoryItems_DeleteHistoryItemsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DeleteHistoryItems_DeleteHistoryItemsResponse_QNAME);
            bodyBlock.setValue(myDeleteHistoryItemsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetSearchFieldList operation.
     */
    private void _deserialize_GetSearchFieldList(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetSearchFieldListResponseObj =
                myns1_GetSearchFieldListResponse__GetSearchFieldListResponse_LiteralSerializer.deserialize(ns1_GetSearchFieldList_GetSearchFieldListResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetSearchFieldList_GetSearchFieldListResponse_QNAME);
            bodyBlock.setValue(myGetSearchFieldListResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the DeleteShipper operation.
     */
    private void _deserialize_DeleteShipper(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDeleteShipperResponseObj =
                myns1_DeleteShipperResponse__DeleteShipperResponse_LiteralSerializer.deserialize(ns1_DeleteShipper_DeleteShipperResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DeleteShipper_DeleteShipperResponse_QNAME);
            bodyBlock.setValue(myDeleteShipperResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the App_Db_Version operation.
     */
    private void _deserialize_App_Db_Version(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myApp_Db_VersionResponseObj =
                myns1_App_Db_VersionResponse__App_Db_VersionResponse_LiteralSerializer.deserialize(ns1_App_Db_Version_App_Db_VersionResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_App_Db_Version_App_Db_VersionResponse_QNAME);
            bodyBlock.setValue(myApp_Db_VersionResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CODPaymentMethods operation.
     */
    private void _deserialize_CODPaymentMethods(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCODPaymentMethodsResponseObj =
                myns1_CODPaymentMethodsResponse__CODPaymentMethodsResponse_LiteralSerializer.deserialize(ns1_CODPaymentMethods_CODPaymentMethodsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CODPaymentMethods_CODPaymentMethodsResponse_QNAME);
            bodyBlock.setValue(myCODPaymentMethodsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the InspectNameAddress operation.
     */
    private void _deserialize_InspectNameAddress(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myInspectNameAddressResponseObj =
                myns1_InspectNameAddressResponse__InspectNameAddressResponse_LiteralSerializer.deserialize(ns1_InspectNameAddress_InspectNameAddressResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_InspectNameAddress_InspectNameAddressResponse_QNAME);
            bodyBlock.setValue(myInspectNameAddressResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the HazMatRegulations operation.
     */
    private void _deserialize_HazMatRegulations(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myHazMatRegulationsResponseObj =
                myns1_HazMatRegulationsResponse__HazMatRegulationsResponse_LiteralSerializer.deserialize(ns1_HazMatRegulations_HazMatRegulationsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_HazMatRegulations_HazMatRegulationsResponse_QNAME);
            bodyBlock.setValue(myHazMatRegulationsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ReShip operation.
     */
    private void _deserialize_ReShip(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myReShipResponseObj =
                myns1_ReShipResponse__ReShipResponse_LiteralSerializer.deserialize(ns1_ReShip_ReShipResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ReShip_ReShipResponse_QNAME);
            bodyBlock.setValue(myReShipResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ProcessBatch operation.
     */
    private void _deserialize_ProcessBatch(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myProcessBatchResponseObj =
                myns1_ProcessBatchResponse__ProcessBatchResponse_LiteralSerializer.deserialize(ns1_ProcessBatch_ProcessBatchResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ProcessBatch_ProcessBatchResponse_QNAME);
            bodyBlock.setValue(myProcessBatchResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the DryIcePurposes operation.
     */
    private void _deserialize_DryIcePurposes(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDryIcePurposesResponseObj =
                myns1_DryIcePurposesResponse__DryIcePurposesResponse_LiteralSerializer.deserialize(ns1_DryIcePurposes_DryIcePurposesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DryIcePurposes_DryIcePurposesResponse_QNAME);
            bodyBlock.setValue(myDryIcePurposesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByShipperAndShipdateWithCount operation.
     */
    private void _deserialize_SearchByShipperAndShipdateWithCount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByShipperAndShipdateWithCountResponseObj =
                myns1_SearchByShipperAndShipdateWithCountResponse__SearchByShipperAndShipdateWithCountResponse_LiteralSerializer.deserialize(ns1_SearchByShipperAndShipdateWithCount_SearchByShipperAndShipdateWithCountResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByShipperAndShipdateWithCount_SearchByShipperAndShipdateWithCountResponse_QNAME);
            bodyBlock.setValue(mySearchByShipperAndShipdateWithCountResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the InstantiateWCF operation.
     */
    private void _deserialize_InstantiateWCF(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myInstantiateWCFResponseObj =
                myns1_InstantiateWCFResponse__InstantiateWCFResponse_LiteralSerializer.deserialize(ns1_InstantiateWCF_InstantiateWCFResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_InstantiateWCF_InstantiateWCFResponse_QNAME);
            bodyBlock.setValue(myInstantiateWCFResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetServices operation.
     */
    private void _deserialize_GetServices(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetServicesResponseObj =
                myns1_GetServicesResponse__GetServicesResponse_LiteralSerializer.deserialize(ns1_GetServices_GetServicesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetServices_GetServicesResponse_QNAME);
            bodyBlock.setValue(myGetServicesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ChangeShipperSymbol operation.
     */
    private void _deserialize_ChangeShipperSymbol(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myChangeShipperSymbolResponseObj =
                myns1_ChangeShipperSymbolResponse__ChangeShipperSymbolResponse_LiteralSerializer.deserialize(ns1_ChangeShipperSymbol_ChangeShipperSymbolResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ChangeShipperSymbol_ChangeShipperSymbolResponse_QNAME);
            bodyBlock.setValue(myChangeShipperSymbolResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByTrackingNumberWithCount operation.
     */
    private void _deserialize_SearchByTrackingNumberWithCount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByTrackingNumberWithCountResponseObj =
                myns1_SearchByTrackingNumberWithCountResponse__SearchByTrackingNumberWithCountResponse_LiteralSerializer.deserialize(ns1_SearchByTrackingNumberWithCount_SearchByTrackingNumberWithCountResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByTrackingNumberWithCount_SearchByTrackingNumberWithCountResponse_QNAME);
            bodyBlock.setValue(mySearchByTrackingNumberWithCountResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetHistoryItemList operation.
     */
    private void _deserialize_GetHistoryItemList(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetHistoryItemListResponseObj =
                myns1_GetHistoryItemListResponse__GetHistoryItemListResponse_LiteralSerializer.deserialize(ns1_GetHistoryItemList_GetHistoryItemListResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetHistoryItemList_GetHistoryItemListResponse_QNAME);
            bodyBlock.setValue(myGetHistoryItemListResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the AddPrinter operation.
     */
    private void _deserialize_AddPrinter(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myAddPrinterResponseObj =
                myns1_AddPrinterResponse__AddPrinterResponse_LiteralSerializer.deserialize(ns1_AddPrinter_AddPrinterResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_AddPrinter_AddPrinterResponse_QNAME);
            bodyBlock.setValue(myAddPrinterResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ExchangeMethods operation.
     */
    private void _deserialize_ExchangeMethods(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myExchangeMethodsResponseObj =
                myns1_ExchangeMethodsResponse__ExchangeMethodsResponse_LiteralSerializer.deserialize(ns1_ExchangeMethods_ExchangeMethodsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ExchangeMethods_ExchangeMethodsResponse_QNAME);
            bodyBlock.setValue(myExchangeMethodsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the HazMatRegulationSets operation.
     */
    private void _deserialize_HazMatRegulationSets(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myHazMatRegulationSetsResponseObj =
                myns1_HazMatRegulationSetsResponse__HazMatRegulationSetsResponse_LiteralSerializer.deserialize(ns1_HazMatRegulationSets_HazMatRegulationSetsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_HazMatRegulationSets_HazMatRegulationSetsResponse_QNAME);
            bodyBlock.setValue(myHazMatRegulationSetsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CommercialInvoiceMethods operation.
     */
    private void _deserialize_CommercialInvoiceMethods(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCommercialInvoiceMethodsResponseObj =
                myns1_CommercialInvoiceMethodsResponse__CommercialInvoiceMethodsResponse_LiteralSerializer.deserialize(ns1_CommercialInvoiceMethods_CommercialInvoiceMethodsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CommercialInvoiceMethods_CommercialInvoiceMethodsResponse_QNAME);
            bodyBlock.setValue(myCommercialInvoiceMethodsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the DryIceRegulationSets operation.
     */
    private void _deserialize_DryIceRegulationSets(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDryIceRegulationSetsResponseObj =
                myns1_DryIceRegulationSetsResponse__DryIceRegulationSetsResponse_LiteralSerializer.deserialize(ns1_DryIceRegulationSets_DryIceRegulationSetsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DryIceRegulationSets_DryIceRegulationSetsResponse_QNAME);
            bodyBlock.setValue(myDryIceRegulationSetsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CloseOutModes operation.
     */
    private void _deserialize_CloseOutModes(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCloseOutModesResponseObj =
                myns1_CloseOutModesResponse__CloseOutModesResponse_LiteralSerializer.deserialize(ns1_CloseOutModes_CloseOutModesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CloseOutModes_CloseOutModesResponse_QNAME);
            bodyBlock.setValue(myCloseOutModesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the DeletePrinter operation.
     */
    private void _deserialize_DeletePrinter(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDeletePrinterResponseObj =
                myns1_DeletePrinterResponse__DeletePrinterResponse_LiteralSerializer.deserialize(ns1_DeletePrinter_DeletePrinterResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DeletePrinter_DeletePrinterResponse_QNAME);
            bodyBlock.setValue(myDeletePrinterResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ModifyPackageList operation.
     */
    private void _deserialize_ModifyPackageList(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myModifyPackageListResponseObj =
                myns1_ModifyPackageListResponse__ModifyPackageListResponse_LiteralSerializer.deserialize(ns1_ModifyPackageList_ModifyPackageListResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ModifyPackageList_ModifyPackageListResponse_QNAME);
            bodyBlock.setValue(myModifyPackageListResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ShipOrder operation.
     */
    private void _deserialize_ShipOrder(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myShipOrderResponseObj =
                myns1_ShipOrderResponse__ShipOrderResponse_LiteralSerializer.deserialize(ns1_ShipOrder_ShipOrderResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ShipOrder_ShipOrderResponse_QNAME);
            bodyBlock.setValue(myShipOrderResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ReProcess operation.
     */
    private void _deserialize_ReProcess(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myReProcessResponseTypeObj =
                myns1_ReProcessResponseType__ReProcessResponseType_LiteralSerializer.deserialize(ns1_ReProcess_ReProcessResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ReProcess_ReProcessResponse_QNAME);
            bodyBlock.setValue(myReProcessResponseTypeObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetDocumentProfile operation.
     */
    private void _deserialize_GetDocumentProfile(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetDocumentProfileResponseObj =
                myns1_GetDocumentProfileResponse__GetDocumentProfileResponse_LiteralSerializer.deserialize(ns1_GetDocumentProfile_GetDocumentProfileResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetDocumentProfile_GetDocumentProfileResponse_QNAME);
            bodyBlock.setValue(myGetDocumentProfileResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the PrintPositionDocumentXml operation.
     */
    private void _deserialize_PrintPositionDocumentXml(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myPrintPositionDocumentXmlResponseObj =
                myns1_PrintPositionDocumentXmlResponse__PrintPositionDocumentXmlResponse_LiteralSerializer.deserialize(ns1_PrintPositionDocumentXml_PrintPositionDocumentXmlResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_PrintPositionDocumentXml_PrintPositionDocumentXmlResponse_QNAME);
            bodyBlock.setValue(myPrintPositionDocumentXmlResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetLanguages operation.
     */
    private void _deserialize_GetLanguages(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetLanguagesResponseObj =
                myns1_GetLanguagesResponse__GetLanguagesResponse_LiteralSerializer.deserialize(ns1_GetLanguages_GetLanguagesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetLanguages_GetLanguagesResponse_QNAME);
            bodyBlock.setValue(myGetLanguagesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ChargesOnDocumentation operation.
     */
    private void _deserialize_ChargesOnDocumentation(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myChargesOnDocumentationResponseObj =
                myns1_ChargesOnDocumentationResponse__ChargesOnDocumentationResponse_LiteralSerializer.deserialize(ns1_ChargesOnDocumentation_ChargesOnDocumentationResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ChargesOnDocumentation_ChargesOnDocumentationResponse_QNAME);
            bodyBlock.setValue(myChargesOnDocumentationResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetTransmitItemsByStatus operation.
     */
    private void _deserialize_GetTransmitItemsByStatus(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetTransmitItemsByStatusResponseObj =
                myns1_GetTransmitItemsByStatusResponse__GetTransmitItemsByStatusResponse_LiteralSerializer.deserialize(ns1_GetTransmitItemsByStatus_GetTransmitItemsByStatusResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetTransmitItemsByStatus_GetTransmitItemsByStatusResponse_QNAME);
            bodyBlock.setValue(myGetTransmitItemsByStatusResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the DeliveryMethods operation.
     */
    private void _deserialize_DeliveryMethods(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDeliveryMethodsResponseObj =
                myns1_DeliveryMethodsResponse__DeliveryMethodsResponse_LiteralSerializer.deserialize(ns1_DeliveryMethods_DeliveryMethodsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DeliveryMethods_DeliveryMethodsResponse_QNAME);
            bodyBlock.setValue(myDeliveryMethodsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the VoidPackagesByGlobalMsnList operation.
     */
    private void _deserialize_VoidPackagesByGlobalMsnList(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myVoidPackagesByGlobalMsnListResponseObj =
                myns1_VoidPackagesByGlobalMsnListResponse__VoidPackagesByGlobalMsnListResponse_LiteralSerializer.deserialize(ns1_VoidPackagesByGlobalMsnList_VoidPackagesByGlobalMsnListResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_VoidPackagesByGlobalMsnList_VoidPackagesByGlobalMsnListResponse_QNAME);
            bodyBlock.setValue(myVoidPackagesByGlobalMsnListResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ShipBatchItem operation.
     */
    private void _deserialize_ShipBatchItem(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myShipBatchItemResponseObj =
                myns1_ShipBatchItemResponse__ShipBatchItemResponse_LiteralSerializer.deserialize(ns1_ShipBatchItem_ShipBatchItemResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ShipBatchItem_ShipBatchItemResponse_QNAME);
            bodyBlock.setValue(myShipBatchItemResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the UpdatePrinter operation.
     */
    private void _deserialize_UpdatePrinter(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myUpdatePrinterResponseObj =
                myns1_UpdatePrinterResponse__UpdatePrinterResponse_LiteralSerializer.deserialize(ns1_UpdatePrinter_UpdatePrinterResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_UpdatePrinter_UpdatePrinterResponse_QNAME);
            bodyBlock.setValue(myUpdatePrinterResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByGlobalMsn operation.
     */
    private void _deserialize_SearchByGlobalMsn(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByGlobalMsnResponseObj =
                myns1_SearchByGlobalMsnResponse__SearchByGlobalMsnResponse_LiteralSerializer.deserialize(ns1_SearchByGlobalMsn_SearchByGlobalMsnResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByGlobalMsn_SearchByGlobalMsnResponse_QNAME);
            bodyBlock.setValue(mySearchByGlobalMsnResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CSAdapter_Version operation.
     */
    private void _deserialize_CSAdapter_Version(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCSAdapter_VersionResponseObj =
                myns1_CSAdapter_VersionResponse__CSAdapter_VersionResponse_LiteralSerializer.deserialize(ns1_CSAdapter_Version_CSAdapter_VersionResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CSAdapter_Version_CSAdapter_VersionResponse_QNAME);
            bodyBlock.setValue(myCSAdapter_VersionResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CODReturnMethods operation.
     */
    private void _deserialize_CODReturnMethods(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCODReturnMethodsResponseObj =
                myns1_CODReturnMethodsResponse__CODReturnMethodsResponse_LiteralSerializer.deserialize(ns1_CODReturnMethods_CODReturnMethodsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CODReturnMethods_CODReturnMethodsResponse_QNAME);
            bodyBlock.setValue(myCODReturnMethodsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ProcessBatchByRequest operation.
     */
    private void _deserialize_ProcessBatchByRequest(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myProcessBatchByRequestResponseObj =
                myns1_ProcessBatchByRequestResponse__ProcessBatchByRequestResponse_LiteralSerializer.deserialize(ns1_ProcessBatchByRequest_ProcessBatchByRequestResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ProcessBatchByRequest_ProcessBatchByRequestResponse_QNAME);
            bodyBlock.setValue(myProcessBatchByRequestResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the HazMatCACategories operation.
     */
    private void _deserialize_HazMatCACategories(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myHazMatCACategoriesResponseObj =
                myns1_HazMatCACategoriesResponse__HazMatCACategoriesResponse_LiteralSerializer.deserialize(ns1_HazMatCACategories_HazMatCACategoriesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_HazMatCACategories_HazMatCACategoriesResponse_QNAME);
            bodyBlock.setValue(myHazMatCACategoriesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetNameAddressValidationCandidates operation.
     */
    private void _deserialize_GetNameAddressValidationCandidates(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetNameAddressValidationCandidatesResponseObj =
                myns1_GetNameAddressValidationCandidatesResponse__GetNameAddressValidationCandidatesResponse_LiteralSerializer.deserialize(ns1_GetNameAddressValidationCandidates_GetNameAddressValidationCandidatesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetNameAddressValidationCandidates_GetNameAddressValidationCandidatesResponse_QNAME);
            bodyBlock.setValue(myGetNameAddressValidationCandidatesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetCurrencies operation.
     */
    private void _deserialize_GetCurrencies(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetCurrenciesResponseObj =
                myns1_GetCurrenciesResponse__GetCurrenciesResponse_LiteralSerializer.deserialize(ns1_GetCurrencies_GetCurrenciesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetCurrencies_GetCurrenciesResponse_QNAME);
            bodyBlock.setValue(myGetCurrenciesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetTransmitItemsAvailableForDeletion operation.
     */
    private void _deserialize_GetTransmitItemsAvailableForDeletion(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetTransmitItemsAvailableForDeletionResponseObj =
                myns1_GetTransmitItemsAvailableForDeletionResponse__GetTransmitItemsAvailableForDeletionResponse_LiteralSerializer.deserialize(ns1_GetTransmitItemsAvailableForDeletion_GetTransmitItemsAvailableForDeletionResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetTransmitItemsAvailableForDeletion_GetTransmitItemsAvailableForDeletionResponse_QNAME);
            bodyBlock.setValue(myGetTransmitItemsAvailableForDeletionResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByGlobalBundleId operation.
     */
    private void _deserialize_SearchByGlobalBundleId(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByGlobalBundleIdResponseObj =
                myns1_SearchByGlobalBundleIdResponse__SearchByGlobalBundleIdResponse_LiteralSerializer.deserialize(ns1_SearchByGlobalBundleId_SearchByGlobalBundleIdResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByGlobalBundleId_SearchByGlobalBundleIdResponse_QNAME);
            bodyBlock.setValue(mySearchByGlobalBundleIdResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetAvailablePrinters operation.
     */
    private void _deserialize_GetAvailablePrinters(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetAvailablePrintersResponseObj =
                myns1_GetAvailablePrintersResponse__GetAvailablePrintersResponse_LiteralSerializer.deserialize(ns1_GetAvailablePrinters_GetAvailablePrintersResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetAvailablePrinters_GetAvailablePrintersResponse_QNAME);
            bodyBlock.setValue(myGetAvailablePrintersResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetBatchShipmentErrors operation.
     */
    private void _deserialize_GetBatchShipmentErrors(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetBatchShipmentErrorsResponseObj =
                myns1_GetBatchShipmentErrorsResponse__GetBatchShipmentErrorsResponse_LiteralSerializer.deserialize(ns1_GetBatchShipmentErrors_GetBatchShipmentErrorsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetBatchShipmentErrors_GetBatchShipmentErrorsResponse_QNAME);
            bodyBlock.setValue(myGetBatchShipmentErrorsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the LoadBatchItem operation.
     */
    private void _deserialize_LoadBatchItem(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myLoadBatchItemResponseObj =
                myns1_LoadBatchItemResponse__LoadBatchItemResponse_LiteralSerializer.deserialize(ns1_LoadBatchItem_LoadBatchItemResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_LoadBatchItem_LoadBatchItemResponse_QNAME);
            bodyBlock.setValue(myLoadBatchItemResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the StageBatch operation.
     */
    private void _deserialize_StageBatch(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myStageBatchResponseObj =
                myns1_StageBatchResponse__StageBatchResponse_LiteralSerializer.deserialize(ns1_StageBatch_StageBatchResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_StageBatch_StageBatchResponse_QNAME);
            bodyBlock.setValue(myStageBatchResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CopyPrinter operation.
     */
    private void _deserialize_CopyPrinter(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCopyPrinterResponseObj =
                myns1_CopyPrinterResponse__CopyPrinterResponse_LiteralSerializer.deserialize(ns1_CopyPrinter_CopyPrinterResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CopyPrinter_CopyPrinterResponse_QNAME);
            bodyBlock.setValue(myCopyPrinterResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the DeleteTransmitItems operation.
     */
    private void _deserialize_DeleteTransmitItems(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDeleteTransmitItemsResponseObj =
                myns1_DeleteTransmitItemsResponse__DeleteTransmitItemsResponse_LiteralSerializer.deserialize(ns1_DeleteTransmitItems_DeleteTransmitItemsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DeleteTransmitItems_DeleteTransmitItemsResponse_QNAME);
            bodyBlock.setValue(myDeleteTransmitItemsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the NAFTARVCMethods operation.
     */
    private void _deserialize_NAFTARVCMethods(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myNAFTARVCMethodsResponseObj =
                myns1_NAFTARVCMethodsResponse__NAFTARVCMethodsResponse_LiteralSerializer.deserialize(ns1_NAFTARVCMethods_NAFTARVCMethodsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_NAFTARVCMethods_NAFTARVCMethodsResponse_QNAME);
            bodyBlock.setValue(myNAFTARVCMethodsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the LoadBatch operation.
     */
    private void _deserialize_LoadBatch(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myLoadBatchResponseObj =
                myns1_LoadBatchResponse__LoadBatchResponse_LiteralSerializer.deserialize(ns1_LoadBatch_LoadBatchResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_LoadBatch_LoadBatchResponse_QNAME);
            bodyBlock.setValue(myLoadBatchResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByConsigneeReference operation.
     */
    private void _deserialize_SearchByConsigneeReference(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByConsigneeReferenceResponseObj =
                myns1_SearchByConsigneeReferenceResponse__SearchByConsigneeReferenceResponse_LiteralSerializer.deserialize(ns1_SearchByConsigneeReference_SearchByConsigneeReferenceResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByConsigneeReference_SearchByConsigneeReferenceResponse_QNAME);
            bodyBlock.setValue(mySearchByConsigneeReferenceResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetNameAddressValidationCandidatesWithParams operation.
     */
    private void _deserialize_GetNameAddressValidationCandidatesWithParams(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetNameAddressValidationCandidatesWithParamsResponseObj =
                myns1_GetNameAddressValidationCandidatesWithParamsResponse__GetNameAddressValidationCandidatesWithParamsResponse_LiteralSerializer.deserialize(ns1_GetNameAddressValidationCandidatesWithParams_GetNameAddressValidationCandidatesWithParamsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetNameAddressValidationCandidatesWithParams_GetNameAddressValidationCandidatesWithParamsResponse_QNAME);
            bodyBlock.setValue(myGetNameAddressValidationCandidatesWithParamsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetCarriersbyShippers operation.
     */
    private void _deserialize_GetCarriersbyShippers(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetCarriersbyShippersResponseObj =
                myns1_GetCarriersbyShippersResponse__GetCarriersbyShippersResponse_LiteralSerializer.deserialize(ns1_GetCarriersbyShippers_GetCarriersbyShippersResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetCarriersbyShippers_GetCarriersbyShippersResponse_QNAME);
            bodyBlock.setValue(myGetCarriersbyShippersResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetGroupDocuments operation.
     */
    private void _deserialize_GetGroupDocuments(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetGroupDocumentsResponseObj =
                myns1_GetGroupDocumentsResponse__GetGroupDocumentsResponse_LiteralSerializer.deserialize(ns1_GetGroupDocuments_GetGroupDocumentsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetGroupDocuments_GetGroupDocumentsResponse_QNAME);
            bodyBlock.setValue(myGetGroupDocumentsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the Business_Object_Version operation.
     */
    private void _deserialize_Business_Object_Version(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myBusiness_Object_VersionResponseObj =
                myns1_Business_Object_VersionResponse__Business_Object_VersionResponse_LiteralSerializer.deserialize(ns1_Business_Object_Version_Business_Object_VersionResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_Business_Object_Version_Business_Object_VersionResponse_QNAME);
            bodyBlock.setValue(myBusiness_Object_VersionResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetCarriers operation.
     */
    private void _deserialize_GetCarriers(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetCarriersResponseObj =
                myns1_GetCarriersResponse__GetCarriersResponse_LiteralSerializer.deserialize(ns1_GetCarriers_GetCarriersResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetCarriers_GetCarriersResponse_QNAME);
            bodyBlock.setValue(myGetCarriersResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SetCloseOutMode operation.
     */
    private void _deserialize_SetCloseOutMode(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySetCloseOutModeResponseObj =
                myns1_SetCloseOutModeResponse__SetCloseOutModeResponse_LiteralSerializer.deserialize(ns1_SetCloseOutMode_SetCloseOutModeResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SetCloseOutMode_SetCloseOutModeResponse_QNAME);
            bodyBlock.setValue(mySetCloseOutModeResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ReturnAddressMethods operation.
     */
    private void _deserialize_ReturnAddressMethods(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myReturnAddressMethodsResponseObj =
                myns1_ReturnAddressMethodsResponse__ReturnAddressMethodsResponse_LiteralSerializer.deserialize(ns1_ReturnAddressMethods_ReturnAddressMethodsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ReturnAddressMethods_ReturnAddressMethodsResponse_QNAME);
            bodyBlock.setValue(myReturnAddressMethodsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetGroupingTypes operation.
     */
    private void _deserialize_GetGroupingTypes(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetGroupingTypesResponseObj =
                myns1_GetGroupingTypesResponse__GetGroupingTypesResponse_LiteralSerializer.deserialize(ns1_GetGroupingTypes_GetGroupingTypesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetGroupingTypes_GetGroupingTypesResponse_QNAME);
            bodyBlock.setValue(myGetGroupingTypesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByShipperReference operation.
     */
    private void _deserialize_SearchByShipperReference(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByShipperReferenceResponseObj =
                myns1_SearchByShipperReferenceResponse__SearchByShipperReferenceResponse_LiteralSerializer.deserialize(ns1_SearchByShipperReference_SearchByShipperReferenceResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByShipperReference_SearchByShipperReferenceResponse_QNAME);
            bodyBlock.setValue(mySearchByShipperReferenceResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ValidateEntitlements operation.
     */
    private void _deserialize_ValidateEntitlements(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myValidateEntitlementsResponseObj =
                myns1_ValidateEntitlementsResponse__ValidateEntitlementsResponse_LiteralSerializer.deserialize(ns1_ValidateEntitlements_ValidateEntitlementsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ValidateEntitlements_ValidateEntitlementsResponse_QNAME);
            bodyBlock.setValue(myValidateEntitlementsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the OpenGroup operation.
     */
    private void _deserialize_OpenGroup(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myOpenGroupResponseObj =
                myns1_OpenGroupResponse__OpenGroupResponse_LiteralSerializer.deserialize(ns1_OpenGroup_OpenGroupResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_OpenGroup_OpenGroupResponse_QNAME);
            bodyBlock.setValue(myOpenGroupResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the NAFTAPreferenceCriterion operation.
     */
    private void _deserialize_NAFTAPreferenceCriterion(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myNAFTAPreferenceCriterionResponseObj =
                myns1_NAFTAPreferenceCriterionResponse__NAFTAPreferenceCriterionResponse_LiteralSerializer.deserialize(ns1_NAFTAPreferenceCriterion_NAFTAPreferenceCriterionResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_NAFTAPreferenceCriterion_NAFTAPreferenceCriterionResponse_QNAME);
            bodyBlock.setValue(myNAFTAPreferenceCriterionResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the TransmitItem operation.
     */
    private void _deserialize_TransmitItem(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myTransmitItemResponseObj =
                myns1_TransmitItemResponse__TransmitItemResponse_LiteralSerializer.deserialize(ns1_TransmitItem_TransmitItemResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_TransmitItem_TransmitItemResponse_QNAME);
            bodyBlock.setValue(myTransmitItemResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the SearchByFilters operation.
     */
    private void _deserialize_SearchByFilters(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object mySearchByFiltersResponseObj =
                myns1_SearchByFiltersResponse__SearchByFiltersResponse_LiteralSerializer.deserialize(ns1_SearchByFilters_SearchByFiltersResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_SearchByFilters_SearchByFiltersResponse_QNAME);
            bodyBlock.setValue(mySearchByFiltersResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the DeleteDocumentProfile operation.
     */
    private void _deserialize_DeleteDocumentProfile(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDeleteDocumentProfileResponseObj =
                myns1_DeleteDocumentProfileResponse__DeleteDocumentProfileResponse_LiteralSerializer.deserialize(ns1_DeleteDocumentProfile_DeleteDocumentProfileResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DeleteDocumentProfile_DeleteDocumentProfileResponse_QNAME);
            bodyBlock.setValue(myDeleteDocumentProfileResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetStagedBatches operation.
     */
    private void _deserialize_GetStagedBatches(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetStagedBatchesResponseObj =
                myns1_GetStagedBatchesResponse__GetStagedBatchesResponse_LiteralSerializer.deserialize(ns1_GetStagedBatches_GetStagedBatchesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetStagedBatches_GetStagedBatchesResponse_QNAME);
            bodyBlock.setValue(myGetStagedBatchesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetGroups operation.
     */
    private void _deserialize_GetGroups(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetGroupsResponseObj =
                myns1_GetGroupsResponse__GetGroupsResponse_LiteralSerializer.deserialize(ns1_GetGroups_GetGroupsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetGroups_GetGroupsResponse_QNAME);
            bodyBlock.setValue(myGetGroupsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetBatchCount operation.
     */
    private void _deserialize_GetBatchCount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetBatchCountResponseObj =
                myns1_GetBatchCountResponse__GetBatchCountResponse_LiteralSerializer.deserialize(ns1_GetBatchCount_GetBatchCountResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetBatchCount_GetBatchCountResponse_QNAME);
            bodyBlock.setValue(myGetBatchCountResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetHolidays operation.
     */
    private void _deserialize_GetHolidays(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetHolidaysResponseObj =
                myns1_GetHolidaysResponse__GetHolidaysResponse_LiteralSerializer.deserialize(ns1_GetHolidays_GetHolidaysResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetHolidays_GetHolidaysResponse_QNAME);
            bodyBlock.setValue(myGetHolidaysResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the ManagementLayer_Version operation.
     */
    private void _deserialize_ManagementLayer_Version(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myManagementLayer_VersionResponseObj =
                myns1_ManagementLayer_VersionResponse__ManagementLayer_VersionResponse_LiteralSerializer.deserialize(ns1_ManagementLayer_Version_ManagementLayer_VersionResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ManagementLayer_Version_ManagementLayer_VersionResponse_QNAME);
            bodyBlock.setValue(myManagementLayer_VersionResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the AreTransmitItemsAvailableForDeletion operation.
     */
    private void _deserialize_AreTransmitItemsAvailableForDeletion(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myAreTransmitItemsAvailableForDeletionResponseObj =
                myns1_AreTransmitItemsAvailableForDeletionResponse__AreTransmitItemsAvailableForDeletionResponse_LiteralSerializer.deserialize(ns1_AreTransmitItemsAvailableForDeletion_AreTransmitItemsAvailableForDeletionResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_AreTransmitItemsAvailableForDeletion_AreTransmitItemsAvailableForDeletionResponse_QNAME);
            bodyBlock.setValue(myAreTransmitItemsAvailableForDeletionResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CopyDocumentProfile operation.
     */
    private void _deserialize_CopyDocumentProfile(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCopyDocumentProfileResponseObj =
                myns1_CopyDocumentProfileResponse__CopyDocumentProfileResponse_LiteralSerializer.deserialize(ns1_CopyDocumentProfile_CopyDocumentProfileResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CopyDocumentProfile_CopyDocumentProfileResponse_QNAME);
            bodyBlock.setValue(myCopyDocumentProfileResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the Rate operation.
     */
    private void _deserialize_Rate(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myRateResponseObj =
                myns1_RateResponse__RateResponse_LiteralSerializer.deserialize(ns1_Rate_RateResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_Rate_RateResponse_QNAME);
            bodyBlock.setValue(myRateResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetDocumentFormats operation.
     */
    private void _deserialize_GetDocumentFormats(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetDocumentFormatsResponseObj =
                myns1_GetDocumentFormatsResponse__GetDocumentFormatsResponse_LiteralSerializer.deserialize(ns1_GetDocumentFormats_GetDocumentFormatsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetDocumentFormats_GetDocumentFormatsResponse_QNAME);
            bodyBlock.setValue(myGetDocumentFormatsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetCloseOutMode operation.
     */
    private void _deserialize_GetCloseOutMode(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetCloseOutModeResponseObj =
                myns1_GetCloseOutModeResponse__GetCloseOutModeResponse_LiteralSerializer.deserialize(ns1_GetCloseOutMode_GetCloseOutModeResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetCloseOutMode_GetCloseOutModeResponse_QNAME);
            bodyBlock.setValue(myGetCloseOutModeResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the RateServices operation.
     */
    private void _deserialize_RateServices(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myRateServicesResponseObj =
                myns1_RateServicesResponse__RateServicesResponse_LiteralSerializer.deserialize(ns1_RateServices_RateServicesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RateServices_RateServicesResponse_QNAME);
            bodyBlock.setValue(myRateServicesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the PrintBatch operation.
     */
    private void _deserialize_PrintBatch(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myPrintBatchResponseObj =
                myns1_PrintBatchResponse__PrintBatchResponse_LiteralSerializer.deserialize(ns1_PrintBatch_PrintBatchResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_PrintBatch_PrintBatchResponse_QNAME);
            bodyBlock.setValue(myPrintBatchResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetGroupings operation.
     */
    private void _deserialize_GetGroupings(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetGroupingsResponseObj =
                myns1_GetGroupingsResponse__GetGroupingsResponse_LiteralSerializer.deserialize(ns1_GetGroupings_GetGroupingsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetGroupings_GetGroupingsResponse_QNAME);
            bodyBlock.setValue(myGetGroupingsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the AlcoholPackaging operation.
     */
    private void _deserialize_AlcoholPackaging(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myAlcoholPackagingResponseObj =
                myns1_AlcoholPackagingResponse__AlcoholPackagingResponse_LiteralSerializer.deserialize(ns1_AlcoholPackaging_AlcoholPackagingResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_AlcoholPackaging_AlcoholPackagingResponse_QNAME);
            bodyBlock.setValue(myAlcoholPackagingResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the DeleteHistoryItem operation.
     */
    private void _deserialize_DeleteHistoryItem(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myDeleteHistoryItemResponseObj =
                myns1_DeleteHistoryItemResponse__DeleteHistoryItemResponse_LiteralSerializer.deserialize(ns1_DeleteHistoryItem_DeleteHistoryItemResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DeleteHistoryItem_DeleteHistoryItemResponse_QNAME);
            bodyBlock.setValue(myDeleteHistoryItemResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the RemoveBatchItem operation.
     */
    private void _deserialize_RemoveBatchItem(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myRemoveBatchItemResponseObj =
                myns1_RemoveBatchItemResponse__RemoveBatchItemResponse_LiteralSerializer.deserialize(ns1_RemoveBatchItem_RemoveBatchItemResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RemoveBatchItem_RemoveBatchItemResponse_QNAME);
            bodyBlock.setValue(myRemoveBatchItemResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the Validate operation.
     */
    private void _deserialize_Validate(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myValidateResponseObj =
                myns1_ValidateResponse__ValidateResponse_LiteralSerializer.deserialize(ns1_Validate_ValidateResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_Validate_ValidateResponse_QNAME);
            bodyBlock.setValue(myValidateResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the HazmatPhysicalForm operation.
     */
    private void _deserialize_HazmatPhysicalForm(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myHazmatPhysicalFormResponseObj =
                myns1_HazmatPhysicalFormResponse__HazmatPhysicalFormResponse_LiteralSerializer.deserialize(ns1_HazmatPhysicalForm_HazmatPhysicalFormResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_HazmatPhysicalForm_HazmatPhysicalFormResponse_QNAME);
            bodyBlock.setValue(myHazmatPhysicalFormResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CloseOutBySymbols operation.
     */
    private void _deserialize_CloseOutBySymbols(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCloseOutBySymbolsResponseObj =
                myns1_CloseOutBySymbolsResponse__CloseOutBySymbolsResponse_LiteralSerializer.deserialize(ns1_CloseOutBySymbols_CloseOutBySymbolsResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CloseOutBySymbols_CloseOutBySymbolsResponse_QNAME);
            bodyBlock.setValue(myCloseOutBySymbolsResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the HazmatRadioactiveException operation.
     */
    private void _deserialize_HazmatRadioactiveException(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myHazmatRadioactiveExceptionResponseObj =
                myns1_HazmatRadioactiveExceptionResponse__HazmatRadioactiveExceptionResponse_LiteralSerializer.deserialize(ns1_HazmatRadioactiveException_HazmatRadioactiveExceptionResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_HazmatRadioactiveException_HazmatRadioactiveExceptionResponse_QNAME);
            bodyBlock.setValue(myHazmatRadioactiveExceptionResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the CloseGroupAndPrint operation.
     */
    private void _deserialize_CloseGroupAndPrint(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myCloseGroupAndPrintResponseObj =
                myns1_CloseGroupAndPrintResponse__CloseGroupAndPrintResponse_LiteralSerializer.deserialize(ns1_CloseGroupAndPrint_CloseGroupAndPrintResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CloseGroupAndPrint_CloseGroupAndPrintResponse_QNAME);
            bodyBlock.setValue(myCloseGroupAndPrintResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    /*
     * This method deserializes the body of the GetPaymentTypes operation.
     */
    private void _deserialize_GetPaymentTypes(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        try {
            Object myGetPaymentTypesResponseObj =
                myns1_GetPaymentTypesResponse__GetPaymentTypesResponse_LiteralSerializer.deserialize(ns1_GetPaymentTypes_GetPaymentTypesResponse_QNAME,
                    bodyReader, deserializationContext);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_GetPaymentTypes_GetPaymentTypesResponse_QNAME);
            bodyBlock.setValue(myGetPaymentTypesResponseObj);
            state.getResponse().setBody(bodyBlock);
        } catch (DeserializationException e) {
            throw e;
        }
    }
    
    
    
    
    public String _getEncodingStyle() {
        return SOAPEncodingConstants.getSOAPEncodingConstants(soapVersion).getURIEncoding();
    }
    
    public void _setEncodingStyle(String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }
    
    public ClientTransport getClientTransport() {
        return super._getTransport();
    }
    
    
    
    
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    /*
     * This method handles the case of an empty SOAP body.
     */
    protected void _handleEmptyBody(XMLReader reader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
    }
    
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        myns1_Sox_Db_VersionResponse__Sox_Db_VersionResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_Db_VersionResponse.class, ns1_Sox_Db_VersionResponse_TYPE_QNAME);
        myns1_App_Db_VersionResponse__App_Db_VersionResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.App_Db_VersionResponse.class, ns1_App_Db_VersionResponse_TYPE_QNAME);
        myns1_SearchByShipperAndShipdateAndStatusResponse__SearchByShipperAndShipdateAndStatusResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateAndStatusResponse.class, ns1_SearchByShipperAndShipdateAndStatusResponse_TYPE_QNAME);
        myns1_PrintBatch__PrintBatch_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintBatch.class, ns1_PrintBatch_TYPE_QNAME);
        myns1_OpenGroup__OpenGroup_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.OpenGroup.class, ns1_OpenGroup_TYPE_QNAME);
        myns1_GetAvailablePrintersResponse__GetAvailablePrintersResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrintersResponse.class, ns1_GetAvailablePrintersResponse_TYPE_QNAME);
        myns1_ProcessBatchByRequestResponse__ProcessBatchByRequestResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchByRequestResponse.class, ns1_ProcessBatchByRequestResponse_TYPE_QNAME);
        myns1_ModifyPackageListResponse__ModifyPackageListResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyPackageListResponse.class, ns1_ModifyPackageListResponse_TYPE_QNAME);
        myns1_GetDocumentProfilesResponse__GetDocumentProfilesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfilesResponse.class, ns1_GetDocumentProfilesResponse_TYPE_QNAME);
        myns1_COMethods__COMethods_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.COMethods.class, ns1_COMethods_TYPE_QNAME);
        myns1_GetStagedBatches__GetStagedBatches_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatches.class, ns1_GetStagedBatches_TYPE_QNAME);
        myns1_Sox_VersionResponse__Sox_VersionResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_VersionResponse.class, ns1_Sox_VersionResponse_TYPE_QNAME);
        myns1_Validate__Validate_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Validate.class, ns1_Validate_TYPE_QNAME);
        myns1_CommodityCondition__CommodityCondition_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityCondition.class, ns1_CommodityCondition_TYPE_QNAME);
        myns1_SearchByFilters__SearchByFilters_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFilters.class, ns1_SearchByFilters_TYPE_QNAME);
        myns1_GetShipperNameAddress__GetShipperNameAddress_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipperNameAddress.class, ns1_GetShipperNameAddress_TYPE_QNAME);
        myns1_HazmatLabels__HazmatLabels_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatLabels.class, ns1_HazmatLabels_TYPE_QNAME);
        myns1_GetGroupings__GetGroupings_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupings.class, ns1_GetGroupings_TYPE_QNAME);
        myns1_ManagementLayer_VersionResponse__ManagementLayer_VersionResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ManagementLayer_VersionResponse.class, ns1_ManagementLayer_VersionResponse_TYPE_QNAME);
        myns1_AlcoholTypesResponse__AlcoholTypesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholTypesResponse.class, ns1_AlcoholTypesResponse_TYPE_QNAME);
        myns1_TransmitItemsResponse__TransmitItemsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItemsResponse.class, ns1_TransmitItemsResponse_TYPE_QNAME);
        myns1_CreateGroup__CreateGroup_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateGroup.class, ns1_CreateGroup_TYPE_QNAME);
        myns1_InspectNameAddress__InspectNameAddress_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InspectNameAddress.class, ns1_InspectNameAddress_TYPE_QNAME);
        myns1_PrintDocumentResponse__PrintDocumentResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintDocumentResponse.class, ns1_PrintDocumentResponse_TYPE_QNAME);
        myns1_GetLanguages__GetLanguages_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetLanguages.class, ns1_GetLanguages_TYPE_QNAME);
        myns1_GetCloseOutItemsResponse__GetCloseOutItemsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutItemsResponse.class, ns1_GetCloseOutItemsResponse_TYPE_QNAME);
        myns1_VoidPackageByGlobalMsn__VoidPackageByGlobalMsn_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByGlobalMsn.class, ns1_VoidPackageByGlobalMsn_TYPE_QNAME);
        myns1_GetLanguagesResponse__GetLanguagesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetLanguagesResponse.class, ns1_GetLanguagesResponse_TYPE_QNAME);
        myns1_GetGroupsResponse__GetGroupsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupsResponse.class, ns1_GetGroupsResponse_TYPE_QNAME);
        myns1_ExchangeMethods__ExchangeMethods_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ExchangeMethods.class, ns1_ExchangeMethods_TYPE_QNAME);
        myns1_HazMatRegulationsResponse__HazMatRegulationsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulationsResponse.class, ns1_HazMatRegulationsResponse_TYPE_QNAME);
        myns1_TransmitItemType__TransmitItemType_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItemType.class, ns1_TransmitItemType_TYPE_QNAME);
        myns1_DeleteHistoryItems__DeleteHistoryItems_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteHistoryItems.class, ns1_DeleteHistoryItems_TYPE_QNAME);
        myns1_GetTransmitItems__GetTransmitItems_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItems.class, ns1_GetTransmitItems_TYPE_QNAME);
        myns1_Sox_Db_Version__Sox_Db_Version_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_Db_Version.class, ns1_Sox_Db_Version_TYPE_QNAME);
        myns1_ModifyGroupResponse__ModifyGroupResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyGroupResponse.class, ns1_ModifyGroupResponse_TYPE_QNAME);
        myns1_UpdateDocumentProfile__UpdateDocumentProfile_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdateDocumentProfile.class, ns1_UpdateDocumentProfile_TYPE_QNAME);
        myns1_VoidPackagesByGlobalMsnListResponse__VoidPackagesByGlobalMsnListResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackagesByGlobalMsnListResponse.class, ns1_VoidPackagesByGlobalMsnListResponse_TYPE_QNAME);
        myns1_SearchByFilterResponse__SearchByFilterResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFilterResponse.class, ns1_SearchByFilterResponse_TYPE_QNAME);
        myns1_DryIceRegulationSetsResponse__DryIceRegulationSetsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIceRegulationSetsResponse.class, ns1_DryIceRegulationSetsResponse_TYPE_QNAME);
        myns1_BrokerageMethodResponse__BrokerageMethodResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BrokerageMethodResponse.class, ns1_BrokerageMethodResponse_TYPE_QNAME);
        myns1_RemoveBatchResponse__RemoveBatchResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatchResponse.class, ns1_RemoveBatchResponse_TYPE_QNAME);
        myns1_Business_Object_Version__Business_Object_Version_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Business_Object_Version.class, ns1_Business_Object_Version_TYPE_QNAME);
        myns1_NAFTAPreferenceCriterion__NAFTAPreferenceCriterion_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAPreferenceCriterion.class, ns1_NAFTAPreferenceCriterion_TYPE_QNAME);
        myns1_SearchByFilter__SearchByFilter_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFilter.class, ns1_SearchByFilter_TYPE_QNAME);
        myns1_UpdateSoxDbPackageResponse__UpdateSoxDbPackageResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdateSoxDbPackageResponse.class, ns1_UpdateSoxDbPackageResponse_TYPE_QNAME);
        myns1_IsValidShipDate__IsValidShipDate_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.IsValidShipDate.class, ns1_IsValidShipDate_TYPE_QNAME);
        myns1_InstantiateWCF__InstantiateWCF_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InstantiateWCF.class, ns1_InstantiateWCF_TYPE_QNAME);
        myns1_ShipBatchItemResponse__ShipBatchItemResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipBatchItemResponse.class, ns1_ShipBatchItemResponse_TYPE_QNAME);
        myns1_GetConfiguredPrinters__GetConfiguredPrinters_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetConfiguredPrinters.class, ns1_GetConfiguredPrinters_TYPE_QNAME);
        myns1_BrokerageMethod__BrokerageMethod_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BrokerageMethod.class, ns1_BrokerageMethod_TYPE_QNAME);
        myns1_LoadBatch__LoadBatch_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatch.class, ns1_LoadBatch_TYPE_QNAME);
        myns1_SearchByConsigneeReference__SearchByConsigneeReference_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReference.class, ns1_SearchByConsigneeReference_TYPE_QNAME);
        myns1_ChargesOnDocumentationResponse__ChargesOnDocumentationResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ChargesOnDocumentationResponse.class, ns1_ChargesOnDocumentationResponse_TYPE_QNAME);
        myns1_InsertSoxDbPackageResponse__InsertSoxDbPackageResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InsertSoxDbPackageResponse.class, ns1_InsertSoxDbPackageResponse_TYPE_QNAME);
        myns1_NAFTARVCMethods__NAFTARVCMethods_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTARVCMethods.class, ns1_NAFTARVCMethods_TYPE_QNAME);
        myns1_GetCarriersbyShippersResponse__GetCarriersbyShippersResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriersbyShippersResponse.class, ns1_GetCarriersbyShippersResponse_TYPE_QNAME);
        myns1_AlcoholPackagingResponse__AlcoholPackagingResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholPackagingResponse.class, ns1_AlcoholPackagingResponse_TYPE_QNAME);
        myns1_CopyDocumentProfile__CopyDocumentProfile_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyDocumentProfile.class, ns1_CopyDocumentProfile_TYPE_QNAME);
        myns1_GetAvailablePrinterStocksResponse__GetAvailablePrinterStocksResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrinterStocksResponse.class, ns1_GetAvailablePrinterStocksResponse_TYPE_QNAME);
        myns1_GetCloseOutMode__GetCloseOutMode_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutMode.class, ns1_GetCloseOutMode_TYPE_QNAME);
        myns1_ProcessBatchByRequest__ProcessBatchByRequest_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchByRequest.class, ns1_ProcessBatchByRequest_TYPE_QNAME);
        myns1_GetCommitmentsResponse__GetCommitmentsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommitmentsResponse.class, ns1_GetCommitmentsResponse_TYPE_QNAME);
        myns1_StageBatchResponse__StageBatchResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.StageBatchResponse.class, ns1_StageBatchResponse_TYPE_QNAME);
        myns1_CopyPrinter__CopyPrinter_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyPrinter.class, ns1_CopyPrinter_TYPE_QNAME);
        myns1_HazMatCACategories__HazMatCACategories_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatCACategories.class, ns1_HazMatCACategories_TYPE_QNAME);
        myns1_UpdateDocumentProfileResponse__UpdateDocumentProfileResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdateDocumentProfileResponse.class, ns1_UpdateDocumentProfileResponse_TYPE_QNAME);
        myns1_CloseOutBySymbols__CloseOutBySymbols_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbols.class, ns1_CloseOutBySymbols_TYPE_QNAME);
        myns1_SearchByShipFileIDResponse__SearchByShipFileIDResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipFileIDResponse.class, ns1_SearchByShipFileIDResponse_TYPE_QNAME);
        myns1_ReturnDeliveryMethods__ReturnDeliveryMethods_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnDeliveryMethods.class, ns1_ReturnDeliveryMethods_TYPE_QNAME);
        myns1_GetBatchShipmentErrors__GetBatchShipmentErrors_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchShipmentErrors.class, ns1_GetBatchShipmentErrors_TYPE_QNAME);
        myns1_ProcessBatchResponse__ProcessBatchResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchResponse.class, ns1_ProcessBatchResponse_TYPE_QNAME);
        myns1_GetHistoryItemListResponse__GetHistoryItemListResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHistoryItemListResponse.class, ns1_GetHistoryItemListResponse_TYPE_QNAME);
        myns1_GetSearchFieldswithType__GetSearchFieldswithType_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldswithType.class, ns1_GetSearchFieldswithType_TYPE_QNAME);
        myns1_Rate__Rate_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Rate.class, ns1_Rate_TYPE_QNAME);
        myns1_GetDeviceDriversResponse__GetDeviceDriversResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeviceDriversResponse.class, ns1_GetDeviceDriversResponse_TYPE_QNAME);
        myns1_CommodityConditionResponse__CommodityConditionResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityConditionResponse.class, ns1_CommodityConditionResponse_TYPE_QNAME);
        myns1_SearchByGlobalMsnResponse__SearchByGlobalMsnResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalMsnResponse.class, ns1_SearchByGlobalMsnResponse_TYPE_QNAME);
        myns1_UserMethodResponse__UserMethodResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UserMethodResponse.class, ns1_UserMethodResponse_TYPE_QNAME);
        myns1_ReturnAddressMethods__ReturnAddressMethods_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnAddressMethods.class, ns1_ReturnAddressMethods_TYPE_QNAME);
        myns1_HazMatRegulationSets__HazMatRegulationSets_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulationSets.class, ns1_HazMatRegulationSets_TYPE_QNAME);
        myns1_GetConfiguredPrintersResponse__GetConfiguredPrintersResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetConfiguredPrintersResponse.class, ns1_GetConfiguredPrintersResponse_TYPE_QNAME);
        myns1_HazmatRadioactiveExceptionResponse__HazmatRadioactiveExceptionResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatRadioactiveExceptionResponse.class, ns1_HazmatRadioactiveExceptionResponse_TYPE_QNAME);
        myns1_SearchByConsigneeReferenceWithCountResponse__SearchByConsigneeReferenceWithCountResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReferenceWithCountResponse.class, ns1_SearchByConsigneeReferenceWithCountResponse_TYPE_QNAME);
        myns1_DeliveryMethods__DeliveryMethods_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeliveryMethods.class, ns1_DeliveryMethods_TYPE_QNAME);
        myns1_DeleteHistoryItem__DeleteHistoryItem_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteHistoryItem.class, ns1_DeleteHistoryItem_TYPE_QNAME);
        myns1_AddShipper__AddShipper_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddShipper.class, ns1_AddShipper_TYPE_QNAME);
        myns1_PrintPositionDocumentXml__PrintPositionDocumentXml_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintPositionDocumentXml.class, ns1_PrintPositionDocumentXml_TYPE_QNAME);
        myns1_GetDeleteTransmitItemsListResponse__GetDeleteTransmitItemsListResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeleteTransmitItemsListResponse.class, ns1_GetDeleteTransmitItemsListResponse_TYPE_QNAME);
        myns1_GetUnitOfMeasures__GetUnitOfMeasures_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetUnitOfMeasures.class, ns1_GetUnitOfMeasures_TYPE_QNAME);
        myns1_UpdatePrinterResponse__UpdatePrinterResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdatePrinterResponse.class, ns1_UpdatePrinterResponse_TYPE_QNAME);
        myns1_ReShipResponse__ReShipResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReShipResponse.class, ns1_ReShipResponse_TYPE_QNAME);
        myns1_CopyDocumentProfileResponse__CopyDocumentProfileResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyDocumentProfileResponse.class, ns1_CopyDocumentProfileResponse_TYPE_QNAME);
        myns1_searchPackageHistory__SearchPackageHistory_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchPackageHistory.class, ns1_searchPackageHistory_TYPE_QNAME);
        myns1_GetStagedBatchResponse__GetStagedBatchResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatchResponse.class, ns1_GetStagedBatchResponse_TYPE_QNAME);
        myns1_GetAvailablePrinterStocks__GetAvailablePrinterStocks_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrinterStocks.class, ns1_GetAvailablePrinterStocks_TYPE_QNAME);
        myns1_UpdateSoxDbPackage__UpdateSoxDbPackage_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdateSoxDbPackage.class, ns1_UpdateSoxDbPackage_TYPE_QNAME);
        myns1_DeleteShipperResponse__DeleteShipperResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteShipperResponse.class, ns1_DeleteShipperResponse_TYPE_QNAME);
        myns1_StageBatch__StageBatch_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.StageBatch.class, ns1_StageBatch_TYPE_QNAME);
        myns1_ShipResponse__ShipResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipResponse.class, ns1_ShipResponse_TYPE_QNAME);
        myns1_GetCurrencyByCountryResponse__GetCurrencyByCountryResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountryResponse.class, ns1_GetCurrencyByCountryResponse_TYPE_QNAME);
        myns1_RateServicesResponse__RateServicesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateServicesResponse.class, ns1_RateServicesResponse_TYPE_QNAME);
        myns1_HazMatCACategoriesResponse__HazMatCACategoriesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatCACategoriesResponse.class, ns1_HazMatCACategoriesResponse_TYPE_QNAME);
        myns1_GetPackageTypesResponse__GetPackageTypesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPackageTypesResponse.class, ns1_GetPackageTypesResponse_TYPE_QNAME);
        myns1_GetTransmitItemsResponse__GetTransmitItemsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsResponse.class, ns1_GetTransmitItemsResponse_TYPE_QNAME);
        myns1_RateServices__RateServices_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateServices.class, ns1_RateServices_TYPE_QNAME);
        myns1_GetStagedBatchesResponse__GetStagedBatchesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatchesResponse.class, ns1_GetStagedBatchesResponse_TYPE_QNAME);
        myns1_RemoveBatchItemResponse__RemoveBatchItemResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatchItemResponse.class, ns1_RemoveBatchItemResponse_TYPE_QNAME);
        myns1_GetShipperNameAddressResponse__GetShipperNameAddressResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipperNameAddressResponse.class, ns1_GetShipperNameAddressResponse_TYPE_QNAME);
        myns1_ProcessBatch__ProcessBatch_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatch.class, ns1_ProcessBatch_TYPE_QNAME);
        myns1_SearchByGlobalMsn__SearchByGlobalMsn_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalMsn.class, ns1_SearchByGlobalMsn_TYPE_QNAME);
        myns1_CloseGroupResponseType__CloseGroupResponseType_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupResponseType.class, ns1_CloseGroupResponseType_TYPE_QNAME);
        myns1_GetNextValidShipDateResponse__GetNextValidShipDateResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNextValidShipDateResponse.class, ns1_GetNextValidShipDateResponse_TYPE_QNAME);
        myns1_DeleteDocumentProfileResponse__DeleteDocumentProfileResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteDocumentProfileResponse.class, ns1_DeleteDocumentProfileResponse_TYPE_QNAME);
        myns1_LoadResponse__LoadResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadResponse.class, ns1_LoadResponse_TYPE_QNAME);
        myns1_DeletePrinter__DeletePrinter_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeletePrinter.class, ns1_DeletePrinter_TYPE_QNAME);
        myns1_GetPackageTypes__GetPackageTypes_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPackageTypes.class, ns1_GetPackageTypes_TYPE_QNAME);
        myns1_CloseGroupAndPrintResponse__CloseGroupAndPrintResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupAndPrintResponse.class, ns1_CloseGroupAndPrintResponse_TYPE_QNAME);
        myns1_SearchByShipperAndShipdateWithCount__SearchByShipperAndShipdateWithCount_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateWithCount.class, ns1_SearchByShipperAndShipdateWithCount_TYPE_QNAME);
        myns1_GetCarriersResponse__GetCarriersResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriersResponse.class, ns1_GetCarriersResponse_TYPE_QNAME);
        myns1_CommercialInvoiceMethods__CommercialInvoiceMethods_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommercialInvoiceMethods.class, ns1_CommercialInvoiceMethods_TYPE_QNAME);
        myns1_GetGroupDocuments__GetGroupDocuments_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupDocuments.class, ns1_GetGroupDocuments_TYPE_QNAME);
        myns1_GetSearchFieldListResponse__GetSearchFieldListResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldListResponse.class, ns1_GetSearchFieldListResponse_TYPE_QNAME);
        myns1_VoidPackagesByGlobalMsnList__VoidPackagesByGlobalMsnList_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackagesByGlobalMsnList.class, ns1_VoidPackagesByGlobalMsnList_TYPE_QNAME);
        myns1_GetGroupingsResponse__GetGroupingsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupingsResponse.class, ns1_GetGroupingsResponse_TYPE_QNAME);
        myns1_SearchByConsigneeReferenceResponse__SearchByConsigneeReferenceResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReferenceResponse.class, ns1_SearchByConsigneeReferenceResponse_TYPE_QNAME);
        myns1_GetWeightUnitByCountryLocaleResponse__GetWeightUnitByCountryLocaleResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetWeightUnitByCountryLocaleResponse.class, ns1_GetWeightUnitByCountryLocaleResponse_TYPE_QNAME);
        myns1_AdditionalHandlingTypesResponse__AdditionalHandlingTypesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AdditionalHandlingTypesResponse.class, ns1_AdditionalHandlingTypesResponse_TYPE_QNAME);
        myns1_GetPaymentTypes__GetPaymentTypes_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPaymentTypes.class, ns1_GetPaymentTypes_TYPE_QNAME);
        myns1_GetShipFileDocuments__GetShipFileDocuments_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipFileDocuments.class, ns1_GetShipFileDocuments_TYPE_QNAME);
        myns1_CommercialInvoiceMethodsResponse__CommercialInvoiceMethodsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommercialInvoiceMethodsResponse.class, ns1_CommercialInvoiceMethodsResponse_TYPE_QNAME);
        myns1_InstantiateWCFResponse__InstantiateWCFResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InstantiateWCFResponse.class, ns1_InstantiateWCFResponse_TYPE_QNAME);
        myns1_DeleteTransmitItem__DeleteTransmitItem_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteTransmitItem.class, ns1_DeleteTransmitItem_TYPE_QNAME);
        myns1_AdditionalHandlingTypes__AdditionalHandlingTypes_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AdditionalHandlingTypes.class, ns1_AdditionalHandlingTypes_TYPE_QNAME);
        myns1_CloseOutModes__CloseOutModes_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutModes.class, ns1_CloseOutModes_TYPE_QNAME);
        myns1_GetTransmitItemsByStatusResponse__GetTransmitItemsByStatusResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsByStatusResponse.class, ns1_GetTransmitItemsByStatusResponse_TYPE_QNAME);
        myns1_GetTransmitItemsAvailableForDeletion__GetTransmitItemsAvailableForDeletion_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsAvailableForDeletion.class, ns1_GetTransmitItemsAvailableForDeletion_TYPE_QNAME);
        myns1_GetPrinter__GetPrinter_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPrinter.class, ns1_GetPrinter_TYPE_QNAME);
        myns1_CloseGroupAndPrint__CloseGroupAndPrint_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupAndPrint.class, ns1_CloseGroupAndPrint_TYPE_QNAME);
        myns1_GetCarriers__GetCarriers_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriers.class, ns1_GetCarriers_TYPE_QNAME);
        myns1_LoadBatchResponse__LoadBatchResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchResponse.class, ns1_LoadBatchResponse_TYPE_QNAME);
        myns1_GetNameAddressValidationCandidates__GetNameAddressValidationCandidates_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidates.class, ns1_GetNameAddressValidationCandidates_TYPE_QNAME);
        myns1_ChangeShipperSymbolResponse__ChangeShipperSymbolResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ChangeShipperSymbolResponse.class, ns1_ChangeShipperSymbolResponse_TYPE_QNAME);
        myns1_GetCloseOutModeResponse__GetCloseOutModeResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutModeResponse.class, ns1_GetCloseOutModeResponse_TYPE_QNAME);
        myns1_CreateGroupResponse__CreateGroupResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateGroupResponse.class, ns1_CreateGroupResponse_TYPE_QNAME);
        myns1_GetIncotermsResponse__GetIncotermsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetIncotermsResponse.class, ns1_GetIncotermsResponse_TYPE_QNAME);
        myns1_DeleteTransmitItemResponse__DeleteTransmitItemResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteTransmitItemResponse.class, ns1_DeleteTransmitItemResponse_TYPE_QNAME);
        myns1_GetHolidays__GetHolidays_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHolidays.class, ns1_GetHolidays_TYPE_QNAME);
        myns1_GetWeightUnitByCountryLocale__GetWeightUnitByCountryLocale_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetWeightUnitByCountryLocale.class, ns1_GetWeightUnitByCountryLocale_TYPE_QNAME);
        myns1_OpenGroupResponse__OpenGroupResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.OpenGroupResponse.class, ns1_OpenGroupResponse_TYPE_QNAME);
        myns1_ReturnDeliveryMethodsResponse__ReturnDeliveryMethodsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnDeliveryMethodsResponse.class, ns1_ReturnDeliveryMethodsResponse_TYPE_QNAME);
        myns1_ReProcess__ReProcess_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReProcess.class, ns1_ReProcess_TYPE_QNAME);
        myns1_searchPackageHistoryResponse__SearchPackageHistoryResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchPackageHistoryResponse.class, ns1_searchPackageHistoryResponse_TYPE_QNAME);
        myns1_RateResponse__RateResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateResponse.class, ns1_RateResponse_TYPE_QNAME);
        myns1_DispositionMethods__DispositionMethods_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DispositionMethods.class, ns1_DispositionMethods_TYPE_QNAME);
        myns1_InsertSoxDbPackage__InsertSoxDbPackage_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InsertSoxDbPackage.class, ns1_InsertSoxDbPackage_TYPE_QNAME);
        myns1_NAFTAPreferenceCriterionResponse__NAFTAPreferenceCriterionResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAPreferenceCriterionResponse.class, ns1_NAFTAPreferenceCriterionResponse_TYPE_QNAME);
        myns1_ValidateResponse__ValidateResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ValidateResponse.class, ns1_ValidateResponse_TYPE_QNAME);
        myns1_VoidPackageByGlobalMsnResponse__VoidPackageByGlobalMsnResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByGlobalMsnResponse.class, ns1_VoidPackageByGlobalMsnResponse_TYPE_QNAME);
        myns1_Ship__Ship_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Ship.class, ns1_Ship_TYPE_QNAME);
        myns1_GetTransmitItemsAvailableForDeletionResponse__GetTransmitItemsAvailableForDeletionResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsAvailableForDeletionResponse.class, ns1_GetTransmitItemsAvailableForDeletionResponse_TYPE_QNAME);
        myns1_GetCommodityClasses__GetCommodityClasses_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommodityClasses.class, ns1_GetCommodityClasses_TYPE_QNAME);
        myns1_DryIceRegulationSets__DryIceRegulationSets_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIceRegulationSets.class, ns1_DryIceRegulationSets_TYPE_QNAME);
        myns1_DeletePrinterResponse__DeletePrinterResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeletePrinterResponse.class, ns1_DeletePrinterResponse_TYPE_QNAME);
        myns1_GetCurrencyByCountry__GetCurrencyByCountry_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountry.class, ns1_GetCurrencyByCountry_TYPE_QNAME);
        myns1_ManagementLayer_Version__ManagementLayer_Version_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ManagementLayer_Version.class, ns1_ManagementLayer_Version_TYPE_QNAME);
        myns1_NAFTAProducer__NAFTAProducer_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAProducer.class, ns1_NAFTAProducer_TYPE_QNAME);
        myns1_GetServicesbyCarriersResponse__GetServicesbyCarriersResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServicesbyCarriersResponse.class, ns1_GetServicesbyCarriersResponse_TYPE_QNAME);
        myns1_AreTransmitItemsAvailableForDeletion__AreTransmitItemsAvailableForDeletion_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AreTransmitItemsAvailableForDeletion.class, ns1_AreTransmitItemsAvailableForDeletion_TYPE_QNAME);
        myns1_GetCurrencies__GetCurrencies_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencies.class, ns1_GetCurrencies_TYPE_QNAME);
        myns1_DeleteHistoryItemResponse__DeleteHistoryItemResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteHistoryItemResponse.class, ns1_DeleteHistoryItemResponse_TYPE_QNAME);
        myns1_GetServicesResponse__GetServicesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServicesResponse.class, ns1_GetServicesResponse_TYPE_QNAME);
        myns1_GetShippersResponse__GetShippersResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShippersResponse.class, ns1_GetShippersResponse_TYPE_QNAME);
        myns1_ChargesOnDocumentation__ChargesOnDocumentation_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ChargesOnDocumentation.class, ns1_ChargesOnDocumentation_TYPE_QNAME);
        myns1_GetNextValidShipDate__GetNextValidShipDate_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNextValidShipDate.class, ns1_GetNextValidShipDate_TYPE_QNAME);
        myns1_HazmatPackingGroups__HazmatPackingGroups_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPackingGroups.class, ns1_HazmatPackingGroups_TYPE_QNAME);
        myns1_PrintRequestResponse__PrintRequestResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequestResponse.class, ns1_PrintRequestResponse_TYPE_QNAME);
        myns1_DeleteHistoryItemsResponse__DeleteHistoryItemsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteHistoryItemsResponse.class, ns1_DeleteHistoryItemsResponse_TYPE_QNAME);
        myns1_Sox_Version__Sox_Version_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Sox_Version.class, ns1_Sox_Version_TYPE_QNAME);
        myns1_GetBatchShipmentErrorsResponse__GetBatchShipmentErrorsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchShipmentErrorsResponse.class, ns1_GetBatchShipmentErrorsResponse_TYPE_QNAME);
        myns1_DispositionMethodsResponse__DispositionMethodsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DispositionMethodsResponse.class, ns1_DispositionMethodsResponse_TYPE_QNAME);
        myns1_ModifyGroup__ModifyGroup_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyGroup.class, ns1_ModifyGroup_TYPE_QNAME);
        myns1_AddDocumentProfileResponse__AddDocumentProfileResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddDocumentProfileResponse.class, ns1_AddDocumentProfileResponse_TYPE_QNAME);
        myns1_HazmatPhysicalFormResponse__HazmatPhysicalFormResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPhysicalFormResponse.class, ns1_HazmatPhysicalFormResponse_TYPE_QNAME);
        myns1_GetHolidaysResponse__GetHolidaysResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHolidaysResponse.class, ns1_GetHolidaysResponse_TYPE_QNAME);
        myns1_GetHistoryItemList__GetHistoryItemList_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetHistoryItemList.class, ns1_GetHistoryItemList_TYPE_QNAME);
        myns1_LoadBatchItemResponse__LoadBatchItemResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchItemResponse.class, ns1_LoadBatchItemResponse_TYPE_QNAME);
        myns1_ChangeShipperSymbol__ChangeShipperSymbol_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ChangeShipperSymbol.class, ns1_ChangeShipperSymbol_TYPE_QNAME);
        myns1_NAFTARVCMethodsResponse__NAFTARVCMethodsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTARVCMethodsResponse.class, ns1_NAFTARVCMethodsResponse_TYPE_QNAME);
        myns1_ReturnAddressMethodsResponse__ReturnAddressMethodsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReturnAddressMethodsResponse.class, ns1_ReturnAddressMethodsResponse_TYPE_QNAME);
        myns1_GetCountries__GetCountries_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCountries.class, ns1_GetCountries_TYPE_QNAME);
        myns1_GetBatchCountResponse__GetBatchCountResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchCountResponse.class, ns1_GetBatchCountResponse_TYPE_QNAME);
        myns1_SetCloseOutMode__SetCloseOutMode_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SetCloseOutMode.class, ns1_SetCloseOutMode_TYPE_QNAME);
        myns1_GetDocumentFormatsResponse__GetDocumentFormatsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentFormatsResponse.class, ns1_GetDocumentFormatsResponse_TYPE_QNAME);
        myns1_ShipBatchItem__ShipBatchItem_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipBatchItem.class, ns1_ShipBatchItem_TYPE_QNAME);
        myns1_IsValidShipDateResponse__IsValidShipDateResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.IsValidShipDateResponse.class, ns1_IsValidShipDateResponse_TYPE_QNAME);
        myns1_AddShipmentToBatch__AddShipmentToBatch_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddShipmentToBatch.class, ns1_AddShipmentToBatch_TYPE_QNAME);
        myns1_GetServices__GetServices_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServices.class, ns1_GetServices_TYPE_QNAME);
        myns1_CloseOutBySymbolsResponse__CloseOutBySymbolsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsResponse.class, ns1_CloseOutBySymbolsResponse_TYPE_QNAME);
        myns1_SEDMethods__SEDMethods_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SEDMethods.class, ns1_SEDMethods_TYPE_QNAME);
        myns1_DeleteShipper__DeleteShipper_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteShipper.class, ns1_DeleteShipper_TYPE_QNAME);
        myns1_App_Db_Version__App_Db_Version_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.App_Db_Version.class, ns1_App_Db_Version_TYPE_QNAME);
        myns1_TransmitItems__TransmitItems_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItems.class, ns1_TransmitItems_TYPE_QNAME);
        myns1_Load__Load_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Load.class, ns1_Load_TYPE_QNAME);
        myns1_GetGroupingTypes__GetGroupingTypes_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupingTypes.class, ns1_GetGroupingTypes_TYPE_QNAME);
        myns1_ShipOrderResponse__ShipOrderResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipOrderResponse.class, ns1_ShipOrderResponse_TYPE_QNAME);
        myns1_CloseOutBySymbolsAndPrintResponse__CloseOutBySymbolsAndPrintResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsAndPrintResponse.class, ns1_CloseOutBySymbolsAndPrintResponse_TYPE_QNAME);
        myns1_AlcoholTypes__AlcoholTypes_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholTypes.class, ns1_AlcoholTypes_TYPE_QNAME);
        myns1_HazMatRegulationSetsResponse__HazMatRegulationSetsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulationSetsResponse.class, ns1_HazMatRegulationSetsResponse_TYPE_QNAME);
        myns1_CloseOutModesResponse__CloseOutModesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutModesResponse.class, ns1_CloseOutModesResponse_TYPE_QNAME);
        myns1_LoadBatchItem__LoadBatchItem_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchItem.class, ns1_LoadBatchItem_TYPE_QNAME);
        myns1_GetDeviceDrivers__GetDeviceDrivers_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeviceDrivers.class, ns1_GetDeviceDrivers_TYPE_QNAME);
        myns1_SearchByShipperAndShipdate__SearchByShipperAndShipdate_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdate.class, ns1_SearchByShipperAndShipdate_TYPE_QNAME);
        myns1_SearchByFiltersResponse__SearchByFiltersResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByFiltersResponse.class, ns1_SearchByFiltersResponse_TYPE_QNAME);
        myns1_DryIcePurposesResponse__DryIcePurposesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIcePurposesResponse.class, ns1_DryIcePurposesResponse_TYPE_QNAME);
        myns1_GetPaymentTypesResponse__GetPaymentTypesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPaymentTypesResponse.class, ns1_GetPaymentTypesResponse_TYPE_QNAME);
        myns1_GetCurrenciesResponse__GetCurrenciesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrenciesResponse.class, ns1_GetCurrenciesResponse_TYPE_QNAME);
        myns1_DeleteTransmitItems__DeleteTransmitItems_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteTransmitItems.class, ns1_DeleteTransmitItems_TYPE_QNAME);
        myns1_PrintPositionDocumentXmlResponse__PrintPositionDocumentXmlResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintPositionDocumentXmlResponse.class, ns1_PrintPositionDocumentXmlResponse_TYPE_QNAME);
        myns1_CSAdapter_VersionResponse__CSAdapter_VersionResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CSAdapter_VersionResponse.class, ns1_CSAdapter_VersionResponse_TYPE_QNAME);
        myns1_GetGroup__GetGroup_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroup.class, ns1_GetGroup_TYPE_QNAME);
        myns1_GetDocumentProfile__GetDocumentProfile_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfile.class, ns1_GetDocumentProfile_TYPE_QNAME);
        myns1_InspectNameAddressResponse__InspectNameAddressResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.InspectNameAddressResponse.class, ns1_InspectNameAddressResponse_TYPE_QNAME);
        myns1_GetDocumentProfiles__GetDocumentProfiles_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfiles.class, ns1_GetDocumentProfiles_TYPE_QNAME);
        myns1_CloseGroup__CloseGroup_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroup.class, ns1_CloseGroup_TYPE_QNAME);
        myns1_GetCarriersbyShippers__GetCarriersbyShippers_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCarriersbyShippers.class, ns1_GetCarriersbyShippers_TYPE_QNAME);
        myns1_GetShippers__GetShippers_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShippers.class, ns1_GetShippers_TYPE_QNAME);
        myns1_SearchByShipperReferenceWithCountResponse__SearchByShipperReferenceWithCountResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReferenceWithCountResponse.class, ns1_SearchByShipperReferenceWithCountResponse_TYPE_QNAME);
        myns1_HazmatPackingGroupsResponse__HazmatPackingGroupsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPackingGroupsResponse.class, ns1_HazmatPackingGroupsResponse_TYPE_QNAME);
        myns1_GetDocumentProfileResponse__GetDocumentProfileResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentProfileResponse.class, ns1_GetDocumentProfileResponse_TYPE_QNAME);
        myns1_DryIcePurposes__DryIcePurposes_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DryIcePurposes.class, ns1_DryIcePurposes_TYPE_QNAME);
        myns1_GetSearchFieldswithTypeResponse__GetSearchFieldswithTypeResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldswithTypeResponse.class, ns1_GetSearchFieldswithTypeResponse_TYPE_QNAME);
        myns1_GetNameAddressValidationCandidatesResponse__GetNameAddressValidationCandidatesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesResponse.class, ns1_GetNameAddressValidationCandidatesResponse_TYPE_QNAME);
        myns1_TransmitItemResponse__TransmitItemResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.TransmitItemResponse.class, ns1_TransmitItemResponse_TYPE_QNAME);
        myns1_CreateBatchResponse__CreateBatchResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateBatchResponse.class, ns1_CreateBatchResponse_TYPE_QNAME);
        myns1_GetShipFileDocumentsResponse__GetShipFileDocumentsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetShipFileDocumentsResponse.class, ns1_GetShipFileDocumentsResponse_TYPE_QNAME);
        myns1_SearchByTrackingNumberResponse__SearchByTrackingNumberResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumberResponse.class, ns1_SearchByTrackingNumberResponse_TYPE_QNAME);
        myns1_GetIncoterms__GetIncoterms_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetIncoterms.class, ns1_GetIncoterms_TYPE_QNAME);
        myns1_VoidPackageByTrackingNumberResponse__VoidPackageByTrackingNumberResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByTrackingNumberResponse.class, ns1_VoidPackageByTrackingNumberResponse_TYPE_QNAME);
        myns1_UserMethod__UserMethod_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UserMethod.class, ns1_UserMethod_TYPE_QNAME);
        myns1_SearchByGlobalBundleId__SearchByGlobalBundleId_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalBundleId.class, ns1_SearchByGlobalBundleId_TYPE_QNAME);
        myns1_PrintRequestType__PrintRequestType_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequestType.class, ns1_PrintRequestType_TYPE_QNAME);
        myns1_GetCommodityClassesResponse__GetCommodityClassesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommodityClassesResponse.class, ns1_GetCommodityClassesResponse_TYPE_QNAME);
        myns1_DeleteDocumentProfile__DeleteDocumentProfile_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteDocumentProfile.class, ns1_DeleteDocumentProfile_TYPE_QNAME);
        myns1_CSAdapter_Version__CSAdapter_Version_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CSAdapter_Version.class, ns1_CSAdapter_Version_TYPE_QNAME);
        myns1_SearchByShipFileID__SearchByShipFileID_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipFileID.class, ns1_SearchByShipFileID_TYPE_QNAME);
        myns1_AddPrinterResponse__AddPrinterResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddPrinterResponse.class, ns1_AddPrinterResponse_TYPE_QNAME);
        myns1_VoidPackageByTrackingNumber__VoidPackageByTrackingNumber_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByTrackingNumber.class, ns1_VoidPackageByTrackingNumber_TYPE_QNAME);
        myns1_GetCloseOutItems__GetCloseOutItems_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCloseOutItems.class, ns1_GetCloseOutItems_TYPE_QNAME);
        myns1_SetCloseOutModeResponse__SetCloseOutModeResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SetCloseOutModeResponse.class, ns1_SetCloseOutModeResponse_TYPE_QNAME);
        myns1_GetBatchCount__GetBatchCount_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetBatchCount.class, ns1_GetBatchCount_TYPE_QNAME);
        myns1_SearchByShipperReferenceWithCount__SearchByShipperReferenceWithCount_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReferenceWithCount.class, ns1_SearchByShipperReferenceWithCount_TYPE_QNAME);
        myns1_CreateBatch__CreateBatch_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CreateBatch.class, ns1_CreateBatch_TYPE_QNAME);
        myns1_GetCountriesResponse__GetCountriesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCountriesResponse.class, ns1_GetCountriesResponse_TYPE_QNAME);
        myns1_SearchByTrackingNumber__SearchByTrackingNumber_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumber.class, ns1_SearchByTrackingNumber_TYPE_QNAME);
        myns1_AddPrinter__AddPrinter_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddPrinter.class, ns1_AddPrinter_TYPE_QNAME);
        myns1_SearchByShipperAndShipdateAndStatus__SearchByShipperAndShipdateAndStatus_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateAndStatus.class, ns1_SearchByShipperAndShipdateAndStatus_TYPE_QNAME);
        myns1_COMethodsResponse__COMethodsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.COMethodsResponse.class, ns1_COMethodsResponse_TYPE_QNAME);
        myns1_HazmatPhysicalForm__HazmatPhysicalForm_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatPhysicalForm.class, ns1_HazmatPhysicalForm_TYPE_QNAME);
        myns1_DeliveryMethodsResponse__DeliveryMethodsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeliveryMethodsResponse.class, ns1_DeliveryMethodsResponse_TYPE_QNAME);
        myns1_GetGroups__GetGroups_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroups.class, ns1_GetGroups_TYPE_QNAME);
        myns1_Business_Object_VersionResponse__Business_Object_VersionResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Business_Object_VersionResponse.class, ns1_Business_Object_VersionResponse_TYPE_QNAME);
        myns1_RemoveBatch__RemoveBatch_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatch.class, ns1_RemoveBatch_TYPE_QNAME);
        myns1_CODReturnMethodsResponse__CODReturnMethodsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODReturnMethodsResponse.class, ns1_CODReturnMethodsResponse_TYPE_QNAME);
        myns1_GetGroupingTypesResponse__GetGroupingTypesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupingTypesResponse.class, ns1_GetGroupingTypesResponse_TYPE_QNAME);
        myns1_GetAvailablePrinters__GetAvailablePrinters_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetAvailablePrinters.class, ns1_GetAvailablePrinters_TYPE_QNAME);
        myns1_AddShipmentToBatchResponse__AddShipmentToBatchResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddShipmentToBatchResponse.class, ns1_AddShipmentToBatchResponse_TYPE_QNAME);
        myns1_GetScales__GetScales_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetScales.class, ns1_GetScales_TYPE_QNAME);
        myns1_GetNameAddressValidationCandidatesWithParams__GetNameAddressValidationCandidatesWithParams_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesWithParams.class, ns1_GetNameAddressValidationCandidatesWithParams_TYPE_QNAME);
        myns1_GetNameAddressValidationCandidatesWithParamsResponse__GetNameAddressValidationCandidatesWithParamsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesWithParamsResponse.class, ns1_GetNameAddressValidationCandidatesWithParamsResponse_TYPE_QNAME);
        myns1_ReProcessResponseType__ReProcessResponseType_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReProcessResponseType.class, ns1_ReProcessResponseType_TYPE_QNAME);
        myns1_SearchByTrackingNumberWithCount__SearchByTrackingNumberWithCount_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumberWithCount.class, ns1_SearchByTrackingNumberWithCount_TYPE_QNAME);
        myns1_CloseOutBySymbolsAndPrint__CloseOutBySymbolsAndPrint_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsAndPrint.class, ns1_CloseOutBySymbolsAndPrint_TYPE_QNAME);
        myns1_HazMatRegulations__HazMatRegulations_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatRegulations.class, ns1_HazMatRegulations_TYPE_QNAME);
        myns1_GetUnitOfMeasuresResponse__GetUnitOfMeasuresResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetUnitOfMeasuresResponse.class, ns1_GetUnitOfMeasuresResponse_TYPE_QNAME);
        myns1_SearchByShipperAndShipdateResponse__SearchByShipperAndShipdateResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateResponse.class, ns1_SearchByShipperAndShipdateResponse_TYPE_QNAME);
        myns1_HazmatLabelsResponse__HazmatLabelsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatLabelsResponse.class, ns1_HazmatLabelsResponse_TYPE_QNAME);
        myns1_SearchByShipperAndShipdateWithCountResponse__SearchByShipperAndShipdateWithCountResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperAndShipdateWithCountResponse.class, ns1_SearchByShipperAndShipdateWithCountResponse_TYPE_QNAME);
        myns1_GetStagedBatch__GetStagedBatch_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetStagedBatch.class, ns1_GetStagedBatch_TYPE_QNAME);
        myns1_AddShipperResponse__AddShipperResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddShipperResponse.class, ns1_AddShipperResponse_TYPE_QNAME);
        myns1_GetSearchFieldList__GetSearchFieldList_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetSearchFieldList.class, ns1_GetSearchFieldList_TYPE_QNAME);
        myns1_PrintBatchResponse__PrintBatchResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintBatchResponse.class, ns1_PrintBatchResponse_TYPE_QNAME);
        myns1_GetScalesResponse__GetScalesResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetScalesResponse.class, ns1_GetScalesResponse_TYPE_QNAME);
        myns1_GetCurrencyByCountryLocale__GetCurrencyByCountryLocale_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountryLocale.class, ns1_GetCurrencyByCountryLocale_TYPE_QNAME);
        myns1_AreTransmitItemsAvailableForDeletionResponse__AreTransmitItemsAvailableForDeletionResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AreTransmitItemsAvailableForDeletionResponse.class, ns1_AreTransmitItemsAvailableForDeletionResponse_TYPE_QNAME);
        myns1_CODPaymentMethodsResponse__CODPaymentMethodsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODPaymentMethodsResponse.class, ns1_CODPaymentMethodsResponse_TYPE_QNAME);
        myns1_CODPaymentMethods__CODPaymentMethods_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODPaymentMethods.class, ns1_CODPaymentMethods_TYPE_QNAME);
        myns1_NAFTAProducerResponse__NAFTAProducerResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NAFTAProducerResponse.class, ns1_NAFTAProducerResponse_TYPE_QNAME);
        myns1_GetDeleteTransmitItemsList__GetDeleteTransmitItemsList_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDeleteTransmitItemsList.class, ns1_GetDeleteTransmitItemsList_TYPE_QNAME);
        myns1_ReShip__ReShip_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReShip.class, ns1_ReShip_TYPE_QNAME);
        myns1_GetCurrencyByCountryLocaleResponse__GetCurrencyByCountryLocaleResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCurrencyByCountryLocaleResponse.class, ns1_GetCurrencyByCountryLocaleResponse_TYPE_QNAME);
        myns1_SEDMethodsResponse__SEDMethodsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SEDMethodsResponse.class, ns1_SEDMethodsResponse_TYPE_QNAME);
        myns1_CODReturnMethods__CODReturnMethods_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CODReturnMethods.class, ns1_CODReturnMethods_TYPE_QNAME);
        myns1_GetServicesbyCarriers__GetServicesbyCarriers_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetServicesbyCarriers.class, ns1_GetServicesbyCarriers_TYPE_QNAME);
        myns1_GetDocumentFormats__GetDocumentFormats_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetDocumentFormats.class, ns1_GetDocumentFormats_TYPE_QNAME);
        myns1_GetGroupResponse__GetGroupResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupResponse.class, ns1_GetGroupResponse_TYPE_QNAME);
        myns1_RemoveBatchItem__RemoveBatchItem_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RemoveBatchItem.class, ns1_RemoveBatchItem_TYPE_QNAME);
        myns1_ValidateEntitlements__ValidateEntitlements_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ValidateEntitlements.class, ns1_ValidateEntitlements_TYPE_QNAME);
        myns1_SearchByShipperReference__SearchByShipperReference_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReference.class, ns1_SearchByShipperReference_TYPE_QNAME);
        myns1_GetTransmitItemsByStatus__GetTransmitItemsByStatus_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetTransmitItemsByStatus.class, ns1_GetTransmitItemsByStatus_TYPE_QNAME);
        myns1_SearchByShipperReferenceResponse__SearchByShipperReferenceResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByShipperReferenceResponse.class, ns1_SearchByShipperReferenceResponse_TYPE_QNAME);
        myns1_ShipOrder__ShipOrder_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipOrder.class, ns1_ShipOrder_TYPE_QNAME);
        myns1_ExchangeMethodsResponse__ExchangeMethodsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ExchangeMethodsResponse.class, ns1_ExchangeMethodsResponse_TYPE_QNAME);
        myns1_GetPrinterResponse__GetPrinterResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetPrinterResponse.class, ns1_GetPrinterResponse_TYPE_QNAME);
        myns1_GetCommitments__GetCommitments_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetCommitments.class, ns1_GetCommitments_TYPE_QNAME);
        myns1_SearchByTrackingNumberWithCountResponse__SearchByTrackingNumberWithCountResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByTrackingNumberWithCountResponse.class, ns1_SearchByTrackingNumberWithCountResponse_TYPE_QNAME);
        myns1_UpdatePrinter__UpdatePrinter_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UpdatePrinter.class, ns1_UpdatePrinter_TYPE_QNAME);
        myns1_SearchByGlobalBundleIdResponse__SearchByGlobalBundleIdResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByGlobalBundleIdResponse.class, ns1_SearchByGlobalBundleIdResponse_TYPE_QNAME);
        myns1_GetGroupDocumentsResponse__GetGroupDocumentsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetGroupDocumentsResponse.class, ns1_GetGroupDocumentsResponse_TYPE_QNAME);
        myns1_HazmatRadioactiveException__HazmatRadioactiveException_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazmatRadioactiveException.class, ns1_HazmatRadioactiveException_TYPE_QNAME);
        myns1_ValidateEntitlementsResponse__ValidateEntitlementsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ValidateEntitlementsResponse.class, ns1_ValidateEntitlementsResponse_TYPE_QNAME);
        myns1_DeleteTransmitItemsResponse__DeleteTransmitItemsResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DeleteTransmitItemsResponse.class, ns1_DeleteTransmitItemsResponse_TYPE_QNAME);
        myns1_ModifyPackageList__ModifyPackageList_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyPackageList.class, ns1_ModifyPackageList_TYPE_QNAME);
        myns1_AddDocumentProfile__AddDocumentProfile_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AddDocumentProfile.class, ns1_AddDocumentProfile_TYPE_QNAME);
        myns1_SearchByConsigneeReferenceWithCount__SearchByConsigneeReferenceWithCount_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchByConsigneeReferenceWithCount.class, ns1_SearchByConsigneeReferenceWithCount_TYPE_QNAME);
        myns1_PrintDocument__PrintDocument_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintDocument.class, ns1_PrintDocument_TYPE_QNAME);
        myns1_CopyPrinterResponse__CopyPrinterResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CopyPrinterResponse.class, ns1_CopyPrinterResponse_TYPE_QNAME);
        myns1_AlcoholPackaging__AlcoholPackaging_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.AlcoholPackaging.class, ns1_AlcoholPackaging_TYPE_QNAME);
    }
    
    private static final QName _portName = new QName("http://tempuri.org/", "wcfShip");
    private static final int GetTransmitItems_OPCODE = 0;
    private static final int COMethods_OPCODE = 1;
    private static final int AddShipmentToBatch_OPCODE = 2;
    private static final int UserMethod_OPCODE = 3;
    private static final int GetCountries_OPCODE = 4;
    private static final int Sox_Version_OPCODE = 5;
    private static final int SearchByTrackingNumber_OPCODE = 6;
    private static final int Sox_Db_Version_OPCODE = 7;
    private static final int searchPackageHistory_OPCODE = 8;
    private static final int DeleteTransmitItem_OPCODE = 9;
    private static final int UpdateDocumentProfile_OPCODE = 10;
    private static final int GetNextValidShipDate_OPCODE = 11;
    private static final int GetCommodityClasses_OPCODE = 12;
    private static final int CreateBatch_OPCODE = 13;
    private static final int SearchByConsigneeReferenceWithCount_OPCODE = 14;
    private static final int GetUnitOfMeasures_OPCODE = 15;
    private static final int GetShipFileDocuments_OPCODE = 16;
    private static final int VoidPackageByTrackingNumber_OPCODE = 17;
    private static final int GetShipperNameAddress_OPCODE = 18;
    private static final int GetConfiguredPrinters_OPCODE = 19;
    private static final int CloseGroup_OPCODE = 20;
    private static final int GetWeightUnitByCountryLocale_OPCODE = 21;
    private static final int SearchByShipperReferenceWithCount_OPCODE = 22;
    private static final int Ship_OPCODE = 23;
    private static final int CreateGroup_OPCODE = 24;
    private static final int ModifyGroup_OPCODE = 25;
    private static final int CommodityCondition_OPCODE = 26;
    private static final int BrokerageMethod_OPCODE = 27;
    private static final int SearchByShipperAndShipdateAndStatus_OPCODE = 28;
    private static final int AlcoholTypes_OPCODE = 29;
    private static final int GetDocumentProfiles_OPCODE = 30;
    private static final int InsertSoxDbPackage_OPCODE = 31;
    private static final int SearchByFilter_OPCODE = 32;
    private static final int SearchByShipperAndShipdate_OPCODE = 33;
    private static final int GetGroup_OPCODE = 34;
    private static final int GetCurrencyByCountry_OPCODE = 35;
    private static final int GetSearchFieldswithType_OPCODE = 36;
    private static final int GetServicesbyCarriers_OPCODE = 37;
    private static final int GetCommitments_OPCODE = 38;
    private static final int VoidPackageByGlobalMsn_OPCODE = 39;
    private static final int PrintDocument_OPCODE = 40;
    private static final int ReturnDeliveryMethods_OPCODE = 41;
    private static final int GetIncoterms_OPCODE = 42;
    private static final int GetPrinter_OPCODE = 43;
    private static final int SearchByShipFileID_OPCODE = 44;
    private static final int CloseOutBySymbolsAndPrint_OPCODE = 45;
    private static final int GetAvailablePrinterStocks_OPCODE = 46;
    private static final int UpdateSoxDbPackage_OPCODE = 47;
    private static final int HazmatPackingGroups_OPCODE = 48;
    private static final int GetDeleteTransmitItemsList_OPCODE = 49;
    private static final int AddShipper_OPCODE = 50;
    private static final int RemoveBatch_OPCODE = 51;
    private static final int DispositionMethods_OPCODE = 52;
    private static final int GetShippers_OPCODE = 53;
    private static final int IsValidShipDate_OPCODE = 54;
    private static final int Load_OPCODE = 55;
    private static final int GetCloseOutItems_OPCODE = 56;
    private static final int GetStagedBatch_OPCODE = 57;
    private static final int GetScales_OPCODE = 58;
    private static final int GetDeviceDrivers_OPCODE = 59;
    private static final int AdditionalHandlingTypes_OPCODE = 60;
    private static final int TransmitItems_OPCODE = 61;
    private static final int GetCurrencyByCountryLocale_OPCODE = 62;
    private static final int NAFTAProducer_OPCODE = 63;
    private static final int AddDocumentProfile_OPCODE = 64;
    private static final int PrintRequest_OPCODE = 65;
    private static final int HazmatLabels_OPCODE = 66;
    private static final int SEDMethods_OPCODE = 67;
    private static final int GetPackageTypes_OPCODE = 68;
    private static final int DeleteHistoryItems_OPCODE = 69;
    private static final int GetSearchFieldList_OPCODE = 70;
    private static final int DeleteShipper_OPCODE = 71;
    private static final int App_Db_Version_OPCODE = 72;
    private static final int CODPaymentMethods_OPCODE = 73;
    private static final int InspectNameAddress_OPCODE = 74;
    private static final int HazMatRegulations_OPCODE = 75;
    private static final int ReShip_OPCODE = 76;
    private static final int ProcessBatch_OPCODE = 77;
    private static final int DryIcePurposes_OPCODE = 78;
    private static final int SearchByShipperAndShipdateWithCount_OPCODE = 79;
    private static final int InstantiateWCF_OPCODE = 80;
    private static final int GetServices_OPCODE = 81;
    private static final int ChangeShipperSymbol_OPCODE = 82;
    private static final int SearchByTrackingNumberWithCount_OPCODE = 83;
    private static final int GetHistoryItemList_OPCODE = 84;
    private static final int AddPrinter_OPCODE = 85;
    private static final int ExchangeMethods_OPCODE = 86;
    private static final int HazMatRegulationSets_OPCODE = 87;
    private static final int CommercialInvoiceMethods_OPCODE = 88;
    private static final int DryIceRegulationSets_OPCODE = 89;
    private static final int CloseOutModes_OPCODE = 90;
    private static final int DeletePrinter_OPCODE = 91;
    private static final int ModifyPackageList_OPCODE = 92;
    private static final int ShipOrder_OPCODE = 93;
    private static final int ReProcess_OPCODE = 94;
    private static final int GetDocumentProfile_OPCODE = 95;
    private static final int PrintPositionDocumentXml_OPCODE = 96;
    private static final int GetLanguages_OPCODE = 97;
    private static final int ChargesOnDocumentation_OPCODE = 98;
    private static final int GetTransmitItemsByStatus_OPCODE = 99;
    private static final int DeliveryMethods_OPCODE = 100;
    private static final int VoidPackagesByGlobalMsnList_OPCODE = 101;
    private static final int ShipBatchItem_OPCODE = 102;
    private static final int UpdatePrinter_OPCODE = 103;
    private static final int SearchByGlobalMsn_OPCODE = 104;
    private static final int CSAdapter_Version_OPCODE = 105;
    private static final int CODReturnMethods_OPCODE = 106;
    private static final int ProcessBatchByRequest_OPCODE = 107;
    private static final int HazMatCACategories_OPCODE = 108;
    private static final int GetNameAddressValidationCandidates_OPCODE = 109;
    private static final int GetCurrencies_OPCODE = 110;
    private static final int GetTransmitItemsAvailableForDeletion_OPCODE = 111;
    private static final int SearchByGlobalBundleId_OPCODE = 112;
    private static final int GetAvailablePrinters_OPCODE = 113;
    private static final int GetBatchShipmentErrors_OPCODE = 114;
    private static final int LoadBatchItem_OPCODE = 115;
    private static final int StageBatch_OPCODE = 116;
    private static final int CopyPrinter_OPCODE = 117;
    private static final int DeleteTransmitItems_OPCODE = 118;
    private static final int NAFTARVCMethods_OPCODE = 119;
    private static final int LoadBatch_OPCODE = 120;
    private static final int SearchByConsigneeReference_OPCODE = 121;
    private static final int GetNameAddressValidationCandidatesWithParams_OPCODE = 122;
    private static final int GetCarriersbyShippers_OPCODE = 123;
    private static final int GetGroupDocuments_OPCODE = 124;
    private static final int Business_Object_Version_OPCODE = 125;
    private static final int GetCarriers_OPCODE = 126;
    private static final int SetCloseOutMode_OPCODE = 127;
    private static final int ReturnAddressMethods_OPCODE = 128;
    private static final int GetGroupingTypes_OPCODE = 129;
    private static final int SearchByShipperReference_OPCODE = 130;
    private static final int ValidateEntitlements_OPCODE = 131;
    private static final int OpenGroup_OPCODE = 132;
    private static final int NAFTAPreferenceCriterion_OPCODE = 133;
    private static final int TransmitItem_OPCODE = 134;
    private static final int SearchByFilters_OPCODE = 135;
    private static final int DeleteDocumentProfile_OPCODE = 136;
    private static final int GetStagedBatches_OPCODE = 137;
    private static final int GetGroups_OPCODE = 138;
    private static final int GetBatchCount_OPCODE = 139;
    private static final int GetHolidays_OPCODE = 140;
    private static final int ManagementLayer_Version_OPCODE = 141;
    private static final int AreTransmitItemsAvailableForDeletion_OPCODE = 142;
    private static final int CopyDocumentProfile_OPCODE = 143;
    private static final int Rate_OPCODE = 144;
    private static final int GetDocumentFormats_OPCODE = 145;
    private static final int GetCloseOutMode_OPCODE = 146;
    private static final int RateServices_OPCODE = 147;
    private static final int PrintBatch_OPCODE = 148;
    private static final int GetGroupings_OPCODE = 149;
    private static final int AlcoholPackaging_OPCODE = 150;
    private static final int DeleteHistoryItem_OPCODE = 151;
    private static final int RemoveBatchItem_OPCODE = 152;
    private static final int Validate_OPCODE = 153;
    private static final int HazmatPhysicalForm_OPCODE = 154;
    private static final int CloseOutBySymbols_OPCODE = 155;
    private static final int HazmatRadioactiveException_OPCODE = 156;
    private static final int CloseGroupAndPrint_OPCODE = 157;
    private static final int GetPaymentTypes_OPCODE = 158;
    private static final QName ns1_GetTransmitItems_GetTransmitItems_QNAME = new QName("http://PSI.Wcf", "GetTransmitItems");
    private static final QName ns1_GetTransmitItems_TYPE_QNAME = new QName("http://PSI.Wcf", "GetTransmitItems");
    private CombinedSerializer myns1_GetTransmitItems__GetTransmitItems_LiteralSerializer;
    private static final QName ns1_GetTransmitItems_GetTransmitItemsResponse_QNAME = new QName("http://PSI.Wcf", "GetTransmitItemsResponse");
    private static final QName ns1_GetTransmitItemsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetTransmitItemsResponse");
    private CombinedSerializer myns1_GetTransmitItemsResponse__GetTransmitItemsResponse_LiteralSerializer;
    private static final QName ns1_COMethods_COMethods_QNAME = new QName("http://PSI.Wcf", "COMethods");
    private static final QName ns1_COMethods_TYPE_QNAME = new QName("http://PSI.Wcf", "COMethods");
    private CombinedSerializer myns1_COMethods__COMethods_LiteralSerializer;
    private static final QName ns1_COMethods_COMethodsResponse_QNAME = new QName("http://PSI.Wcf", "COMethodsResponse");
    private static final QName ns1_COMethodsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "COMethodsResponse");
    private CombinedSerializer myns1_COMethodsResponse__COMethodsResponse_LiteralSerializer;
    private static final QName ns1_AddShipmentToBatch_AddShipmentToBatch_QNAME = new QName("http://PSI.Wcf", "AddShipmentToBatch");
    private static final QName ns1_AddShipmentToBatch_TYPE_QNAME = new QName("http://PSI.Wcf", "AddShipmentToBatch");
    private CombinedSerializer myns1_AddShipmentToBatch__AddShipmentToBatch_LiteralSerializer;
    private static final QName ns1_AddShipmentToBatch_AddShipmentToBatchResponse_QNAME = new QName("http://PSI.Wcf", "AddShipmentToBatchResponse");
    private static final QName ns1_AddShipmentToBatchResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "AddShipmentToBatchResponse");
    private CombinedSerializer myns1_AddShipmentToBatchResponse__AddShipmentToBatchResponse_LiteralSerializer;
    private static final QName ns1_UserMethod_UserMethod_QNAME = new QName("http://PSI.Wcf", "UserMethod");
    private static final QName ns1_UserMethod_TYPE_QNAME = new QName("http://PSI.Wcf", "UserMethod");
    private CombinedSerializer myns1_UserMethod__UserMethod_LiteralSerializer;
    private static final QName ns1_UserMethod_UserMethodResponse_QNAME = new QName("http://PSI.Wcf", "UserMethodResponse");
    private static final QName ns1_UserMethodResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "UserMethodResponse");
    private CombinedSerializer myns1_UserMethodResponse__UserMethodResponse_LiteralSerializer;
    private static final QName ns1_GetCountries_GetCountries_QNAME = new QName("http://PSI.Wcf", "GetCountries");
    private static final QName ns1_GetCountries_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCountries");
    private CombinedSerializer myns1_GetCountries__GetCountries_LiteralSerializer;
    private static final QName ns1_GetCountries_GetCountriesResponse_QNAME = new QName("http://PSI.Wcf", "GetCountriesResponse");
    private static final QName ns1_GetCountriesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCountriesResponse");
    private CombinedSerializer myns1_GetCountriesResponse__GetCountriesResponse_LiteralSerializer;
    private static final QName ns1_Sox_Version_Sox_Version_QNAME = new QName("http://PSI.Wcf", "Sox_Version");
    private static final QName ns1_Sox_Version_TYPE_QNAME = new QName("http://PSI.Wcf", "Sox_Version");
    private CombinedSerializer myns1_Sox_Version__Sox_Version_LiteralSerializer;
    private static final QName ns1_Sox_Version_Sox_VersionResponse_QNAME = new QName("http://PSI.Wcf", "Sox_VersionResponse");
    private static final QName ns1_Sox_VersionResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "Sox_VersionResponse");
    private CombinedSerializer myns1_Sox_VersionResponse__Sox_VersionResponse_LiteralSerializer;
    private static final QName ns1_SearchByTrackingNumber_SearchByTrackingNumber_QNAME = new QName("http://PSI.Wcf", "SearchByTrackingNumber");
    private static final QName ns1_SearchByTrackingNumber_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByTrackingNumber");
    private CombinedSerializer myns1_SearchByTrackingNumber__SearchByTrackingNumber_LiteralSerializer;
    private static final QName ns1_SearchByTrackingNumber_SearchByTrackingNumberResponse_QNAME = new QName("http://PSI.Wcf", "SearchByTrackingNumberResponse");
    private static final QName ns1_SearchByTrackingNumberResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByTrackingNumberResponse");
    private CombinedSerializer myns1_SearchByTrackingNumberResponse__SearchByTrackingNumberResponse_LiteralSerializer;
    private static final QName ns1_Sox_Db_Version_Sox_Db_Version_QNAME = new QName("http://PSI.Wcf", "Sox_Db_Version");
    private static final QName ns1_Sox_Db_Version_TYPE_QNAME = new QName("http://PSI.Wcf", "Sox_Db_Version");
    private CombinedSerializer myns1_Sox_Db_Version__Sox_Db_Version_LiteralSerializer;
    private static final QName ns1_Sox_Db_Version_Sox_Db_VersionResponse_QNAME = new QName("http://PSI.Wcf", "Sox_Db_VersionResponse");
    private static final QName ns1_Sox_Db_VersionResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "Sox_Db_VersionResponse");
    private CombinedSerializer myns1_Sox_Db_VersionResponse__Sox_Db_VersionResponse_LiteralSerializer;
    private static final QName ns1_searchPackageHistory_searchPackageHistory_QNAME = new QName("http://PSI.Wcf", "searchPackageHistory");
    private static final QName ns1_searchPackageHistory_TYPE_QNAME = new QName("http://PSI.Wcf", "searchPackageHistory");
    private CombinedSerializer myns1_searchPackageHistory__SearchPackageHistory_LiteralSerializer;
    private static final QName ns1_searchPackageHistory_searchPackageHistoryResponse_QNAME = new QName("http://PSI.Wcf", "searchPackageHistoryResponse");
    private static final QName ns1_searchPackageHistoryResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "searchPackageHistoryResponse");
    private CombinedSerializer myns1_searchPackageHistoryResponse__SearchPackageHistoryResponse_LiteralSerializer;
    private static final QName ns1_DeleteTransmitItem_DeleteTransmitItem_QNAME = new QName("http://PSI.Wcf", "DeleteTransmitItem");
    private static final QName ns1_DeleteTransmitItem_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteTransmitItem");
    private CombinedSerializer myns1_DeleteTransmitItem__DeleteTransmitItem_LiteralSerializer;
    private static final QName ns1_DeleteTransmitItem_DeleteTransmitItemResponse_QNAME = new QName("http://PSI.Wcf", "DeleteTransmitItemResponse");
    private static final QName ns1_DeleteTransmitItemResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteTransmitItemResponse");
    private CombinedSerializer myns1_DeleteTransmitItemResponse__DeleteTransmitItemResponse_LiteralSerializer;
    private static final QName ns1_UpdateDocumentProfile_UpdateDocumentProfile_QNAME = new QName("http://PSI.Wcf", "UpdateDocumentProfile");
    private static final QName ns1_UpdateDocumentProfile_TYPE_QNAME = new QName("http://PSI.Wcf", "UpdateDocumentProfile");
    private CombinedSerializer myns1_UpdateDocumentProfile__UpdateDocumentProfile_LiteralSerializer;
    private static final QName ns1_UpdateDocumentProfile_UpdateDocumentProfileResponse_QNAME = new QName("http://PSI.Wcf", "UpdateDocumentProfileResponse");
    private static final QName ns1_UpdateDocumentProfileResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "UpdateDocumentProfileResponse");
    private CombinedSerializer myns1_UpdateDocumentProfileResponse__UpdateDocumentProfileResponse_LiteralSerializer;
    private static final QName ns1_GetNextValidShipDate_GetNextValidShipDate_QNAME = new QName("http://PSI.Wcf", "GetNextValidShipDate");
    private static final QName ns1_GetNextValidShipDate_TYPE_QNAME = new QName("http://PSI.Wcf", "GetNextValidShipDate");
    private CombinedSerializer myns1_GetNextValidShipDate__GetNextValidShipDate_LiteralSerializer;
    private static final QName ns1_GetNextValidShipDate_GetNextValidShipDateResponse_QNAME = new QName("http://PSI.Wcf", "GetNextValidShipDateResponse");
    private static final QName ns1_GetNextValidShipDateResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetNextValidShipDateResponse");
    private CombinedSerializer myns1_GetNextValidShipDateResponse__GetNextValidShipDateResponse_LiteralSerializer;
    private static final QName ns1_GetCommodityClasses_GetCommodityClasses_QNAME = new QName("http://PSI.Wcf", "GetCommodityClasses");
    private static final QName ns1_GetCommodityClasses_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCommodityClasses");
    private CombinedSerializer myns1_GetCommodityClasses__GetCommodityClasses_LiteralSerializer;
    private static final QName ns1_GetCommodityClasses_GetCommodityClassesResponse_QNAME = new QName("http://PSI.Wcf", "GetCommodityClassesResponse");
    private static final QName ns1_GetCommodityClassesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCommodityClassesResponse");
    private CombinedSerializer myns1_GetCommodityClassesResponse__GetCommodityClassesResponse_LiteralSerializer;
    private static final QName ns1_CreateBatch_CreateBatch_QNAME = new QName("http://PSI.Wcf", "CreateBatch");
    private static final QName ns1_CreateBatch_TYPE_QNAME = new QName("http://PSI.Wcf", "CreateBatch");
    private CombinedSerializer myns1_CreateBatch__CreateBatch_LiteralSerializer;
    private static final QName ns1_CreateBatch_CreateBatchResponse_QNAME = new QName("http://PSI.Wcf", "CreateBatchResponse");
    private static final QName ns1_CreateBatchResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CreateBatchResponse");
    private CombinedSerializer myns1_CreateBatchResponse__CreateBatchResponse_LiteralSerializer;
    private static final QName ns1_SearchByConsigneeReferenceWithCount_SearchByConsigneeReferenceWithCount_QNAME = new QName("http://PSI.Wcf", "SearchByConsigneeReferenceWithCount");
    private static final QName ns1_SearchByConsigneeReferenceWithCount_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByConsigneeReferenceWithCount");
    private CombinedSerializer myns1_SearchByConsigneeReferenceWithCount__SearchByConsigneeReferenceWithCount_LiteralSerializer;
    private static final QName ns1_SearchByConsigneeReferenceWithCount_SearchByConsigneeReferenceWithCountResponse_QNAME = new QName("http://PSI.Wcf", "SearchByConsigneeReferenceWithCountResponse");
    private static final QName ns1_SearchByConsigneeReferenceWithCountResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByConsigneeReferenceWithCountResponse");
    private CombinedSerializer myns1_SearchByConsigneeReferenceWithCountResponse__SearchByConsigneeReferenceWithCountResponse_LiteralSerializer;
    private static final QName ns1_GetUnitOfMeasures_GetUnitOfMeasures_QNAME = new QName("http://PSI.Wcf", "GetUnitOfMeasures");
    private static final QName ns1_GetUnitOfMeasures_TYPE_QNAME = new QName("http://PSI.Wcf", "GetUnitOfMeasures");
    private CombinedSerializer myns1_GetUnitOfMeasures__GetUnitOfMeasures_LiteralSerializer;
    private static final QName ns1_GetUnitOfMeasures_GetUnitOfMeasuresResponse_QNAME = new QName("http://PSI.Wcf", "GetUnitOfMeasuresResponse");
    private static final QName ns1_GetUnitOfMeasuresResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetUnitOfMeasuresResponse");
    private CombinedSerializer myns1_GetUnitOfMeasuresResponse__GetUnitOfMeasuresResponse_LiteralSerializer;
    private static final QName ns1_GetShipFileDocuments_GetShipFileDocuments_QNAME = new QName("http://PSI.Wcf", "GetShipFileDocuments");
    private static final QName ns1_GetShipFileDocuments_TYPE_QNAME = new QName("http://PSI.Wcf", "GetShipFileDocuments");
    private CombinedSerializer myns1_GetShipFileDocuments__GetShipFileDocuments_LiteralSerializer;
    private static final QName ns1_GetShipFileDocuments_GetShipFileDocumentsResponse_QNAME = new QName("http://PSI.Wcf", "GetShipFileDocumentsResponse");
    private static final QName ns1_GetShipFileDocumentsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetShipFileDocumentsResponse");
    private CombinedSerializer myns1_GetShipFileDocumentsResponse__GetShipFileDocumentsResponse_LiteralSerializer;
    private static final QName ns1_VoidPackageByTrackingNumber_VoidPackageByTrackingNumber_QNAME = new QName("http://PSI.Wcf", "VoidPackageByTrackingNumber");
    private static final QName ns1_VoidPackageByTrackingNumber_TYPE_QNAME = new QName("http://PSI.Wcf", "VoidPackageByTrackingNumber");
    private CombinedSerializer myns1_VoidPackageByTrackingNumber__VoidPackageByTrackingNumber_LiteralSerializer;
    private static final QName ns1_VoidPackageByTrackingNumber_VoidPackageByTrackingNumberResponse_QNAME = new QName("http://PSI.Wcf", "VoidPackageByTrackingNumberResponse");
    private static final QName ns1_VoidPackageByTrackingNumberResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "VoidPackageByTrackingNumberResponse");
    private CombinedSerializer myns1_VoidPackageByTrackingNumberResponse__VoidPackageByTrackingNumberResponse_LiteralSerializer;
    private static final QName ns1_GetShipperNameAddress_GetShipperNameAddress_QNAME = new QName("http://PSI.Wcf", "GetShipperNameAddress");
    private static final QName ns1_GetShipperNameAddress_TYPE_QNAME = new QName("http://PSI.Wcf", "GetShipperNameAddress");
    private CombinedSerializer myns1_GetShipperNameAddress__GetShipperNameAddress_LiteralSerializer;
    private static final QName ns1_GetShipperNameAddress_GetShipperNameAddressResponse_QNAME = new QName("http://PSI.Wcf", "GetShipperNameAddressResponse");
    private static final QName ns1_GetShipperNameAddressResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetShipperNameAddressResponse");
    private CombinedSerializer myns1_GetShipperNameAddressResponse__GetShipperNameAddressResponse_LiteralSerializer;
    private static final QName ns1_GetConfiguredPrinters_GetConfiguredPrinters_QNAME = new QName("http://PSI.Wcf", "GetConfiguredPrinters");
    private static final QName ns1_GetConfiguredPrinters_TYPE_QNAME = new QName("http://PSI.Wcf", "GetConfiguredPrinters");
    private CombinedSerializer myns1_GetConfiguredPrinters__GetConfiguredPrinters_LiteralSerializer;
    private static final QName ns1_GetConfiguredPrinters_GetConfiguredPrintersResponse_QNAME = new QName("http://PSI.Wcf", "GetConfiguredPrintersResponse");
    private static final QName ns1_GetConfiguredPrintersResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetConfiguredPrintersResponse");
    private CombinedSerializer myns1_GetConfiguredPrintersResponse__GetConfiguredPrintersResponse_LiteralSerializer;
    private static final QName ns1_CloseGroup_CloseGroup_QNAME = new QName("http://PSI.Wcf", "CloseGroup");
    private static final QName ns1_CloseGroup_TYPE_QNAME = new QName("http://PSI.Wcf", "CloseGroup");
    private CombinedSerializer myns1_CloseGroup__CloseGroup_LiteralSerializer;
    private static final QName ns1_CloseGroup_CloseGroupResponse_QNAME = new QName("http://PSI.Wcf", "CloseGroupResponse");
    private static final QName ns1_CloseGroupResponseType_TYPE_QNAME = new QName("http://PSI.Wcf", "CloseGroupResponseType");
    private CombinedSerializer myns1_CloseGroupResponseType__CloseGroupResponseType_LiteralSerializer;
    private static final QName ns1_GetWeightUnitByCountryLocale_GetWeightUnitByCountryLocale_QNAME = new QName("http://PSI.Wcf", "GetWeightUnitByCountryLocale");
    private static final QName ns1_GetWeightUnitByCountryLocale_TYPE_QNAME = new QName("http://PSI.Wcf", "GetWeightUnitByCountryLocale");
    private CombinedSerializer myns1_GetWeightUnitByCountryLocale__GetWeightUnitByCountryLocale_LiteralSerializer;
    private static final QName ns1_GetWeightUnitByCountryLocale_GetWeightUnitByCountryLocaleResponse_QNAME = new QName("http://PSI.Wcf", "GetWeightUnitByCountryLocaleResponse");
    private static final QName ns1_GetWeightUnitByCountryLocaleResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetWeightUnitByCountryLocaleResponse");
    private CombinedSerializer myns1_GetWeightUnitByCountryLocaleResponse__GetWeightUnitByCountryLocaleResponse_LiteralSerializer;
    private static final QName ns1_SearchByShipperReferenceWithCount_SearchByShipperReferenceWithCount_QNAME = new QName("http://PSI.Wcf", "SearchByShipperReferenceWithCount");
    private static final QName ns1_SearchByShipperReferenceWithCount_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipperReferenceWithCount");
    private CombinedSerializer myns1_SearchByShipperReferenceWithCount__SearchByShipperReferenceWithCount_LiteralSerializer;
    private static final QName ns1_SearchByShipperReferenceWithCount_SearchByShipperReferenceWithCountResponse_QNAME = new QName("http://PSI.Wcf", "SearchByShipperReferenceWithCountResponse");
    private static final QName ns1_SearchByShipperReferenceWithCountResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipperReferenceWithCountResponse");
    private CombinedSerializer myns1_SearchByShipperReferenceWithCountResponse__SearchByShipperReferenceWithCountResponse_LiteralSerializer;
    private static final QName ns1_Ship_Ship_QNAME = new QName("http://PSI.Wcf", "Ship");
    private static final QName ns1_Ship_TYPE_QNAME = new QName("http://PSI.Wcf", "Ship");
    private CombinedSerializer myns1_Ship__Ship_LiteralSerializer;
    private static final QName ns1_Ship_ShipResponse_QNAME = new QName("http://PSI.Wcf", "ShipResponse");
    private static final QName ns1_ShipResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ShipResponse");
    private CombinedSerializer myns1_ShipResponse__ShipResponse_LiteralSerializer;
    private static final QName ns1_CreateGroup_CreateGroup_QNAME = new QName("http://PSI.Wcf", "CreateGroup");
    private static final QName ns1_CreateGroup_TYPE_QNAME = new QName("http://PSI.Wcf", "CreateGroup");
    private CombinedSerializer myns1_CreateGroup__CreateGroup_LiteralSerializer;
    private static final QName ns1_CreateGroup_CreateGroupResponse_QNAME = new QName("http://PSI.Wcf", "CreateGroupResponse");
    private static final QName ns1_CreateGroupResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CreateGroupResponse");
    private CombinedSerializer myns1_CreateGroupResponse__CreateGroupResponse_LiteralSerializer;
    private static final QName ns1_ModifyGroup_ModifyGroup_QNAME = new QName("http://PSI.Wcf", "ModifyGroup");
    private static final QName ns1_ModifyGroup_TYPE_QNAME = new QName("http://PSI.Wcf", "ModifyGroup");
    private CombinedSerializer myns1_ModifyGroup__ModifyGroup_LiteralSerializer;
    private static final QName ns1_ModifyGroup_ModifyGroupResponse_QNAME = new QName("http://PSI.Wcf", "ModifyGroupResponse");
    private static final QName ns1_ModifyGroupResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ModifyGroupResponse");
    private CombinedSerializer myns1_ModifyGroupResponse__ModifyGroupResponse_LiteralSerializer;
    private static final QName ns1_CommodityCondition_CommodityCondition_QNAME = new QName("http://PSI.Wcf", "CommodityCondition");
    private static final QName ns1_CommodityCondition_TYPE_QNAME = new QName("http://PSI.Wcf", "CommodityCondition");
    private CombinedSerializer myns1_CommodityCondition__CommodityCondition_LiteralSerializer;
    private static final QName ns1_CommodityCondition_CommodityConditionResponse_QNAME = new QName("http://PSI.Wcf", "CommodityConditionResponse");
    private static final QName ns1_CommodityConditionResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CommodityConditionResponse");
    private CombinedSerializer myns1_CommodityConditionResponse__CommodityConditionResponse_LiteralSerializer;
    private static final QName ns1_BrokerageMethod_BrokerageMethod_QNAME = new QName("http://PSI.Wcf", "BrokerageMethod");
    private static final QName ns1_BrokerageMethod_TYPE_QNAME = new QName("http://PSI.Wcf", "BrokerageMethod");
    private CombinedSerializer myns1_BrokerageMethod__BrokerageMethod_LiteralSerializer;
    private static final QName ns1_BrokerageMethod_BrokerageMethodResponse_QNAME = new QName("http://PSI.Wcf", "BrokerageMethodResponse");
    private static final QName ns1_BrokerageMethodResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "BrokerageMethodResponse");
    private CombinedSerializer myns1_BrokerageMethodResponse__BrokerageMethodResponse_LiteralSerializer;
    private static final QName ns1_SearchByShipperAndShipdateAndStatus_SearchByShipperAndShipdateAndStatus_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdateAndStatus");
    private static final QName ns1_SearchByShipperAndShipdateAndStatus_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdateAndStatus");
    private CombinedSerializer myns1_SearchByShipperAndShipdateAndStatus__SearchByShipperAndShipdateAndStatus_LiteralSerializer;
    private static final QName ns1_SearchByShipperAndShipdateAndStatus_SearchByShipperAndShipdateAndStatusResponse_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdateAndStatusResponse");
    private static final QName ns1_SearchByShipperAndShipdateAndStatusResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdateAndStatusResponse");
    private CombinedSerializer myns1_SearchByShipperAndShipdateAndStatusResponse__SearchByShipperAndShipdateAndStatusResponse_LiteralSerializer;
    private static final QName ns1_AlcoholTypes_AlcoholTypes_QNAME = new QName("http://PSI.Wcf", "AlcoholTypes");
    private static final QName ns1_AlcoholTypes_TYPE_QNAME = new QName("http://PSI.Wcf", "AlcoholTypes");
    private CombinedSerializer myns1_AlcoholTypes__AlcoholTypes_LiteralSerializer;
    private static final QName ns1_AlcoholTypes_AlcoholTypesResponse_QNAME = new QName("http://PSI.Wcf", "AlcoholTypesResponse");
    private static final QName ns1_AlcoholTypesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "AlcoholTypesResponse");
    private CombinedSerializer myns1_AlcoholTypesResponse__AlcoholTypesResponse_LiteralSerializer;
    private static final QName ns1_GetDocumentProfiles_GetDocumentProfiles_QNAME = new QName("http://PSI.Wcf", "GetDocumentProfiles");
    private static final QName ns1_GetDocumentProfiles_TYPE_QNAME = new QName("http://PSI.Wcf", "GetDocumentProfiles");
    private CombinedSerializer myns1_GetDocumentProfiles__GetDocumentProfiles_LiteralSerializer;
    private static final QName ns1_GetDocumentProfiles_GetDocumentProfilesResponse_QNAME = new QName("http://PSI.Wcf", "GetDocumentProfilesResponse");
    private static final QName ns1_GetDocumentProfilesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetDocumentProfilesResponse");
    private CombinedSerializer myns1_GetDocumentProfilesResponse__GetDocumentProfilesResponse_LiteralSerializer;
    private static final QName ns1_InsertSoxDbPackage_InsertSoxDbPackage_QNAME = new QName("http://PSI.Wcf", "InsertSoxDbPackage");
    private static final QName ns1_InsertSoxDbPackage_TYPE_QNAME = new QName("http://PSI.Wcf", "InsertSoxDbPackage");
    private CombinedSerializer myns1_InsertSoxDbPackage__InsertSoxDbPackage_LiteralSerializer;
    private static final QName ns1_InsertSoxDbPackage_InsertSoxDbPackageResponse_QNAME = new QName("http://PSI.Wcf", "InsertSoxDbPackageResponse");
    private static final QName ns1_InsertSoxDbPackageResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "InsertSoxDbPackageResponse");
    private CombinedSerializer myns1_InsertSoxDbPackageResponse__InsertSoxDbPackageResponse_LiteralSerializer;
    private static final QName ns1_SearchByFilter_SearchByFilter_QNAME = new QName("http://PSI.Wcf", "SearchByFilter");
    private static final QName ns1_SearchByFilter_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByFilter");
    private CombinedSerializer myns1_SearchByFilter__SearchByFilter_LiteralSerializer;
    private static final QName ns1_SearchByFilter_SearchByFilterResponse_QNAME = new QName("http://PSI.Wcf", "SearchByFilterResponse");
    private static final QName ns1_SearchByFilterResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByFilterResponse");
    private CombinedSerializer myns1_SearchByFilterResponse__SearchByFilterResponse_LiteralSerializer;
    private static final QName ns1_SearchByShipperAndShipdate_SearchByShipperAndShipdate_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdate");
    private static final QName ns1_SearchByShipperAndShipdate_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdate");
    private CombinedSerializer myns1_SearchByShipperAndShipdate__SearchByShipperAndShipdate_LiteralSerializer;
    private static final QName ns1_SearchByShipperAndShipdate_SearchByShipperAndShipdateResponse_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdateResponse");
    private static final QName ns1_SearchByShipperAndShipdateResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdateResponse");
    private CombinedSerializer myns1_SearchByShipperAndShipdateResponse__SearchByShipperAndShipdateResponse_LiteralSerializer;
    private static final QName ns1_GetGroup_GetGroup_QNAME = new QName("http://PSI.Wcf", "GetGroup");
    private static final QName ns1_GetGroup_TYPE_QNAME = new QName("http://PSI.Wcf", "GetGroup");
    private CombinedSerializer myns1_GetGroup__GetGroup_LiteralSerializer;
    private static final QName ns1_GetGroup_GetGroupResponse_QNAME = new QName("http://PSI.Wcf", "GetGroupResponse");
    private static final QName ns1_GetGroupResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetGroupResponse");
    private CombinedSerializer myns1_GetGroupResponse__GetGroupResponse_LiteralSerializer;
    private static final QName ns1_GetCurrencyByCountry_GetCurrencyByCountry_QNAME = new QName("http://PSI.Wcf", "GetCurrencyByCountry");
    private static final QName ns1_GetCurrencyByCountry_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCurrencyByCountry");
    private CombinedSerializer myns1_GetCurrencyByCountry__GetCurrencyByCountry_LiteralSerializer;
    private static final QName ns1_GetCurrencyByCountry_GetCurrencyByCountryResponse_QNAME = new QName("http://PSI.Wcf", "GetCurrencyByCountryResponse");
    private static final QName ns1_GetCurrencyByCountryResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCurrencyByCountryResponse");
    private CombinedSerializer myns1_GetCurrencyByCountryResponse__GetCurrencyByCountryResponse_LiteralSerializer;
    private static final QName ns1_GetSearchFieldswithType_GetSearchFieldswithType_QNAME = new QName("http://PSI.Wcf", "GetSearchFieldswithType");
    private static final QName ns1_GetSearchFieldswithType_TYPE_QNAME = new QName("http://PSI.Wcf", "GetSearchFieldswithType");
    private CombinedSerializer myns1_GetSearchFieldswithType__GetSearchFieldswithType_LiteralSerializer;
    private static final QName ns1_GetSearchFieldswithType_GetSearchFieldswithTypeResponse_QNAME = new QName("http://PSI.Wcf", "GetSearchFieldswithTypeResponse");
    private static final QName ns1_GetSearchFieldswithTypeResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetSearchFieldswithTypeResponse");
    private CombinedSerializer myns1_GetSearchFieldswithTypeResponse__GetSearchFieldswithTypeResponse_LiteralSerializer;
    private static final QName ns1_GetServicesbyCarriers_GetServicesbyCarriers_QNAME = new QName("http://PSI.Wcf", "GetServicesbyCarriers");
    private static final QName ns1_GetServicesbyCarriers_TYPE_QNAME = new QName("http://PSI.Wcf", "GetServicesbyCarriers");
    private CombinedSerializer myns1_GetServicesbyCarriers__GetServicesbyCarriers_LiteralSerializer;
    private static final QName ns1_GetServicesbyCarriers_GetServicesbyCarriersResponse_QNAME = new QName("http://PSI.Wcf", "GetServicesbyCarriersResponse");
    private static final QName ns1_GetServicesbyCarriersResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetServicesbyCarriersResponse");
    private CombinedSerializer myns1_GetServicesbyCarriersResponse__GetServicesbyCarriersResponse_LiteralSerializer;
    private static final QName ns1_GetCommitments_GetCommitments_QNAME = new QName("http://PSI.Wcf", "GetCommitments");
    private static final QName ns1_GetCommitments_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCommitments");
    private CombinedSerializer myns1_GetCommitments__GetCommitments_LiteralSerializer;
    private static final QName ns1_GetCommitments_GetCommitmentsResponse_QNAME = new QName("http://PSI.Wcf", "GetCommitmentsResponse");
    private static final QName ns1_GetCommitmentsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCommitmentsResponse");
    private CombinedSerializer myns1_GetCommitmentsResponse__GetCommitmentsResponse_LiteralSerializer;
    private static final QName ns1_VoidPackageByGlobalMsn_VoidPackageByGlobalMsn_QNAME = new QName("http://PSI.Wcf", "VoidPackageByGlobalMsn");
    private static final QName ns1_VoidPackageByGlobalMsn_TYPE_QNAME = new QName("http://PSI.Wcf", "VoidPackageByGlobalMsn");
    private CombinedSerializer myns1_VoidPackageByGlobalMsn__VoidPackageByGlobalMsn_LiteralSerializer;
    private static final QName ns1_VoidPackageByGlobalMsn_VoidPackageByGlobalMsnResponse_QNAME = new QName("http://PSI.Wcf", "VoidPackageByGlobalMsnResponse");
    private static final QName ns1_VoidPackageByGlobalMsnResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "VoidPackageByGlobalMsnResponse");
    private CombinedSerializer myns1_VoidPackageByGlobalMsnResponse__VoidPackageByGlobalMsnResponse_LiteralSerializer;
    private static final QName ns1_PrintDocument_PrintDocument_QNAME = new QName("http://PSI.Wcf", "PrintDocument");
    private static final QName ns1_PrintDocument_TYPE_QNAME = new QName("http://PSI.Wcf", "PrintDocument");
    private CombinedSerializer myns1_PrintDocument__PrintDocument_LiteralSerializer;
    private static final QName ns1_PrintDocument_PrintDocumentResponse_QNAME = new QName("http://PSI.Wcf", "PrintDocumentResponse");
    private static final QName ns1_PrintDocumentResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "PrintDocumentResponse");
    private CombinedSerializer myns1_PrintDocumentResponse__PrintDocumentResponse_LiteralSerializer;
    private static final QName ns1_ReturnDeliveryMethods_ReturnDeliveryMethods_QNAME = new QName("http://PSI.Wcf", "ReturnDeliveryMethods");
    private static final QName ns1_ReturnDeliveryMethods_TYPE_QNAME = new QName("http://PSI.Wcf", "ReturnDeliveryMethods");
    private CombinedSerializer myns1_ReturnDeliveryMethods__ReturnDeliveryMethods_LiteralSerializer;
    private static final QName ns1_ReturnDeliveryMethods_ReturnDeliveryMethodsResponse_QNAME = new QName("http://PSI.Wcf", "ReturnDeliveryMethodsResponse");
    private static final QName ns1_ReturnDeliveryMethodsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ReturnDeliveryMethodsResponse");
    private CombinedSerializer myns1_ReturnDeliveryMethodsResponse__ReturnDeliveryMethodsResponse_LiteralSerializer;
    private static final QName ns1_GetIncoterms_GetIncoterms_QNAME = new QName("http://PSI.Wcf", "GetIncoterms");
    private static final QName ns1_GetIncoterms_TYPE_QNAME = new QName("http://PSI.Wcf", "GetIncoterms");
    private CombinedSerializer myns1_GetIncoterms__GetIncoterms_LiteralSerializer;
    private static final QName ns1_GetIncoterms_GetIncotermsResponse_QNAME = new QName("http://PSI.Wcf", "GetIncotermsResponse");
    private static final QName ns1_GetIncotermsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetIncotermsResponse");
    private CombinedSerializer myns1_GetIncotermsResponse__GetIncotermsResponse_LiteralSerializer;
    private static final QName ns1_GetPrinter_GetPrinter_QNAME = new QName("http://PSI.Wcf", "GetPrinter");
    private static final QName ns1_GetPrinter_TYPE_QNAME = new QName("http://PSI.Wcf", "GetPrinter");
    private CombinedSerializer myns1_GetPrinter__GetPrinter_LiteralSerializer;
    private static final QName ns1_GetPrinter_GetPrinterResponse_QNAME = new QName("http://PSI.Wcf", "GetPrinterResponse");
    private static final QName ns1_GetPrinterResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetPrinterResponse");
    private CombinedSerializer myns1_GetPrinterResponse__GetPrinterResponse_LiteralSerializer;
    private static final QName ns1_SearchByShipFileID_SearchByShipFileID_QNAME = new QName("http://PSI.Wcf", "SearchByShipFileID");
    private static final QName ns1_SearchByShipFileID_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipFileID");
    private CombinedSerializer myns1_SearchByShipFileID__SearchByShipFileID_LiteralSerializer;
    private static final QName ns1_SearchByShipFileID_SearchByShipFileIDResponse_QNAME = new QName("http://PSI.Wcf", "SearchByShipFileIDResponse");
    private static final QName ns1_SearchByShipFileIDResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipFileIDResponse");
    private CombinedSerializer myns1_SearchByShipFileIDResponse__SearchByShipFileIDResponse_LiteralSerializer;
    private static final QName ns1_CloseOutBySymbolsAndPrint_CloseOutBySymbolsAndPrint_QNAME = new QName("http://PSI.Wcf", "CloseOutBySymbolsAndPrint");
    private static final QName ns1_CloseOutBySymbolsAndPrint_TYPE_QNAME = new QName("http://PSI.Wcf", "CloseOutBySymbolsAndPrint");
    private CombinedSerializer myns1_CloseOutBySymbolsAndPrint__CloseOutBySymbolsAndPrint_LiteralSerializer;
    private static final QName ns1_CloseOutBySymbolsAndPrint_CloseOutBySymbolsAndPrintResponse_QNAME = new QName("http://PSI.Wcf", "CloseOutBySymbolsAndPrintResponse");
    private static final QName ns1_CloseOutBySymbolsAndPrintResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CloseOutBySymbolsAndPrintResponse");
    private CombinedSerializer myns1_CloseOutBySymbolsAndPrintResponse__CloseOutBySymbolsAndPrintResponse_LiteralSerializer;
    private static final QName ns1_GetAvailablePrinterStocks_GetAvailablePrinterStocks_QNAME = new QName("http://PSI.Wcf", "GetAvailablePrinterStocks");
    private static final QName ns1_GetAvailablePrinterStocks_TYPE_QNAME = new QName("http://PSI.Wcf", "GetAvailablePrinterStocks");
    private CombinedSerializer myns1_GetAvailablePrinterStocks__GetAvailablePrinterStocks_LiteralSerializer;
    private static final QName ns1_GetAvailablePrinterStocks_GetAvailablePrinterStocksResponse_QNAME = new QName("http://PSI.Wcf", "GetAvailablePrinterStocksResponse");
    private static final QName ns1_GetAvailablePrinterStocksResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetAvailablePrinterStocksResponse");
    private CombinedSerializer myns1_GetAvailablePrinterStocksResponse__GetAvailablePrinterStocksResponse_LiteralSerializer;
    private static final QName ns1_UpdateSoxDbPackage_UpdateSoxDbPackage_QNAME = new QName("http://PSI.Wcf", "UpdateSoxDbPackage");
    private static final QName ns1_UpdateSoxDbPackage_TYPE_QNAME = new QName("http://PSI.Wcf", "UpdateSoxDbPackage");
    private CombinedSerializer myns1_UpdateSoxDbPackage__UpdateSoxDbPackage_LiteralSerializer;
    private static final QName ns1_UpdateSoxDbPackage_UpdateSoxDbPackageResponse_QNAME = new QName("http://PSI.Wcf", "UpdateSoxDbPackageResponse");
    private static final QName ns1_UpdateSoxDbPackageResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "UpdateSoxDbPackageResponse");
    private CombinedSerializer myns1_UpdateSoxDbPackageResponse__UpdateSoxDbPackageResponse_LiteralSerializer;
    private static final QName ns1_HazmatPackingGroups_HazmatPackingGroups_QNAME = new QName("http://PSI.Wcf", "HazmatPackingGroups");
    private static final QName ns1_HazmatPackingGroups_TYPE_QNAME = new QName("http://PSI.Wcf", "HazmatPackingGroups");
    private CombinedSerializer myns1_HazmatPackingGroups__HazmatPackingGroups_LiteralSerializer;
    private static final QName ns1_HazmatPackingGroups_HazmatPackingGroupsResponse_QNAME = new QName("http://PSI.Wcf", "HazmatPackingGroupsResponse");
    private static final QName ns1_HazmatPackingGroupsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "HazmatPackingGroupsResponse");
    private CombinedSerializer myns1_HazmatPackingGroupsResponse__HazmatPackingGroupsResponse_LiteralSerializer;
    private static final QName ns1_GetDeleteTransmitItemsList_GetDeleteTransmitItemsList_QNAME = new QName("http://PSI.Wcf", "GetDeleteTransmitItemsList");
    private static final QName ns1_GetDeleteTransmitItemsList_TYPE_QNAME = new QName("http://PSI.Wcf", "GetDeleteTransmitItemsList");
    private CombinedSerializer myns1_GetDeleteTransmitItemsList__GetDeleteTransmitItemsList_LiteralSerializer;
    private static final QName ns1_GetDeleteTransmitItemsList_GetDeleteTransmitItemsListResponse_QNAME = new QName("http://PSI.Wcf", "GetDeleteTransmitItemsListResponse");
    private static final QName ns1_GetDeleteTransmitItemsListResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetDeleteTransmitItemsListResponse");
    private CombinedSerializer myns1_GetDeleteTransmitItemsListResponse__GetDeleteTransmitItemsListResponse_LiteralSerializer;
    private static final QName ns1_AddShipper_AddShipper_QNAME = new QName("http://PSI.Wcf", "AddShipper");
    private static final QName ns1_AddShipper_TYPE_QNAME = new QName("http://PSI.Wcf", "AddShipper");
    private CombinedSerializer myns1_AddShipper__AddShipper_LiteralSerializer;
    private static final QName ns1_AddShipper_AddShipperResponse_QNAME = new QName("http://PSI.Wcf", "AddShipperResponse");
    private static final QName ns1_AddShipperResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "AddShipperResponse");
    private CombinedSerializer myns1_AddShipperResponse__AddShipperResponse_LiteralSerializer;
    private static final QName ns1_RemoveBatch_RemoveBatch_QNAME = new QName("http://PSI.Wcf", "RemoveBatch");
    private static final QName ns1_RemoveBatch_TYPE_QNAME = new QName("http://PSI.Wcf", "RemoveBatch");
    private CombinedSerializer myns1_RemoveBatch__RemoveBatch_LiteralSerializer;
    private static final QName ns1_RemoveBatch_RemoveBatchResponse_QNAME = new QName("http://PSI.Wcf", "RemoveBatchResponse");
    private static final QName ns1_RemoveBatchResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "RemoveBatchResponse");
    private CombinedSerializer myns1_RemoveBatchResponse__RemoveBatchResponse_LiteralSerializer;
    private static final QName ns1_DispositionMethods_DispositionMethods_QNAME = new QName("http://PSI.Wcf", "DispositionMethods");
    private static final QName ns1_DispositionMethods_TYPE_QNAME = new QName("http://PSI.Wcf", "DispositionMethods");
    private CombinedSerializer myns1_DispositionMethods__DispositionMethods_LiteralSerializer;
    private static final QName ns1_DispositionMethods_DispositionMethodsResponse_QNAME = new QName("http://PSI.Wcf", "DispositionMethodsResponse");
    private static final QName ns1_DispositionMethodsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "DispositionMethodsResponse");
    private CombinedSerializer myns1_DispositionMethodsResponse__DispositionMethodsResponse_LiteralSerializer;
    private static final QName ns1_GetShippers_GetShippers_QNAME = new QName("http://PSI.Wcf", "GetShippers");
    private static final QName ns1_GetShippers_TYPE_QNAME = new QName("http://PSI.Wcf", "GetShippers");
    private CombinedSerializer myns1_GetShippers__GetShippers_LiteralSerializer;
    private static final QName ns1_GetShippers_GetShippersResponse_QNAME = new QName("http://PSI.Wcf", "GetShippersResponse");
    private static final QName ns1_GetShippersResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetShippersResponse");
    private CombinedSerializer myns1_GetShippersResponse__GetShippersResponse_LiteralSerializer;
    private static final QName ns1_IsValidShipDate_IsValidShipDate_QNAME = new QName("http://PSI.Wcf", "IsValidShipDate");
    private static final QName ns1_IsValidShipDate_TYPE_QNAME = new QName("http://PSI.Wcf", "IsValidShipDate");
    private CombinedSerializer myns1_IsValidShipDate__IsValidShipDate_LiteralSerializer;
    private static final QName ns1_IsValidShipDate_IsValidShipDateResponse_QNAME = new QName("http://PSI.Wcf", "IsValidShipDateResponse");
    private static final QName ns1_IsValidShipDateResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "IsValidShipDateResponse");
    private CombinedSerializer myns1_IsValidShipDateResponse__IsValidShipDateResponse_LiteralSerializer;
    private static final QName ns1_Load_Load_QNAME = new QName("http://PSI.Wcf", "Load");
    private static final QName ns1_Load_TYPE_QNAME = new QName("http://PSI.Wcf", "Load");
    private CombinedSerializer myns1_Load__Load_LiteralSerializer;
    private static final QName ns1_Load_LoadResponse_QNAME = new QName("http://PSI.Wcf", "LoadResponse");
    private static final QName ns1_LoadResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "LoadResponse");
    private CombinedSerializer myns1_LoadResponse__LoadResponse_LiteralSerializer;
    private static final QName ns1_GetCloseOutItems_GetCloseOutItems_QNAME = new QName("http://PSI.Wcf", "GetCloseOutItems");
    private static final QName ns1_GetCloseOutItems_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCloseOutItems");
    private CombinedSerializer myns1_GetCloseOutItems__GetCloseOutItems_LiteralSerializer;
    private static final QName ns1_GetCloseOutItems_GetCloseOutItemsResponse_QNAME = new QName("http://PSI.Wcf", "GetCloseOutItemsResponse");
    private static final QName ns1_GetCloseOutItemsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCloseOutItemsResponse");
    private CombinedSerializer myns1_GetCloseOutItemsResponse__GetCloseOutItemsResponse_LiteralSerializer;
    private static final QName ns1_GetStagedBatch_GetStagedBatch_QNAME = new QName("http://PSI.Wcf", "GetStagedBatch");
    private static final QName ns1_GetStagedBatch_TYPE_QNAME = new QName("http://PSI.Wcf", "GetStagedBatch");
    private CombinedSerializer myns1_GetStagedBatch__GetStagedBatch_LiteralSerializer;
    private static final QName ns1_GetStagedBatch_GetStagedBatchResponse_QNAME = new QName("http://PSI.Wcf", "GetStagedBatchResponse");
    private static final QName ns1_GetStagedBatchResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetStagedBatchResponse");
    private CombinedSerializer myns1_GetStagedBatchResponse__GetStagedBatchResponse_LiteralSerializer;
    private static final QName ns1_GetScales_GetScales_QNAME = new QName("http://PSI.Wcf", "GetScales");
    private static final QName ns1_GetScales_TYPE_QNAME = new QName("http://PSI.Wcf", "GetScales");
    private CombinedSerializer myns1_GetScales__GetScales_LiteralSerializer;
    private static final QName ns1_GetScales_GetScalesResponse_QNAME = new QName("http://PSI.Wcf", "GetScalesResponse");
    private static final QName ns1_GetScalesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetScalesResponse");
    private CombinedSerializer myns1_GetScalesResponse__GetScalesResponse_LiteralSerializer;
    private static final QName ns1_GetDeviceDrivers_GetDeviceDrivers_QNAME = new QName("http://PSI.Wcf", "GetDeviceDrivers");
    private static final QName ns1_GetDeviceDrivers_TYPE_QNAME = new QName("http://PSI.Wcf", "GetDeviceDrivers");
    private CombinedSerializer myns1_GetDeviceDrivers__GetDeviceDrivers_LiteralSerializer;
    private static final QName ns1_GetDeviceDrivers_GetDeviceDriversResponse_QNAME = new QName("http://PSI.Wcf", "GetDeviceDriversResponse");
    private static final QName ns1_GetDeviceDriversResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetDeviceDriversResponse");
    private CombinedSerializer myns1_GetDeviceDriversResponse__GetDeviceDriversResponse_LiteralSerializer;
    private static final QName ns1_AdditionalHandlingTypes_AdditionalHandlingTypes_QNAME = new QName("http://PSI.Wcf", "AdditionalHandlingTypes");
    private static final QName ns1_AdditionalHandlingTypes_TYPE_QNAME = new QName("http://PSI.Wcf", "AdditionalHandlingTypes");
    private CombinedSerializer myns1_AdditionalHandlingTypes__AdditionalHandlingTypes_LiteralSerializer;
    private static final QName ns1_AdditionalHandlingTypes_AdditionalHandlingTypesResponse_QNAME = new QName("http://PSI.Wcf", "AdditionalHandlingTypesResponse");
    private static final QName ns1_AdditionalHandlingTypesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "AdditionalHandlingTypesResponse");
    private CombinedSerializer myns1_AdditionalHandlingTypesResponse__AdditionalHandlingTypesResponse_LiteralSerializer;
    private static final QName ns1_TransmitItems_TransmitItems_QNAME = new QName("http://PSI.Wcf", "TransmitItems");
    private static final QName ns1_TransmitItems_TYPE_QNAME = new QName("http://PSI.Wcf", "TransmitItems");
    private CombinedSerializer myns1_TransmitItems__TransmitItems_LiteralSerializer;
    private static final QName ns1_TransmitItems_TransmitItemsResponse_QNAME = new QName("http://PSI.Wcf", "TransmitItemsResponse");
    private static final QName ns1_TransmitItemsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "TransmitItemsResponse");
    private CombinedSerializer myns1_TransmitItemsResponse__TransmitItemsResponse_LiteralSerializer;
    private static final QName ns1_GetCurrencyByCountryLocale_GetCurrencyByCountryLocale_QNAME = new QName("http://PSI.Wcf", "GetCurrencyByCountryLocale");
    private static final QName ns1_GetCurrencyByCountryLocale_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCurrencyByCountryLocale");
    private CombinedSerializer myns1_GetCurrencyByCountryLocale__GetCurrencyByCountryLocale_LiteralSerializer;
    private static final QName ns1_GetCurrencyByCountryLocale_GetCurrencyByCountryLocaleResponse_QNAME = new QName("http://PSI.Wcf", "GetCurrencyByCountryLocaleResponse");
    private static final QName ns1_GetCurrencyByCountryLocaleResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCurrencyByCountryLocaleResponse");
    private CombinedSerializer myns1_GetCurrencyByCountryLocaleResponse__GetCurrencyByCountryLocaleResponse_LiteralSerializer;
    private static final QName ns1_NAFTAProducer_NAFTAProducer_QNAME = new QName("http://PSI.Wcf", "NAFTAProducer");
    private static final QName ns1_NAFTAProducer_TYPE_QNAME = new QName("http://PSI.Wcf", "NAFTAProducer");
    private CombinedSerializer myns1_NAFTAProducer__NAFTAProducer_LiteralSerializer;
    private static final QName ns1_NAFTAProducer_NAFTAProducerResponse_QNAME = new QName("http://PSI.Wcf", "NAFTAProducerResponse");
    private static final QName ns1_NAFTAProducerResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "NAFTAProducerResponse");
    private CombinedSerializer myns1_NAFTAProducerResponse__NAFTAProducerResponse_LiteralSerializer;
    private static final QName ns1_AddDocumentProfile_AddDocumentProfile_QNAME = new QName("http://PSI.Wcf", "AddDocumentProfile");
    private static final QName ns1_AddDocumentProfile_TYPE_QNAME = new QName("http://PSI.Wcf", "AddDocumentProfile");
    private CombinedSerializer myns1_AddDocumentProfile__AddDocumentProfile_LiteralSerializer;
    private static final QName ns1_AddDocumentProfile_AddDocumentProfileResponse_QNAME = new QName("http://PSI.Wcf", "AddDocumentProfileResponse");
    private static final QName ns1_AddDocumentProfileResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "AddDocumentProfileResponse");
    private CombinedSerializer myns1_AddDocumentProfileResponse__AddDocumentProfileResponse_LiteralSerializer;
    private static final QName ns1_PrintRequest_PrintRequest_QNAME = new QName("http://PSI.Wcf", "PrintRequest");
    private static final QName ns1_PrintRequestType_TYPE_QNAME = new QName("http://PSI.Wcf", "PrintRequestType");
    private CombinedSerializer myns1_PrintRequestType__PrintRequestType_LiteralSerializer;
    private static final QName ns1_PrintRequest_PrintRequestResponse_QNAME = new QName("http://PSI.Wcf", "PrintRequestResponse");
    private static final QName ns1_PrintRequestResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "PrintRequestResponse");
    private CombinedSerializer myns1_PrintRequestResponse__PrintRequestResponse_LiteralSerializer;
    private static final QName ns1_HazmatLabels_HazmatLabels_QNAME = new QName("http://PSI.Wcf", "HazmatLabels");
    private static final QName ns1_HazmatLabels_TYPE_QNAME = new QName("http://PSI.Wcf", "HazmatLabels");
    private CombinedSerializer myns1_HazmatLabels__HazmatLabels_LiteralSerializer;
    private static final QName ns1_HazmatLabels_HazmatLabelsResponse_QNAME = new QName("http://PSI.Wcf", "HazmatLabelsResponse");
    private static final QName ns1_HazmatLabelsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "HazmatLabelsResponse");
    private CombinedSerializer myns1_HazmatLabelsResponse__HazmatLabelsResponse_LiteralSerializer;
    private static final QName ns1_SEDMethods_SEDMethods_QNAME = new QName("http://PSI.Wcf", "SEDMethods");
    private static final QName ns1_SEDMethods_TYPE_QNAME = new QName("http://PSI.Wcf", "SEDMethods");
    private CombinedSerializer myns1_SEDMethods__SEDMethods_LiteralSerializer;
    private static final QName ns1_SEDMethods_SEDMethodsResponse_QNAME = new QName("http://PSI.Wcf", "SEDMethodsResponse");
    private static final QName ns1_SEDMethodsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SEDMethodsResponse");
    private CombinedSerializer myns1_SEDMethodsResponse__SEDMethodsResponse_LiteralSerializer;
    private static final QName ns1_GetPackageTypes_GetPackageTypes_QNAME = new QName("http://PSI.Wcf", "GetPackageTypes");
    private static final QName ns1_GetPackageTypes_TYPE_QNAME = new QName("http://PSI.Wcf", "GetPackageTypes");
    private CombinedSerializer myns1_GetPackageTypes__GetPackageTypes_LiteralSerializer;
    private static final QName ns1_GetPackageTypes_GetPackageTypesResponse_QNAME = new QName("http://PSI.Wcf", "GetPackageTypesResponse");
    private static final QName ns1_GetPackageTypesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetPackageTypesResponse");
    private CombinedSerializer myns1_GetPackageTypesResponse__GetPackageTypesResponse_LiteralSerializer;
    private static final QName ns1_DeleteHistoryItems_DeleteHistoryItems_QNAME = new QName("http://PSI.Wcf", "DeleteHistoryItems");
    private static final QName ns1_DeleteHistoryItems_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteHistoryItems");
    private CombinedSerializer myns1_DeleteHistoryItems__DeleteHistoryItems_LiteralSerializer;
    private static final QName ns1_DeleteHistoryItems_DeleteHistoryItemsResponse_QNAME = new QName("http://PSI.Wcf", "DeleteHistoryItemsResponse");
    private static final QName ns1_DeleteHistoryItemsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteHistoryItemsResponse");
    private CombinedSerializer myns1_DeleteHistoryItemsResponse__DeleteHistoryItemsResponse_LiteralSerializer;
    private static final QName ns1_GetSearchFieldList_GetSearchFieldList_QNAME = new QName("http://PSI.Wcf", "GetSearchFieldList");
    private static final QName ns1_GetSearchFieldList_TYPE_QNAME = new QName("http://PSI.Wcf", "GetSearchFieldList");
    private CombinedSerializer myns1_GetSearchFieldList__GetSearchFieldList_LiteralSerializer;
    private static final QName ns1_GetSearchFieldList_GetSearchFieldListResponse_QNAME = new QName("http://PSI.Wcf", "GetSearchFieldListResponse");
    private static final QName ns1_GetSearchFieldListResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetSearchFieldListResponse");
    private CombinedSerializer myns1_GetSearchFieldListResponse__GetSearchFieldListResponse_LiteralSerializer;
    private static final QName ns1_DeleteShipper_DeleteShipper_QNAME = new QName("http://PSI.Wcf", "DeleteShipper");
    private static final QName ns1_DeleteShipper_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteShipper");
    private CombinedSerializer myns1_DeleteShipper__DeleteShipper_LiteralSerializer;
    private static final QName ns1_DeleteShipper_DeleteShipperResponse_QNAME = new QName("http://PSI.Wcf", "DeleteShipperResponse");
    private static final QName ns1_DeleteShipperResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteShipperResponse");
    private CombinedSerializer myns1_DeleteShipperResponse__DeleteShipperResponse_LiteralSerializer;
    private static final QName ns1_App_Db_Version_App_Db_Version_QNAME = new QName("http://PSI.Wcf", "App_Db_Version");
    private static final QName ns1_App_Db_Version_TYPE_QNAME = new QName("http://PSI.Wcf", "App_Db_Version");
    private CombinedSerializer myns1_App_Db_Version__App_Db_Version_LiteralSerializer;
    private static final QName ns1_App_Db_Version_App_Db_VersionResponse_QNAME = new QName("http://PSI.Wcf", "App_Db_VersionResponse");
    private static final QName ns1_App_Db_VersionResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "App_Db_VersionResponse");
    private CombinedSerializer myns1_App_Db_VersionResponse__App_Db_VersionResponse_LiteralSerializer;
    private static final QName ns1_CODPaymentMethods_CODPaymentMethods_QNAME = new QName("http://PSI.Wcf", "CODPaymentMethods");
    private static final QName ns1_CODPaymentMethods_TYPE_QNAME = new QName("http://PSI.Wcf", "CODPaymentMethods");
    private CombinedSerializer myns1_CODPaymentMethods__CODPaymentMethods_LiteralSerializer;
    private static final QName ns1_CODPaymentMethods_CODPaymentMethodsResponse_QNAME = new QName("http://PSI.Wcf", "CODPaymentMethodsResponse");
    private static final QName ns1_CODPaymentMethodsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CODPaymentMethodsResponse");
    private CombinedSerializer myns1_CODPaymentMethodsResponse__CODPaymentMethodsResponse_LiteralSerializer;
    private static final QName ns1_InspectNameAddress_InspectNameAddress_QNAME = new QName("http://PSI.Wcf", "InspectNameAddress");
    private static final QName ns1_InspectNameAddress_TYPE_QNAME = new QName("http://PSI.Wcf", "InspectNameAddress");
    private CombinedSerializer myns1_InspectNameAddress__InspectNameAddress_LiteralSerializer;
    private static final QName ns1_InspectNameAddress_InspectNameAddressResponse_QNAME = new QName("http://PSI.Wcf", "InspectNameAddressResponse");
    private static final QName ns1_InspectNameAddressResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "InspectNameAddressResponse");
    private CombinedSerializer myns1_InspectNameAddressResponse__InspectNameAddressResponse_LiteralSerializer;
    private static final QName ns1_HazMatRegulations_HazMatRegulations_QNAME = new QName("http://PSI.Wcf", "HazMatRegulations");
    private static final QName ns1_HazMatRegulations_TYPE_QNAME = new QName("http://PSI.Wcf", "HazMatRegulations");
    private CombinedSerializer myns1_HazMatRegulations__HazMatRegulations_LiteralSerializer;
    private static final QName ns1_HazMatRegulations_HazMatRegulationsResponse_QNAME = new QName("http://PSI.Wcf", "HazMatRegulationsResponse");
    private static final QName ns1_HazMatRegulationsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "HazMatRegulationsResponse");
    private CombinedSerializer myns1_HazMatRegulationsResponse__HazMatRegulationsResponse_LiteralSerializer;
    private static final QName ns1_ReShip_ReShip_QNAME = new QName("http://PSI.Wcf", "ReShip");
    private static final QName ns1_ReShip_TYPE_QNAME = new QName("http://PSI.Wcf", "ReShip");
    private CombinedSerializer myns1_ReShip__ReShip_LiteralSerializer;
    private static final QName ns1_ReShip_ReShipResponse_QNAME = new QName("http://PSI.Wcf", "ReShipResponse");
    private static final QName ns1_ReShipResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ReShipResponse");
    private CombinedSerializer myns1_ReShipResponse__ReShipResponse_LiteralSerializer;
    private static final QName ns1_ProcessBatch_ProcessBatch_QNAME = new QName("http://PSI.Wcf", "ProcessBatch");
    private static final QName ns1_ProcessBatch_TYPE_QNAME = new QName("http://PSI.Wcf", "ProcessBatch");
    private CombinedSerializer myns1_ProcessBatch__ProcessBatch_LiteralSerializer;
    private static final QName ns1_ProcessBatch_ProcessBatchResponse_QNAME = new QName("http://PSI.Wcf", "ProcessBatchResponse");
    private static final QName ns1_ProcessBatchResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ProcessBatchResponse");
    private CombinedSerializer myns1_ProcessBatchResponse__ProcessBatchResponse_LiteralSerializer;
    private static final QName ns1_DryIcePurposes_DryIcePurposes_QNAME = new QName("http://PSI.Wcf", "DryIcePurposes");
    private static final QName ns1_DryIcePurposes_TYPE_QNAME = new QName("http://PSI.Wcf", "DryIcePurposes");
    private CombinedSerializer myns1_DryIcePurposes__DryIcePurposes_LiteralSerializer;
    private static final QName ns1_DryIcePurposes_DryIcePurposesResponse_QNAME = new QName("http://PSI.Wcf", "DryIcePurposesResponse");
    private static final QName ns1_DryIcePurposesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "DryIcePurposesResponse");
    private CombinedSerializer myns1_DryIcePurposesResponse__DryIcePurposesResponse_LiteralSerializer;
    private static final QName ns1_SearchByShipperAndShipdateWithCount_SearchByShipperAndShipdateWithCount_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdateWithCount");
    private static final QName ns1_SearchByShipperAndShipdateWithCount_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdateWithCount");
    private CombinedSerializer myns1_SearchByShipperAndShipdateWithCount__SearchByShipperAndShipdateWithCount_LiteralSerializer;
    private static final QName ns1_SearchByShipperAndShipdateWithCount_SearchByShipperAndShipdateWithCountResponse_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdateWithCountResponse");
    private static final QName ns1_SearchByShipperAndShipdateWithCountResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipperAndShipdateWithCountResponse");
    private CombinedSerializer myns1_SearchByShipperAndShipdateWithCountResponse__SearchByShipperAndShipdateWithCountResponse_LiteralSerializer;
    private static final QName ns1_InstantiateWCF_InstantiateWCF_QNAME = new QName("http://PSI.Wcf", "InstantiateWCF");
    private static final QName ns1_InstantiateWCF_TYPE_QNAME = new QName("http://PSI.Wcf", "InstantiateWCF");
    private CombinedSerializer myns1_InstantiateWCF__InstantiateWCF_LiteralSerializer;
    private static final QName ns1_InstantiateWCF_InstantiateWCFResponse_QNAME = new QName("http://PSI.Wcf", "InstantiateWCFResponse");
    private static final QName ns1_InstantiateWCFResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "InstantiateWCFResponse");
    private CombinedSerializer myns1_InstantiateWCFResponse__InstantiateWCFResponse_LiteralSerializer;
    private static final QName ns1_GetServices_GetServices_QNAME = new QName("http://PSI.Wcf", "GetServices");
    private static final QName ns1_GetServices_TYPE_QNAME = new QName("http://PSI.Wcf", "GetServices");
    private CombinedSerializer myns1_GetServices__GetServices_LiteralSerializer;
    private static final QName ns1_GetServices_GetServicesResponse_QNAME = new QName("http://PSI.Wcf", "GetServicesResponse");
    private static final QName ns1_GetServicesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetServicesResponse");
    private CombinedSerializer myns1_GetServicesResponse__GetServicesResponse_LiteralSerializer;
    private static final QName ns1_ChangeShipperSymbol_ChangeShipperSymbol_QNAME = new QName("http://PSI.Wcf", "ChangeShipperSymbol");
    private static final QName ns1_ChangeShipperSymbol_TYPE_QNAME = new QName("http://PSI.Wcf", "ChangeShipperSymbol");
    private CombinedSerializer myns1_ChangeShipperSymbol__ChangeShipperSymbol_LiteralSerializer;
    private static final QName ns1_ChangeShipperSymbol_ChangeShipperSymbolResponse_QNAME = new QName("http://PSI.Wcf", "ChangeShipperSymbolResponse");
    private static final QName ns1_ChangeShipperSymbolResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ChangeShipperSymbolResponse");
    private CombinedSerializer myns1_ChangeShipperSymbolResponse__ChangeShipperSymbolResponse_LiteralSerializer;
    private static final QName ns1_SearchByTrackingNumberWithCount_SearchByTrackingNumberWithCount_QNAME = new QName("http://PSI.Wcf", "SearchByTrackingNumberWithCount");
    private static final QName ns1_SearchByTrackingNumberWithCount_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByTrackingNumberWithCount");
    private CombinedSerializer myns1_SearchByTrackingNumberWithCount__SearchByTrackingNumberWithCount_LiteralSerializer;
    private static final QName ns1_SearchByTrackingNumberWithCount_SearchByTrackingNumberWithCountResponse_QNAME = new QName("http://PSI.Wcf", "SearchByTrackingNumberWithCountResponse");
    private static final QName ns1_SearchByTrackingNumberWithCountResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByTrackingNumberWithCountResponse");
    private CombinedSerializer myns1_SearchByTrackingNumberWithCountResponse__SearchByTrackingNumberWithCountResponse_LiteralSerializer;
    private static final QName ns1_GetHistoryItemList_GetHistoryItemList_QNAME = new QName("http://PSI.Wcf", "GetHistoryItemList");
    private static final QName ns1_GetHistoryItemList_TYPE_QNAME = new QName("http://PSI.Wcf", "GetHistoryItemList");
    private CombinedSerializer myns1_GetHistoryItemList__GetHistoryItemList_LiteralSerializer;
    private static final QName ns1_GetHistoryItemList_GetHistoryItemListResponse_QNAME = new QName("http://PSI.Wcf", "GetHistoryItemListResponse");
    private static final QName ns1_GetHistoryItemListResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetHistoryItemListResponse");
    private CombinedSerializer myns1_GetHistoryItemListResponse__GetHistoryItemListResponse_LiteralSerializer;
    private static final QName ns1_AddPrinter_AddPrinter_QNAME = new QName("http://PSI.Wcf", "AddPrinter");
    private static final QName ns1_AddPrinter_TYPE_QNAME = new QName("http://PSI.Wcf", "AddPrinter");
    private CombinedSerializer myns1_AddPrinter__AddPrinter_LiteralSerializer;
    private static final QName ns1_AddPrinter_AddPrinterResponse_QNAME = new QName("http://PSI.Wcf", "AddPrinterResponse");
    private static final QName ns1_AddPrinterResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "AddPrinterResponse");
    private CombinedSerializer myns1_AddPrinterResponse__AddPrinterResponse_LiteralSerializer;
    private static final QName ns1_ExchangeMethods_ExchangeMethods_QNAME = new QName("http://PSI.Wcf", "ExchangeMethods");
    private static final QName ns1_ExchangeMethods_TYPE_QNAME = new QName("http://PSI.Wcf", "ExchangeMethods");
    private CombinedSerializer myns1_ExchangeMethods__ExchangeMethods_LiteralSerializer;
    private static final QName ns1_ExchangeMethods_ExchangeMethodsResponse_QNAME = new QName("http://PSI.Wcf", "ExchangeMethodsResponse");
    private static final QName ns1_ExchangeMethodsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ExchangeMethodsResponse");
    private CombinedSerializer myns1_ExchangeMethodsResponse__ExchangeMethodsResponse_LiteralSerializer;
    private static final QName ns1_HazMatRegulationSets_HazMatRegulationSets_QNAME = new QName("http://PSI.Wcf", "HazMatRegulationSets");
    private static final QName ns1_HazMatRegulationSets_TYPE_QNAME = new QName("http://PSI.Wcf", "HazMatRegulationSets");
    private CombinedSerializer myns1_HazMatRegulationSets__HazMatRegulationSets_LiteralSerializer;
    private static final QName ns1_HazMatRegulationSets_HazMatRegulationSetsResponse_QNAME = new QName("http://PSI.Wcf", "HazMatRegulationSetsResponse");
    private static final QName ns1_HazMatRegulationSetsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "HazMatRegulationSetsResponse");
    private CombinedSerializer myns1_HazMatRegulationSetsResponse__HazMatRegulationSetsResponse_LiteralSerializer;
    private static final QName ns1_CommercialInvoiceMethods_CommercialInvoiceMethods_QNAME = new QName("http://PSI.Wcf", "CommercialInvoiceMethods");
    private static final QName ns1_CommercialInvoiceMethods_TYPE_QNAME = new QName("http://PSI.Wcf", "CommercialInvoiceMethods");
    private CombinedSerializer myns1_CommercialInvoiceMethods__CommercialInvoiceMethods_LiteralSerializer;
    private static final QName ns1_CommercialInvoiceMethods_CommercialInvoiceMethodsResponse_QNAME = new QName("http://PSI.Wcf", "CommercialInvoiceMethodsResponse");
    private static final QName ns1_CommercialInvoiceMethodsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CommercialInvoiceMethodsResponse");
    private CombinedSerializer myns1_CommercialInvoiceMethodsResponse__CommercialInvoiceMethodsResponse_LiteralSerializer;
    private static final QName ns1_DryIceRegulationSets_DryIceRegulationSets_QNAME = new QName("http://PSI.Wcf", "DryIceRegulationSets");
    private static final QName ns1_DryIceRegulationSets_TYPE_QNAME = new QName("http://PSI.Wcf", "DryIceRegulationSets");
    private CombinedSerializer myns1_DryIceRegulationSets__DryIceRegulationSets_LiteralSerializer;
    private static final QName ns1_DryIceRegulationSets_DryIceRegulationSetsResponse_QNAME = new QName("http://PSI.Wcf", "DryIceRegulationSetsResponse");
    private static final QName ns1_DryIceRegulationSetsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "DryIceRegulationSetsResponse");
    private CombinedSerializer myns1_DryIceRegulationSetsResponse__DryIceRegulationSetsResponse_LiteralSerializer;
    private static final QName ns1_CloseOutModes_CloseOutModes_QNAME = new QName("http://PSI.Wcf", "CloseOutModes");
    private static final QName ns1_CloseOutModes_TYPE_QNAME = new QName("http://PSI.Wcf", "CloseOutModes");
    private CombinedSerializer myns1_CloseOutModes__CloseOutModes_LiteralSerializer;
    private static final QName ns1_CloseOutModes_CloseOutModesResponse_QNAME = new QName("http://PSI.Wcf", "CloseOutModesResponse");
    private static final QName ns1_CloseOutModesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CloseOutModesResponse");
    private CombinedSerializer myns1_CloseOutModesResponse__CloseOutModesResponse_LiteralSerializer;
    private static final QName ns1_DeletePrinter_DeletePrinter_QNAME = new QName("http://PSI.Wcf", "DeletePrinter");
    private static final QName ns1_DeletePrinter_TYPE_QNAME = new QName("http://PSI.Wcf", "DeletePrinter");
    private CombinedSerializer myns1_DeletePrinter__DeletePrinter_LiteralSerializer;
    private static final QName ns1_DeletePrinter_DeletePrinterResponse_QNAME = new QName("http://PSI.Wcf", "DeletePrinterResponse");
    private static final QName ns1_DeletePrinterResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "DeletePrinterResponse");
    private CombinedSerializer myns1_DeletePrinterResponse__DeletePrinterResponse_LiteralSerializer;
    private static final QName ns1_ModifyPackageList_ModifyPackageList_QNAME = new QName("http://PSI.Wcf", "ModifyPackageList");
    private static final QName ns1_ModifyPackageList_TYPE_QNAME = new QName("http://PSI.Wcf", "ModifyPackageList");
    private CombinedSerializer myns1_ModifyPackageList__ModifyPackageList_LiteralSerializer;
    private static final QName ns1_ModifyPackageList_ModifyPackageListResponse_QNAME = new QName("http://PSI.Wcf", "ModifyPackageListResponse");
    private static final QName ns1_ModifyPackageListResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ModifyPackageListResponse");
    private CombinedSerializer myns1_ModifyPackageListResponse__ModifyPackageListResponse_LiteralSerializer;
    private static final QName ns1_ShipOrder_ShipOrder_QNAME = new QName("http://PSI.Wcf", "ShipOrder");
    private static final QName ns1_ShipOrder_TYPE_QNAME = new QName("http://PSI.Wcf", "ShipOrder");
    private CombinedSerializer myns1_ShipOrder__ShipOrder_LiteralSerializer;
    private static final QName ns1_ShipOrder_ShipOrderResponse_QNAME = new QName("http://PSI.Wcf", "ShipOrderResponse");
    private static final QName ns1_ShipOrderResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ShipOrderResponse");
    private CombinedSerializer myns1_ShipOrderResponse__ShipOrderResponse_LiteralSerializer;
    private static final QName ns1_ReProcess_ReProcess_QNAME = new QName("http://PSI.Wcf", "ReProcess");
    private static final QName ns1_ReProcess_TYPE_QNAME = new QName("http://PSI.Wcf", "ReProcess");
    private CombinedSerializer myns1_ReProcess__ReProcess_LiteralSerializer;
    private static final QName ns1_ReProcess_ReProcessResponse_QNAME = new QName("http://PSI.Wcf", "ReProcessResponse");
    private static final QName ns1_ReProcessResponseType_TYPE_QNAME = new QName("http://PSI.Wcf", "ReProcessResponseType");
    private CombinedSerializer myns1_ReProcessResponseType__ReProcessResponseType_LiteralSerializer;
    private static final QName ns1_GetDocumentProfile_GetDocumentProfile_QNAME = new QName("http://PSI.Wcf", "GetDocumentProfile");
    private static final QName ns1_GetDocumentProfile_TYPE_QNAME = new QName("http://PSI.Wcf", "GetDocumentProfile");
    private CombinedSerializer myns1_GetDocumentProfile__GetDocumentProfile_LiteralSerializer;
    private static final QName ns1_GetDocumentProfile_GetDocumentProfileResponse_QNAME = new QName("http://PSI.Wcf", "GetDocumentProfileResponse");
    private static final QName ns1_GetDocumentProfileResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetDocumentProfileResponse");
    private CombinedSerializer myns1_GetDocumentProfileResponse__GetDocumentProfileResponse_LiteralSerializer;
    private static final QName ns1_PrintPositionDocumentXml_PrintPositionDocumentXml_QNAME = new QName("http://PSI.Wcf", "PrintPositionDocumentXml");
    private static final QName ns1_PrintPositionDocumentXml_TYPE_QNAME = new QName("http://PSI.Wcf", "PrintPositionDocumentXml");
    private CombinedSerializer myns1_PrintPositionDocumentXml__PrintPositionDocumentXml_LiteralSerializer;
    private static final QName ns1_PrintPositionDocumentXml_PrintPositionDocumentXmlResponse_QNAME = new QName("http://PSI.Wcf", "PrintPositionDocumentXmlResponse");
    private static final QName ns1_PrintPositionDocumentXmlResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "PrintPositionDocumentXmlResponse");
    private CombinedSerializer myns1_PrintPositionDocumentXmlResponse__PrintPositionDocumentXmlResponse_LiteralSerializer;
    private static final QName ns1_GetLanguages_GetLanguages_QNAME = new QName("http://PSI.Wcf", "GetLanguages");
    private static final QName ns1_GetLanguages_TYPE_QNAME = new QName("http://PSI.Wcf", "GetLanguages");
    private CombinedSerializer myns1_GetLanguages__GetLanguages_LiteralSerializer;
    private static final QName ns1_GetLanguages_GetLanguagesResponse_QNAME = new QName("http://PSI.Wcf", "GetLanguagesResponse");
    private static final QName ns1_GetLanguagesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetLanguagesResponse");
    private CombinedSerializer myns1_GetLanguagesResponse__GetLanguagesResponse_LiteralSerializer;
    private static final QName ns1_ChargesOnDocumentation_ChargesOnDocumentation_QNAME = new QName("http://PSI.Wcf", "ChargesOnDocumentation");
    private static final QName ns1_ChargesOnDocumentation_TYPE_QNAME = new QName("http://PSI.Wcf", "ChargesOnDocumentation");
    private CombinedSerializer myns1_ChargesOnDocumentation__ChargesOnDocumentation_LiteralSerializer;
    private static final QName ns1_ChargesOnDocumentation_ChargesOnDocumentationResponse_QNAME = new QName("http://PSI.Wcf", "ChargesOnDocumentationResponse");
    private static final QName ns1_ChargesOnDocumentationResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ChargesOnDocumentationResponse");
    private CombinedSerializer myns1_ChargesOnDocumentationResponse__ChargesOnDocumentationResponse_LiteralSerializer;
    private static final QName ns1_GetTransmitItemsByStatus_GetTransmitItemsByStatus_QNAME = new QName("http://PSI.Wcf", "GetTransmitItemsByStatus");
    private static final QName ns1_GetTransmitItemsByStatus_TYPE_QNAME = new QName("http://PSI.Wcf", "GetTransmitItemsByStatus");
    private CombinedSerializer myns1_GetTransmitItemsByStatus__GetTransmitItemsByStatus_LiteralSerializer;
    private static final QName ns1_GetTransmitItemsByStatus_GetTransmitItemsByStatusResponse_QNAME = new QName("http://PSI.Wcf", "GetTransmitItemsByStatusResponse");
    private static final QName ns1_GetTransmitItemsByStatusResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetTransmitItemsByStatusResponse");
    private CombinedSerializer myns1_GetTransmitItemsByStatusResponse__GetTransmitItemsByStatusResponse_LiteralSerializer;
    private static final QName ns1_DeliveryMethods_DeliveryMethods_QNAME = new QName("http://PSI.Wcf", "DeliveryMethods");
    private static final QName ns1_DeliveryMethods_TYPE_QNAME = new QName("http://PSI.Wcf", "DeliveryMethods");
    private CombinedSerializer myns1_DeliveryMethods__DeliveryMethods_LiteralSerializer;
    private static final QName ns1_DeliveryMethods_DeliveryMethodsResponse_QNAME = new QName("http://PSI.Wcf", "DeliveryMethodsResponse");
    private static final QName ns1_DeliveryMethodsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "DeliveryMethodsResponse");
    private CombinedSerializer myns1_DeliveryMethodsResponse__DeliveryMethodsResponse_LiteralSerializer;
    private static final QName ns1_VoidPackagesByGlobalMsnList_VoidPackagesByGlobalMsnList_QNAME = new QName("http://PSI.Wcf", "VoidPackagesByGlobalMsnList");
    private static final QName ns1_VoidPackagesByGlobalMsnList_TYPE_QNAME = new QName("http://PSI.Wcf", "VoidPackagesByGlobalMsnList");
    private CombinedSerializer myns1_VoidPackagesByGlobalMsnList__VoidPackagesByGlobalMsnList_LiteralSerializer;
    private static final QName ns1_VoidPackagesByGlobalMsnList_VoidPackagesByGlobalMsnListResponse_QNAME = new QName("http://PSI.Wcf", "VoidPackagesByGlobalMsnListResponse");
    private static final QName ns1_VoidPackagesByGlobalMsnListResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "VoidPackagesByGlobalMsnListResponse");
    private CombinedSerializer myns1_VoidPackagesByGlobalMsnListResponse__VoidPackagesByGlobalMsnListResponse_LiteralSerializer;
    private static final QName ns1_ShipBatchItem_ShipBatchItem_QNAME = new QName("http://PSI.Wcf", "ShipBatchItem");
    private static final QName ns1_ShipBatchItem_TYPE_QNAME = new QName("http://PSI.Wcf", "ShipBatchItem");
    private CombinedSerializer myns1_ShipBatchItem__ShipBatchItem_LiteralSerializer;
    private static final QName ns1_ShipBatchItem_ShipBatchItemResponse_QNAME = new QName("http://PSI.Wcf", "ShipBatchItemResponse");
    private static final QName ns1_ShipBatchItemResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ShipBatchItemResponse");
    private CombinedSerializer myns1_ShipBatchItemResponse__ShipBatchItemResponse_LiteralSerializer;
    private static final QName ns1_UpdatePrinter_UpdatePrinter_QNAME = new QName("http://PSI.Wcf", "UpdatePrinter");
    private static final QName ns1_UpdatePrinter_TYPE_QNAME = new QName("http://PSI.Wcf", "UpdatePrinter");
    private CombinedSerializer myns1_UpdatePrinter__UpdatePrinter_LiteralSerializer;
    private static final QName ns1_UpdatePrinter_UpdatePrinterResponse_QNAME = new QName("http://PSI.Wcf", "UpdatePrinterResponse");
    private static final QName ns1_UpdatePrinterResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "UpdatePrinterResponse");
    private CombinedSerializer myns1_UpdatePrinterResponse__UpdatePrinterResponse_LiteralSerializer;
    private static final QName ns1_SearchByGlobalMsn_SearchByGlobalMsn_QNAME = new QName("http://PSI.Wcf", "SearchByGlobalMsn");
    private static final QName ns1_SearchByGlobalMsn_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByGlobalMsn");
    private CombinedSerializer myns1_SearchByGlobalMsn__SearchByGlobalMsn_LiteralSerializer;
    private static final QName ns1_SearchByGlobalMsn_SearchByGlobalMsnResponse_QNAME = new QName("http://PSI.Wcf", "SearchByGlobalMsnResponse");
    private static final QName ns1_SearchByGlobalMsnResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByGlobalMsnResponse");
    private CombinedSerializer myns1_SearchByGlobalMsnResponse__SearchByGlobalMsnResponse_LiteralSerializer;
    private static final QName ns1_CSAdapter_Version_CSAdapter_Version_QNAME = new QName("http://PSI.Wcf", "CSAdapter_Version");
    private static final QName ns1_CSAdapter_Version_TYPE_QNAME = new QName("http://PSI.Wcf", "CSAdapter_Version");
    private CombinedSerializer myns1_CSAdapter_Version__CSAdapter_Version_LiteralSerializer;
    private static final QName ns1_CSAdapter_Version_CSAdapter_VersionResponse_QNAME = new QName("http://PSI.Wcf", "CSAdapter_VersionResponse");
    private static final QName ns1_CSAdapter_VersionResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CSAdapter_VersionResponse");
    private CombinedSerializer myns1_CSAdapter_VersionResponse__CSAdapter_VersionResponse_LiteralSerializer;
    private static final QName ns1_CODReturnMethods_CODReturnMethods_QNAME = new QName("http://PSI.Wcf", "CODReturnMethods");
    private static final QName ns1_CODReturnMethods_TYPE_QNAME = new QName("http://PSI.Wcf", "CODReturnMethods");
    private CombinedSerializer myns1_CODReturnMethods__CODReturnMethods_LiteralSerializer;
    private static final QName ns1_CODReturnMethods_CODReturnMethodsResponse_QNAME = new QName("http://PSI.Wcf", "CODReturnMethodsResponse");
    private static final QName ns1_CODReturnMethodsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CODReturnMethodsResponse");
    private CombinedSerializer myns1_CODReturnMethodsResponse__CODReturnMethodsResponse_LiteralSerializer;
    private static final QName ns1_ProcessBatchByRequest_ProcessBatchByRequest_QNAME = new QName("http://PSI.Wcf", "ProcessBatchByRequest");
    private static final QName ns1_ProcessBatchByRequest_TYPE_QNAME = new QName("http://PSI.Wcf", "ProcessBatchByRequest");
    private CombinedSerializer myns1_ProcessBatchByRequest__ProcessBatchByRequest_LiteralSerializer;
    private static final QName ns1_ProcessBatchByRequest_ProcessBatchByRequestResponse_QNAME = new QName("http://PSI.Wcf", "ProcessBatchByRequestResponse");
    private static final QName ns1_ProcessBatchByRequestResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ProcessBatchByRequestResponse");
    private CombinedSerializer myns1_ProcessBatchByRequestResponse__ProcessBatchByRequestResponse_LiteralSerializer;
    private static final QName ns1_HazMatCACategories_HazMatCACategories_QNAME = new QName("http://PSI.Wcf", "HazMatCACategories");
    private static final QName ns1_HazMatCACategories_TYPE_QNAME = new QName("http://PSI.Wcf", "HazMatCACategories");
    private CombinedSerializer myns1_HazMatCACategories__HazMatCACategories_LiteralSerializer;
    private static final QName ns1_HazMatCACategories_HazMatCACategoriesResponse_QNAME = new QName("http://PSI.Wcf", "HazMatCACategoriesResponse");
    private static final QName ns1_HazMatCACategoriesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "HazMatCACategoriesResponse");
    private CombinedSerializer myns1_HazMatCACategoriesResponse__HazMatCACategoriesResponse_LiteralSerializer;
    private static final QName ns1_GetNameAddressValidationCandidates_GetNameAddressValidationCandidates_QNAME = new QName("http://PSI.Wcf", "GetNameAddressValidationCandidates");
    private static final QName ns1_GetNameAddressValidationCandidates_TYPE_QNAME = new QName("http://PSI.Wcf", "GetNameAddressValidationCandidates");
    private CombinedSerializer myns1_GetNameAddressValidationCandidates__GetNameAddressValidationCandidates_LiteralSerializer;
    private static final QName ns1_GetNameAddressValidationCandidates_GetNameAddressValidationCandidatesResponse_QNAME = new QName("http://PSI.Wcf", "GetNameAddressValidationCandidatesResponse");
    private static final QName ns1_GetNameAddressValidationCandidatesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetNameAddressValidationCandidatesResponse");
    private CombinedSerializer myns1_GetNameAddressValidationCandidatesResponse__GetNameAddressValidationCandidatesResponse_LiteralSerializer;
    private static final QName ns1_GetCurrencies_GetCurrencies_QNAME = new QName("http://PSI.Wcf", "GetCurrencies");
    private static final QName ns1_GetCurrencies_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCurrencies");
    private CombinedSerializer myns1_GetCurrencies__GetCurrencies_LiteralSerializer;
    private static final QName ns1_GetCurrencies_GetCurrenciesResponse_QNAME = new QName("http://PSI.Wcf", "GetCurrenciesResponse");
    private static final QName ns1_GetCurrenciesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCurrenciesResponse");
    private CombinedSerializer myns1_GetCurrenciesResponse__GetCurrenciesResponse_LiteralSerializer;
    private static final QName ns1_GetTransmitItemsAvailableForDeletion_GetTransmitItemsAvailableForDeletion_QNAME = new QName("http://PSI.Wcf", "GetTransmitItemsAvailableForDeletion");
    private static final QName ns1_GetTransmitItemsAvailableForDeletion_TYPE_QNAME = new QName("http://PSI.Wcf", "GetTransmitItemsAvailableForDeletion");
    private CombinedSerializer myns1_GetTransmitItemsAvailableForDeletion__GetTransmitItemsAvailableForDeletion_LiteralSerializer;
    private static final QName ns1_GetTransmitItemsAvailableForDeletion_GetTransmitItemsAvailableForDeletionResponse_QNAME = new QName("http://PSI.Wcf", "GetTransmitItemsAvailableForDeletionResponse");
    private static final QName ns1_GetTransmitItemsAvailableForDeletionResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetTransmitItemsAvailableForDeletionResponse");
    private CombinedSerializer myns1_GetTransmitItemsAvailableForDeletionResponse__GetTransmitItemsAvailableForDeletionResponse_LiteralSerializer;
    private static final QName ns1_SearchByGlobalBundleId_SearchByGlobalBundleId_QNAME = new QName("http://PSI.Wcf", "SearchByGlobalBundleId");
    private static final QName ns1_SearchByGlobalBundleId_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByGlobalBundleId");
    private CombinedSerializer myns1_SearchByGlobalBundleId__SearchByGlobalBundleId_LiteralSerializer;
    private static final QName ns1_SearchByGlobalBundleId_SearchByGlobalBundleIdResponse_QNAME = new QName("http://PSI.Wcf", "SearchByGlobalBundleIdResponse");
    private static final QName ns1_SearchByGlobalBundleIdResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByGlobalBundleIdResponse");
    private CombinedSerializer myns1_SearchByGlobalBundleIdResponse__SearchByGlobalBundleIdResponse_LiteralSerializer;
    private static final QName ns1_GetAvailablePrinters_GetAvailablePrinters_QNAME = new QName("http://PSI.Wcf", "GetAvailablePrinters");
    private static final QName ns1_GetAvailablePrinters_TYPE_QNAME = new QName("http://PSI.Wcf", "GetAvailablePrinters");
    private CombinedSerializer myns1_GetAvailablePrinters__GetAvailablePrinters_LiteralSerializer;
    private static final QName ns1_GetAvailablePrinters_GetAvailablePrintersResponse_QNAME = new QName("http://PSI.Wcf", "GetAvailablePrintersResponse");
    private static final QName ns1_GetAvailablePrintersResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetAvailablePrintersResponse");
    private CombinedSerializer myns1_GetAvailablePrintersResponse__GetAvailablePrintersResponse_LiteralSerializer;
    private static final QName ns1_GetBatchShipmentErrors_GetBatchShipmentErrors_QNAME = new QName("http://PSI.Wcf", "GetBatchShipmentErrors");
    private static final QName ns1_GetBatchShipmentErrors_TYPE_QNAME = new QName("http://PSI.Wcf", "GetBatchShipmentErrors");
    private CombinedSerializer myns1_GetBatchShipmentErrors__GetBatchShipmentErrors_LiteralSerializer;
    private static final QName ns1_GetBatchShipmentErrors_GetBatchShipmentErrorsResponse_QNAME = new QName("http://PSI.Wcf", "GetBatchShipmentErrorsResponse");
    private static final QName ns1_GetBatchShipmentErrorsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetBatchShipmentErrorsResponse");
    private CombinedSerializer myns1_GetBatchShipmentErrorsResponse__GetBatchShipmentErrorsResponse_LiteralSerializer;
    private static final QName ns1_LoadBatchItem_LoadBatchItem_QNAME = new QName("http://PSI.Wcf", "LoadBatchItem");
    private static final QName ns1_LoadBatchItem_TYPE_QNAME = new QName("http://PSI.Wcf", "LoadBatchItem");
    private CombinedSerializer myns1_LoadBatchItem__LoadBatchItem_LiteralSerializer;
    private static final QName ns1_LoadBatchItem_LoadBatchItemResponse_QNAME = new QName("http://PSI.Wcf", "LoadBatchItemResponse");
    private static final QName ns1_LoadBatchItemResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "LoadBatchItemResponse");
    private CombinedSerializer myns1_LoadBatchItemResponse__LoadBatchItemResponse_LiteralSerializer;
    private static final QName ns1_StageBatch_StageBatch_QNAME = new QName("http://PSI.Wcf", "StageBatch");
    private static final QName ns1_StageBatch_TYPE_QNAME = new QName("http://PSI.Wcf", "StageBatch");
    private CombinedSerializer myns1_StageBatch__StageBatch_LiteralSerializer;
    private static final QName ns1_StageBatch_StageBatchResponse_QNAME = new QName("http://PSI.Wcf", "StageBatchResponse");
    private static final QName ns1_StageBatchResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "StageBatchResponse");
    private CombinedSerializer myns1_StageBatchResponse__StageBatchResponse_LiteralSerializer;
    private static final QName ns1_CopyPrinter_CopyPrinter_QNAME = new QName("http://PSI.Wcf", "CopyPrinter");
    private static final QName ns1_CopyPrinter_TYPE_QNAME = new QName("http://PSI.Wcf", "CopyPrinter");
    private CombinedSerializer myns1_CopyPrinter__CopyPrinter_LiteralSerializer;
    private static final QName ns1_CopyPrinter_CopyPrinterResponse_QNAME = new QName("http://PSI.Wcf", "CopyPrinterResponse");
    private static final QName ns1_CopyPrinterResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CopyPrinterResponse");
    private CombinedSerializer myns1_CopyPrinterResponse__CopyPrinterResponse_LiteralSerializer;
    private static final QName ns1_DeleteTransmitItems_DeleteTransmitItems_QNAME = new QName("http://PSI.Wcf", "DeleteTransmitItems");
    private static final QName ns1_DeleteTransmitItems_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteTransmitItems");
    private CombinedSerializer myns1_DeleteTransmitItems__DeleteTransmitItems_LiteralSerializer;
    private static final QName ns1_DeleteTransmitItems_DeleteTransmitItemsResponse_QNAME = new QName("http://PSI.Wcf", "DeleteTransmitItemsResponse");
    private static final QName ns1_DeleteTransmitItemsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteTransmitItemsResponse");
    private CombinedSerializer myns1_DeleteTransmitItemsResponse__DeleteTransmitItemsResponse_LiteralSerializer;
    private static final QName ns1_NAFTARVCMethods_NAFTARVCMethods_QNAME = new QName("http://PSI.Wcf", "NAFTARVCMethods");
    private static final QName ns1_NAFTARVCMethods_TYPE_QNAME = new QName("http://PSI.Wcf", "NAFTARVCMethods");
    private CombinedSerializer myns1_NAFTARVCMethods__NAFTARVCMethods_LiteralSerializer;
    private static final QName ns1_NAFTARVCMethods_NAFTARVCMethodsResponse_QNAME = new QName("http://PSI.Wcf", "NAFTARVCMethodsResponse");
    private static final QName ns1_NAFTARVCMethodsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "NAFTARVCMethodsResponse");
    private CombinedSerializer myns1_NAFTARVCMethodsResponse__NAFTARVCMethodsResponse_LiteralSerializer;
    private static final QName ns1_LoadBatch_LoadBatch_QNAME = new QName("http://PSI.Wcf", "LoadBatch");
    private static final QName ns1_LoadBatch_TYPE_QNAME = new QName("http://PSI.Wcf", "LoadBatch");
    private CombinedSerializer myns1_LoadBatch__LoadBatch_LiteralSerializer;
    private static final QName ns1_LoadBatch_LoadBatchResponse_QNAME = new QName("http://PSI.Wcf", "LoadBatchResponse");
    private static final QName ns1_LoadBatchResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "LoadBatchResponse");
    private CombinedSerializer myns1_LoadBatchResponse__LoadBatchResponse_LiteralSerializer;
    private static final QName ns1_SearchByConsigneeReference_SearchByConsigneeReference_QNAME = new QName("http://PSI.Wcf", "SearchByConsigneeReference");
    private static final QName ns1_SearchByConsigneeReference_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByConsigneeReference");
    private CombinedSerializer myns1_SearchByConsigneeReference__SearchByConsigneeReference_LiteralSerializer;
    private static final QName ns1_SearchByConsigneeReference_SearchByConsigneeReferenceResponse_QNAME = new QName("http://PSI.Wcf", "SearchByConsigneeReferenceResponse");
    private static final QName ns1_SearchByConsigneeReferenceResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByConsigneeReferenceResponse");
    private CombinedSerializer myns1_SearchByConsigneeReferenceResponse__SearchByConsigneeReferenceResponse_LiteralSerializer;
    private static final QName ns1_GetNameAddressValidationCandidatesWithParams_GetNameAddressValidationCandidatesWithParams_QNAME = new QName("http://PSI.Wcf", "GetNameAddressValidationCandidatesWithParams");
    private static final QName ns1_GetNameAddressValidationCandidatesWithParams_TYPE_QNAME = new QName("http://PSI.Wcf", "GetNameAddressValidationCandidatesWithParams");
    private CombinedSerializer myns1_GetNameAddressValidationCandidatesWithParams__GetNameAddressValidationCandidatesWithParams_LiteralSerializer;
    private static final QName ns1_GetNameAddressValidationCandidatesWithParams_GetNameAddressValidationCandidatesWithParamsResponse_QNAME = new QName("http://PSI.Wcf", "GetNameAddressValidationCandidatesWithParamsResponse");
    private static final QName ns1_GetNameAddressValidationCandidatesWithParamsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetNameAddressValidationCandidatesWithParamsResponse");
    private CombinedSerializer myns1_GetNameAddressValidationCandidatesWithParamsResponse__GetNameAddressValidationCandidatesWithParamsResponse_LiteralSerializer;
    private static final QName ns1_GetCarriersbyShippers_GetCarriersbyShippers_QNAME = new QName("http://PSI.Wcf", "GetCarriersbyShippers");
    private static final QName ns1_GetCarriersbyShippers_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCarriersbyShippers");
    private CombinedSerializer myns1_GetCarriersbyShippers__GetCarriersbyShippers_LiteralSerializer;
    private static final QName ns1_GetCarriersbyShippers_GetCarriersbyShippersResponse_QNAME = new QName("http://PSI.Wcf", "GetCarriersbyShippersResponse");
    private static final QName ns1_GetCarriersbyShippersResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCarriersbyShippersResponse");
    private CombinedSerializer myns1_GetCarriersbyShippersResponse__GetCarriersbyShippersResponse_LiteralSerializer;
    private static final QName ns1_GetGroupDocuments_GetGroupDocuments_QNAME = new QName("http://PSI.Wcf", "GetGroupDocuments");
    private static final QName ns1_GetGroupDocuments_TYPE_QNAME = new QName("http://PSI.Wcf", "GetGroupDocuments");
    private CombinedSerializer myns1_GetGroupDocuments__GetGroupDocuments_LiteralSerializer;
    private static final QName ns1_GetGroupDocuments_GetGroupDocumentsResponse_QNAME = new QName("http://PSI.Wcf", "GetGroupDocumentsResponse");
    private static final QName ns1_GetGroupDocumentsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetGroupDocumentsResponse");
    private CombinedSerializer myns1_GetGroupDocumentsResponse__GetGroupDocumentsResponse_LiteralSerializer;
    private static final QName ns1_Business_Object_Version_Business_Object_Version_QNAME = new QName("http://PSI.Wcf", "Business_Object_Version");
    private static final QName ns1_Business_Object_Version_TYPE_QNAME = new QName("http://PSI.Wcf", "Business_Object_Version");
    private CombinedSerializer myns1_Business_Object_Version__Business_Object_Version_LiteralSerializer;
    private static final QName ns1_Business_Object_Version_Business_Object_VersionResponse_QNAME = new QName("http://PSI.Wcf", "Business_Object_VersionResponse");
    private static final QName ns1_Business_Object_VersionResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "Business_Object_VersionResponse");
    private CombinedSerializer myns1_Business_Object_VersionResponse__Business_Object_VersionResponse_LiteralSerializer;
    private static final QName ns1_GetCarriers_GetCarriers_QNAME = new QName("http://PSI.Wcf", "GetCarriers");
    private static final QName ns1_GetCarriers_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCarriers");
    private CombinedSerializer myns1_GetCarriers__GetCarriers_LiteralSerializer;
    private static final QName ns1_GetCarriers_GetCarriersResponse_QNAME = new QName("http://PSI.Wcf", "GetCarriersResponse");
    private static final QName ns1_GetCarriersResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCarriersResponse");
    private CombinedSerializer myns1_GetCarriersResponse__GetCarriersResponse_LiteralSerializer;
    private static final QName ns1_SetCloseOutMode_SetCloseOutMode_QNAME = new QName("http://PSI.Wcf", "SetCloseOutMode");
    private static final QName ns1_SetCloseOutMode_TYPE_QNAME = new QName("http://PSI.Wcf", "SetCloseOutMode");
    private CombinedSerializer myns1_SetCloseOutMode__SetCloseOutMode_LiteralSerializer;
    private static final QName ns1_SetCloseOutMode_SetCloseOutModeResponse_QNAME = new QName("http://PSI.Wcf", "SetCloseOutModeResponse");
    private static final QName ns1_SetCloseOutModeResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SetCloseOutModeResponse");
    private CombinedSerializer myns1_SetCloseOutModeResponse__SetCloseOutModeResponse_LiteralSerializer;
    private static final QName ns1_ReturnAddressMethods_ReturnAddressMethods_QNAME = new QName("http://PSI.Wcf", "ReturnAddressMethods");
    private static final QName ns1_ReturnAddressMethods_TYPE_QNAME = new QName("http://PSI.Wcf", "ReturnAddressMethods");
    private CombinedSerializer myns1_ReturnAddressMethods__ReturnAddressMethods_LiteralSerializer;
    private static final QName ns1_ReturnAddressMethods_ReturnAddressMethodsResponse_QNAME = new QName("http://PSI.Wcf", "ReturnAddressMethodsResponse");
    private static final QName ns1_ReturnAddressMethodsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ReturnAddressMethodsResponse");
    private CombinedSerializer myns1_ReturnAddressMethodsResponse__ReturnAddressMethodsResponse_LiteralSerializer;
    private static final QName ns1_GetGroupingTypes_GetGroupingTypes_QNAME = new QName("http://PSI.Wcf", "GetGroupingTypes");
    private static final QName ns1_GetGroupingTypes_TYPE_QNAME = new QName("http://PSI.Wcf", "GetGroupingTypes");
    private CombinedSerializer myns1_GetGroupingTypes__GetGroupingTypes_LiteralSerializer;
    private static final QName ns1_GetGroupingTypes_GetGroupingTypesResponse_QNAME = new QName("http://PSI.Wcf", "GetGroupingTypesResponse");
    private static final QName ns1_GetGroupingTypesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetGroupingTypesResponse");
    private CombinedSerializer myns1_GetGroupingTypesResponse__GetGroupingTypesResponse_LiteralSerializer;
    private static final QName ns1_SearchByShipperReference_SearchByShipperReference_QNAME = new QName("http://PSI.Wcf", "SearchByShipperReference");
    private static final QName ns1_SearchByShipperReference_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipperReference");
    private CombinedSerializer myns1_SearchByShipperReference__SearchByShipperReference_LiteralSerializer;
    private static final QName ns1_SearchByShipperReference_SearchByShipperReferenceResponse_QNAME = new QName("http://PSI.Wcf", "SearchByShipperReferenceResponse");
    private static final QName ns1_SearchByShipperReferenceResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByShipperReferenceResponse");
    private CombinedSerializer myns1_SearchByShipperReferenceResponse__SearchByShipperReferenceResponse_LiteralSerializer;
    private static final QName ns1_ValidateEntitlements_ValidateEntitlements_QNAME = new QName("http://PSI.Wcf", "ValidateEntitlements");
    private static final QName ns1_ValidateEntitlements_TYPE_QNAME = new QName("http://PSI.Wcf", "ValidateEntitlements");
    private CombinedSerializer myns1_ValidateEntitlements__ValidateEntitlements_LiteralSerializer;
    private static final QName ns1_ValidateEntitlements_ValidateEntitlementsResponse_QNAME = new QName("http://PSI.Wcf", "ValidateEntitlementsResponse");
    private static final QName ns1_ValidateEntitlementsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ValidateEntitlementsResponse");
    private CombinedSerializer myns1_ValidateEntitlementsResponse__ValidateEntitlementsResponse_LiteralSerializer;
    private static final QName ns1_OpenGroup_OpenGroup_QNAME = new QName("http://PSI.Wcf", "OpenGroup");
    private static final QName ns1_OpenGroup_TYPE_QNAME = new QName("http://PSI.Wcf", "OpenGroup");
    private CombinedSerializer myns1_OpenGroup__OpenGroup_LiteralSerializer;
    private static final QName ns1_OpenGroup_OpenGroupResponse_QNAME = new QName("http://PSI.Wcf", "OpenGroupResponse");
    private static final QName ns1_OpenGroupResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "OpenGroupResponse");
    private CombinedSerializer myns1_OpenGroupResponse__OpenGroupResponse_LiteralSerializer;
    private static final QName ns1_NAFTAPreferenceCriterion_NAFTAPreferenceCriterion_QNAME = new QName("http://PSI.Wcf", "NAFTAPreferenceCriterion");
    private static final QName ns1_NAFTAPreferenceCriterion_TYPE_QNAME = new QName("http://PSI.Wcf", "NAFTAPreferenceCriterion");
    private CombinedSerializer myns1_NAFTAPreferenceCriterion__NAFTAPreferenceCriterion_LiteralSerializer;
    private static final QName ns1_NAFTAPreferenceCriterion_NAFTAPreferenceCriterionResponse_QNAME = new QName("http://PSI.Wcf", "NAFTAPreferenceCriterionResponse");
    private static final QName ns1_NAFTAPreferenceCriterionResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "NAFTAPreferenceCriterionResponse");
    private CombinedSerializer myns1_NAFTAPreferenceCriterionResponse__NAFTAPreferenceCriterionResponse_LiteralSerializer;
    private static final QName ns1_TransmitItem_TransmitItem_QNAME = new QName("http://PSI.Wcf", "TransmitItem");
    private static final QName ns1_TransmitItemType_TYPE_QNAME = new QName("http://PSI.Wcf", "TransmitItemType");
    private CombinedSerializer myns1_TransmitItemType__TransmitItemType_LiteralSerializer;
    private static final QName ns1_TransmitItem_TransmitItemResponse_QNAME = new QName("http://PSI.Wcf", "TransmitItemResponse");
    private static final QName ns1_TransmitItemResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "TransmitItemResponse");
    private CombinedSerializer myns1_TransmitItemResponse__TransmitItemResponse_LiteralSerializer;
    private static final QName ns1_SearchByFilters_SearchByFilters_QNAME = new QName("http://PSI.Wcf", "SearchByFilters");
    private static final QName ns1_SearchByFilters_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByFilters");
    private CombinedSerializer myns1_SearchByFilters__SearchByFilters_LiteralSerializer;
    private static final QName ns1_SearchByFilters_SearchByFiltersResponse_QNAME = new QName("http://PSI.Wcf", "SearchByFiltersResponse");
    private static final QName ns1_SearchByFiltersResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "SearchByFiltersResponse");
    private CombinedSerializer myns1_SearchByFiltersResponse__SearchByFiltersResponse_LiteralSerializer;
    private static final QName ns1_DeleteDocumentProfile_DeleteDocumentProfile_QNAME = new QName("http://PSI.Wcf", "DeleteDocumentProfile");
    private static final QName ns1_DeleteDocumentProfile_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteDocumentProfile");
    private CombinedSerializer myns1_DeleteDocumentProfile__DeleteDocumentProfile_LiteralSerializer;
    private static final QName ns1_DeleteDocumentProfile_DeleteDocumentProfileResponse_QNAME = new QName("http://PSI.Wcf", "DeleteDocumentProfileResponse");
    private static final QName ns1_DeleteDocumentProfileResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteDocumentProfileResponse");
    private CombinedSerializer myns1_DeleteDocumentProfileResponse__DeleteDocumentProfileResponse_LiteralSerializer;
    private static final QName ns1_GetStagedBatches_GetStagedBatches_QNAME = new QName("http://PSI.Wcf", "GetStagedBatches");
    private static final QName ns1_GetStagedBatches_TYPE_QNAME = new QName("http://PSI.Wcf", "GetStagedBatches");
    private CombinedSerializer myns1_GetStagedBatches__GetStagedBatches_LiteralSerializer;
    private static final QName ns1_GetStagedBatches_GetStagedBatchesResponse_QNAME = new QName("http://PSI.Wcf", "GetStagedBatchesResponse");
    private static final QName ns1_GetStagedBatchesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetStagedBatchesResponse");
    private CombinedSerializer myns1_GetStagedBatchesResponse__GetStagedBatchesResponse_LiteralSerializer;
    private static final QName ns1_GetGroups_GetGroups_QNAME = new QName("http://PSI.Wcf", "GetGroups");
    private static final QName ns1_GetGroups_TYPE_QNAME = new QName("http://PSI.Wcf", "GetGroups");
    private CombinedSerializer myns1_GetGroups__GetGroups_LiteralSerializer;
    private static final QName ns1_GetGroups_GetGroupsResponse_QNAME = new QName("http://PSI.Wcf", "GetGroupsResponse");
    private static final QName ns1_GetGroupsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetGroupsResponse");
    private CombinedSerializer myns1_GetGroupsResponse__GetGroupsResponse_LiteralSerializer;
    private static final QName ns1_GetBatchCount_GetBatchCount_QNAME = new QName("http://PSI.Wcf", "GetBatchCount");
    private static final QName ns1_GetBatchCount_TYPE_QNAME = new QName("http://PSI.Wcf", "GetBatchCount");
    private CombinedSerializer myns1_GetBatchCount__GetBatchCount_LiteralSerializer;
    private static final QName ns1_GetBatchCount_GetBatchCountResponse_QNAME = new QName("http://PSI.Wcf", "GetBatchCountResponse");
    private static final QName ns1_GetBatchCountResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetBatchCountResponse");
    private CombinedSerializer myns1_GetBatchCountResponse__GetBatchCountResponse_LiteralSerializer;
    private static final QName ns1_GetHolidays_GetHolidays_QNAME = new QName("http://PSI.Wcf", "GetHolidays");
    private static final QName ns1_GetHolidays_TYPE_QNAME = new QName("http://PSI.Wcf", "GetHolidays");
    private CombinedSerializer myns1_GetHolidays__GetHolidays_LiteralSerializer;
    private static final QName ns1_GetHolidays_GetHolidaysResponse_QNAME = new QName("http://PSI.Wcf", "GetHolidaysResponse");
    private static final QName ns1_GetHolidaysResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetHolidaysResponse");
    private CombinedSerializer myns1_GetHolidaysResponse__GetHolidaysResponse_LiteralSerializer;
    private static final QName ns1_ManagementLayer_Version_ManagementLayer_Version_QNAME = new QName("http://PSI.Wcf", "ManagementLayer_Version");
    private static final QName ns1_ManagementLayer_Version_TYPE_QNAME = new QName("http://PSI.Wcf", "ManagementLayer_Version");
    private CombinedSerializer myns1_ManagementLayer_Version__ManagementLayer_Version_LiteralSerializer;
    private static final QName ns1_ManagementLayer_Version_ManagementLayer_VersionResponse_QNAME = new QName("http://PSI.Wcf", "ManagementLayer_VersionResponse");
    private static final QName ns1_ManagementLayer_VersionResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ManagementLayer_VersionResponse");
    private CombinedSerializer myns1_ManagementLayer_VersionResponse__ManagementLayer_VersionResponse_LiteralSerializer;
    private static final QName ns1_AreTransmitItemsAvailableForDeletion_AreTransmitItemsAvailableForDeletion_QNAME = new QName("http://PSI.Wcf", "AreTransmitItemsAvailableForDeletion");
    private static final QName ns1_AreTransmitItemsAvailableForDeletion_TYPE_QNAME = new QName("http://PSI.Wcf", "AreTransmitItemsAvailableForDeletion");
    private CombinedSerializer myns1_AreTransmitItemsAvailableForDeletion__AreTransmitItemsAvailableForDeletion_LiteralSerializer;
    private static final QName ns1_AreTransmitItemsAvailableForDeletion_AreTransmitItemsAvailableForDeletionResponse_QNAME = new QName("http://PSI.Wcf", "AreTransmitItemsAvailableForDeletionResponse");
    private static final QName ns1_AreTransmitItemsAvailableForDeletionResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "AreTransmitItemsAvailableForDeletionResponse");
    private CombinedSerializer myns1_AreTransmitItemsAvailableForDeletionResponse__AreTransmitItemsAvailableForDeletionResponse_LiteralSerializer;
    private static final QName ns1_CopyDocumentProfile_CopyDocumentProfile_QNAME = new QName("http://PSI.Wcf", "CopyDocumentProfile");
    private static final QName ns1_CopyDocumentProfile_TYPE_QNAME = new QName("http://PSI.Wcf", "CopyDocumentProfile");
    private CombinedSerializer myns1_CopyDocumentProfile__CopyDocumentProfile_LiteralSerializer;
    private static final QName ns1_CopyDocumentProfile_CopyDocumentProfileResponse_QNAME = new QName("http://PSI.Wcf", "CopyDocumentProfileResponse");
    private static final QName ns1_CopyDocumentProfileResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CopyDocumentProfileResponse");
    private CombinedSerializer myns1_CopyDocumentProfileResponse__CopyDocumentProfileResponse_LiteralSerializer;
    private static final QName ns1_Rate_Rate_QNAME = new QName("http://PSI.Wcf", "Rate");
    private static final QName ns1_Rate_TYPE_QNAME = new QName("http://PSI.Wcf", "Rate");
    private CombinedSerializer myns1_Rate__Rate_LiteralSerializer;
    private static final QName ns1_Rate_RateResponse_QNAME = new QName("http://PSI.Wcf", "RateResponse");
    private static final QName ns1_RateResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "RateResponse");
    private CombinedSerializer myns1_RateResponse__RateResponse_LiteralSerializer;
    private static final QName ns1_GetDocumentFormats_GetDocumentFormats_QNAME = new QName("http://PSI.Wcf", "GetDocumentFormats");
    private static final QName ns1_GetDocumentFormats_TYPE_QNAME = new QName("http://PSI.Wcf", "GetDocumentFormats");
    private CombinedSerializer myns1_GetDocumentFormats__GetDocumentFormats_LiteralSerializer;
    private static final QName ns1_GetDocumentFormats_GetDocumentFormatsResponse_QNAME = new QName("http://PSI.Wcf", "GetDocumentFormatsResponse");
    private static final QName ns1_GetDocumentFormatsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetDocumentFormatsResponse");
    private CombinedSerializer myns1_GetDocumentFormatsResponse__GetDocumentFormatsResponse_LiteralSerializer;
    private static final QName ns1_GetCloseOutMode_GetCloseOutMode_QNAME = new QName("http://PSI.Wcf", "GetCloseOutMode");
    private static final QName ns1_GetCloseOutMode_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCloseOutMode");
    private CombinedSerializer myns1_GetCloseOutMode__GetCloseOutMode_LiteralSerializer;
    private static final QName ns1_GetCloseOutMode_GetCloseOutModeResponse_QNAME = new QName("http://PSI.Wcf", "GetCloseOutModeResponse");
    private static final QName ns1_GetCloseOutModeResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetCloseOutModeResponse");
    private CombinedSerializer myns1_GetCloseOutModeResponse__GetCloseOutModeResponse_LiteralSerializer;
    private static final QName ns1_RateServices_RateServices_QNAME = new QName("http://PSI.Wcf", "RateServices");
    private static final QName ns1_RateServices_TYPE_QNAME = new QName("http://PSI.Wcf", "RateServices");
    private CombinedSerializer myns1_RateServices__RateServices_LiteralSerializer;
    private static final QName ns1_RateServices_RateServicesResponse_QNAME = new QName("http://PSI.Wcf", "RateServicesResponse");
    private static final QName ns1_RateServicesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "RateServicesResponse");
    private CombinedSerializer myns1_RateServicesResponse__RateServicesResponse_LiteralSerializer;
    private static final QName ns1_PrintBatch_PrintBatch_QNAME = new QName("http://PSI.Wcf", "PrintBatch");
    private static final QName ns1_PrintBatch_TYPE_QNAME = new QName("http://PSI.Wcf", "PrintBatch");
    private CombinedSerializer myns1_PrintBatch__PrintBatch_LiteralSerializer;
    private static final QName ns1_PrintBatch_PrintBatchResponse_QNAME = new QName("http://PSI.Wcf", "PrintBatchResponse");
    private static final QName ns1_PrintBatchResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "PrintBatchResponse");
    private CombinedSerializer myns1_PrintBatchResponse__PrintBatchResponse_LiteralSerializer;
    private static final QName ns1_GetGroupings_GetGroupings_QNAME = new QName("http://PSI.Wcf", "GetGroupings");
    private static final QName ns1_GetGroupings_TYPE_QNAME = new QName("http://PSI.Wcf", "GetGroupings");
    private CombinedSerializer myns1_GetGroupings__GetGroupings_LiteralSerializer;
    private static final QName ns1_GetGroupings_GetGroupingsResponse_QNAME = new QName("http://PSI.Wcf", "GetGroupingsResponse");
    private static final QName ns1_GetGroupingsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetGroupingsResponse");
    private CombinedSerializer myns1_GetGroupingsResponse__GetGroupingsResponse_LiteralSerializer;
    private static final QName ns1_AlcoholPackaging_AlcoholPackaging_QNAME = new QName("http://PSI.Wcf", "AlcoholPackaging");
    private static final QName ns1_AlcoholPackaging_TYPE_QNAME = new QName("http://PSI.Wcf", "AlcoholPackaging");
    private CombinedSerializer myns1_AlcoholPackaging__AlcoholPackaging_LiteralSerializer;
    private static final QName ns1_AlcoholPackaging_AlcoholPackagingResponse_QNAME = new QName("http://PSI.Wcf", "AlcoholPackagingResponse");
    private static final QName ns1_AlcoholPackagingResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "AlcoholPackagingResponse");
    private CombinedSerializer myns1_AlcoholPackagingResponse__AlcoholPackagingResponse_LiteralSerializer;
    private static final QName ns1_DeleteHistoryItem_DeleteHistoryItem_QNAME = new QName("http://PSI.Wcf", "DeleteHistoryItem");
    private static final QName ns1_DeleteHistoryItem_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteHistoryItem");
    private CombinedSerializer myns1_DeleteHistoryItem__DeleteHistoryItem_LiteralSerializer;
    private static final QName ns1_DeleteHistoryItem_DeleteHistoryItemResponse_QNAME = new QName("http://PSI.Wcf", "DeleteHistoryItemResponse");
    private static final QName ns1_DeleteHistoryItemResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "DeleteHistoryItemResponse");
    private CombinedSerializer myns1_DeleteHistoryItemResponse__DeleteHistoryItemResponse_LiteralSerializer;
    private static final QName ns1_RemoveBatchItem_RemoveBatchItem_QNAME = new QName("http://PSI.Wcf", "RemoveBatchItem");
    private static final QName ns1_RemoveBatchItem_TYPE_QNAME = new QName("http://PSI.Wcf", "RemoveBatchItem");
    private CombinedSerializer myns1_RemoveBatchItem__RemoveBatchItem_LiteralSerializer;
    private static final QName ns1_RemoveBatchItem_RemoveBatchItemResponse_QNAME = new QName("http://PSI.Wcf", "RemoveBatchItemResponse");
    private static final QName ns1_RemoveBatchItemResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "RemoveBatchItemResponse");
    private CombinedSerializer myns1_RemoveBatchItemResponse__RemoveBatchItemResponse_LiteralSerializer;
    private static final QName ns1_Validate_Validate_QNAME = new QName("http://PSI.Wcf", "Validate");
    private static final QName ns1_Validate_TYPE_QNAME = new QName("http://PSI.Wcf", "Validate");
    private CombinedSerializer myns1_Validate__Validate_LiteralSerializer;
    private static final QName ns1_Validate_ValidateResponse_QNAME = new QName("http://PSI.Wcf", "ValidateResponse");
    private static final QName ns1_ValidateResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "ValidateResponse");
    private CombinedSerializer myns1_ValidateResponse__ValidateResponse_LiteralSerializer;
    private static final QName ns1_HazmatPhysicalForm_HazmatPhysicalForm_QNAME = new QName("http://PSI.Wcf", "HazmatPhysicalForm");
    private static final QName ns1_HazmatPhysicalForm_TYPE_QNAME = new QName("http://PSI.Wcf", "HazmatPhysicalForm");
    private CombinedSerializer myns1_HazmatPhysicalForm__HazmatPhysicalForm_LiteralSerializer;
    private static final QName ns1_HazmatPhysicalForm_HazmatPhysicalFormResponse_QNAME = new QName("http://PSI.Wcf", "HazmatPhysicalFormResponse");
    private static final QName ns1_HazmatPhysicalFormResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "HazmatPhysicalFormResponse");
    private CombinedSerializer myns1_HazmatPhysicalFormResponse__HazmatPhysicalFormResponse_LiteralSerializer;
    private static final QName ns1_CloseOutBySymbols_CloseOutBySymbols_QNAME = new QName("http://PSI.Wcf", "CloseOutBySymbols");
    private static final QName ns1_CloseOutBySymbols_TYPE_QNAME = new QName("http://PSI.Wcf", "CloseOutBySymbols");
    private CombinedSerializer myns1_CloseOutBySymbols__CloseOutBySymbols_LiteralSerializer;
    private static final QName ns1_CloseOutBySymbols_CloseOutBySymbolsResponse_QNAME = new QName("http://PSI.Wcf", "CloseOutBySymbolsResponse");
    private static final QName ns1_CloseOutBySymbolsResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CloseOutBySymbolsResponse");
    private CombinedSerializer myns1_CloseOutBySymbolsResponse__CloseOutBySymbolsResponse_LiteralSerializer;
    private static final QName ns1_HazmatRadioactiveException_HazmatRadioactiveException_QNAME = new QName("http://PSI.Wcf", "HazmatRadioactiveException");
    private static final QName ns1_HazmatRadioactiveException_TYPE_QNAME = new QName("http://PSI.Wcf", "HazmatRadioactiveException");
    private CombinedSerializer myns1_HazmatRadioactiveException__HazmatRadioactiveException_LiteralSerializer;
    private static final QName ns1_HazmatRadioactiveException_HazmatRadioactiveExceptionResponse_QNAME = new QName("http://PSI.Wcf", "HazmatRadioactiveExceptionResponse");
    private static final QName ns1_HazmatRadioactiveExceptionResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "HazmatRadioactiveExceptionResponse");
    private CombinedSerializer myns1_HazmatRadioactiveExceptionResponse__HazmatRadioactiveExceptionResponse_LiteralSerializer;
    private static final QName ns1_CloseGroupAndPrint_CloseGroupAndPrint_QNAME = new QName("http://PSI.Wcf", "CloseGroupAndPrint");
    private static final QName ns1_CloseGroupAndPrint_TYPE_QNAME = new QName("http://PSI.Wcf", "CloseGroupAndPrint");
    private CombinedSerializer myns1_CloseGroupAndPrint__CloseGroupAndPrint_LiteralSerializer;
    private static final QName ns1_CloseGroupAndPrint_CloseGroupAndPrintResponse_QNAME = new QName("http://PSI.Wcf", "CloseGroupAndPrintResponse");
    private static final QName ns1_CloseGroupAndPrintResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "CloseGroupAndPrintResponse");
    private CombinedSerializer myns1_CloseGroupAndPrintResponse__CloseGroupAndPrintResponse_LiteralSerializer;
    private static final QName ns1_GetPaymentTypes_GetPaymentTypes_QNAME = new QName("http://PSI.Wcf", "GetPaymentTypes");
    private static final QName ns1_GetPaymentTypes_TYPE_QNAME = new QName("http://PSI.Wcf", "GetPaymentTypes");
    private CombinedSerializer myns1_GetPaymentTypes__GetPaymentTypes_LiteralSerializer;
    private static final QName ns1_GetPaymentTypes_GetPaymentTypesResponse_QNAME = new QName("http://PSI.Wcf", "GetPaymentTypesResponse");
    private static final QName ns1_GetPaymentTypesResponse_TYPE_QNAME = new QName("http://PSI.Wcf", "GetPaymentTypesResponse");
    private CombinedSerializer myns1_GetPaymentTypesResponse__GetPaymentTypesResponse_LiteralSerializer;
    private static final String[] myNamespace_declarations =
                                        new String[] {
                                            "ns0", "http://PSI.Wcf"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
    
}
