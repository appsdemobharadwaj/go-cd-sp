// This source file is generated by Oracle tools and is subject to change
// It is a utility client for invoking the operations of the Web service port.
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.shipexec.proxy;

import oracle.webservices.transport.ClientTransport;
import oracle.webservices.OracleStub;
import javax.xml.rpc.ServiceFactory;
import javax.xml.rpc.Stub;

public class WcfShipClient {
    private com.aasc.erp.carrier.shipexec.proxy.IwcfShip _port;
    
    public WcfShipClient() throws Exception {
        ServiceFactory factory = ServiceFactory.newInstance();
        _port = ((com.aasc.erp.carrier.shipexec.proxy.WcfSoxContract)factory.loadService(com.aasc.erp.carrier.shipexec.proxy.WcfSoxContract.class)).getWcfShip();
    }
    
    /**
     * @param args
     */
    public static void main(String[] args) {
        try {
            com.aasc.erp.carrier.shipexec.proxy.WcfShipClient myPort = new com.aasc.erp.carrier.shipexec.proxy.WcfShipClient();
            System.out.println("calling " + myPort.getEndpoint());
            // Add your own code here
        
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    /**
     * delegate all operations to the underlying implementation class.
     */
    
    public void addShipper(String shipperSymbol, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress nameAddress) throws java.rmi.RemoteException {
        _port.addShipper(shipperSymbol, nameAddress);
    }
    
    public void changeShipperSymbol(String currentShipper, String newShipper) throws java.rmi.RemoteException {
        _port.changeShipperSymbol(currentShipper, newShipper);
    }
    
    public void deleteShipper(String shipper) throws java.rmi.RemoteException {
        _port.deleteShipper(shipper);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getCarriers() throws java.rmi.RemoteException {
        return _port.getCarriers();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getCommitments() throws java.rmi.RemoteException {
        return _port.getCommitments();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getCommodityClasses() throws java.rmi.RemoteException {
        return _port.getCommodityClasses();
    }
    
    public String getCurrencyByCountryLocale(String country_symbol) throws java.rmi.RemoteException {
        return _port.getCurrencyByCountryLocale(country_symbol);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxCurrency getCurrencyByCountry(String country_symbol) throws java.rmi.RemoteException {
        return _port.getCurrencyByCountry(country_symbol);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getDeviceDrivers() throws java.rmi.RemoteException {
        return _port.getDeviceDrivers();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Holiday[] getHolidays(String carrier, String origin_country) throws java.rmi.RemoteException {
        return _port.getHolidays(carrier, origin_country);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getIncoterms() throws java.rmi.RemoteException {
        return _port.getIncoterms();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getLanguages() throws java.rmi.RemoteException {
        return _port.getLanguages();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddressValidationCandidate[] getNameAddressValidationCandidates(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress na, boolean useSimpleNameAddress) throws java.rmi.RemoteException {
        return _port.getNameAddressValidationCandidates(na, useSimpleNameAddress);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.GetNameAddressValidationCandidatesWithParamsResponse getNameAddressValidationCandidatesWithParams(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress na, boolean useSimpleNameAddress, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.getNameAddressValidationCandidatesWithParams(na, useSimpleNameAddress, params);
    }
    
    public String getNextValidShipDate(String carrier, String from_date, String origin_country, boolean ship_on_sat) throws java.rmi.RemoteException {
        return _port.getNextValidShipDate(carrier, from_date, origin_country, ship_on_sat);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getPackageTypes() throws java.rmi.RemoteException {
        return _port.getPackageTypes();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getPaymentTypes() throws java.rmi.RemoteException {
        return _port.getPaymentTypes();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getServices() throws java.rmi.RemoteException {
        return _port.getServices();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getShipFileDocuments(String carrier) throws java.rmi.RemoteException {
        return _port.getShipFileDocuments(carrier);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDoc[] getDocumentFormats(String carrier) throws java.rmi.RemoteException {
        return _port.getDocumentFormats(carrier);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress getShipperNameAddress(String shipper) throws java.rmi.RemoteException {
        return _port.getShipperNameAddress(shipper);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getShippers() throws java.rmi.RemoteException {
        return _port.getShippers();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getUnitOfMeasures() throws java.rmi.RemoteException {
        return _port.getUnitOfMeasures();
    }
    
    public String getWeightUnitByCountryLocale(String country_symbol) throws java.rmi.RemoteException {
        return _port.getWeightUnitByCountryLocale(country_symbol);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] inspectNameAddress(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress na) throws java.rmi.RemoteException {
        return _port.inspectNameAddress(na);
    }
    
    public boolean isValidShipDate(String carrier, String ship_date, String origin_country, boolean ship_on_sat) throws java.rmi.RemoteException {
        return _port.isValidShipDate(carrier, ship_date, origin_country, ship_on_sat);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getCarriersbyShippers(String[] shippers) throws java.rmi.RemoteException {
        return _port.getCarriersbyShippers(shippers);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getServicesbyCarriers(String[] carriers) throws java.rmi.RemoteException {
        return _port.getServicesbyCarriers(carriers);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LicenseValidationResponse[] validateEntitlements(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LicenseValidationRequest[] license_ids) throws java.rmi.RemoteException {
        return _port.validateEntitlements(license_ids);
    }
    
    public void insertSoxDbPackage(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package pkg) throws java.rmi.RemoteException {
        _port.insertSoxDbPackage(pkg);
    }
    
    public void updateSoxDbPackage(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package pkg) throws java.rmi.RemoteException {
        _port.updateSoxDbPackage(pkg);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getScales() throws java.rmi.RemoteException {
        return _port.getScales();
    }
    
    public void instantiateWCF(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package _package) throws java.rmi.RemoteException {
        _port.instantiateWCF(shipmentRequest, _package);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchResponse processBatch(String batchReference, int batchMode, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.processBatch(batchReference, batchMode, printRequest, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn addShipmentToBatch(String batchReference, String batchItemReference, int sequenceNumber, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchLoadType loadType, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.addShipmentToBatch(batchReference, batchItemReference, sequenceNumber, loadType, shipmentRequest, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchResponse processBatchByRequest(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchRequest batchRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ProcessBatchMode batchMode, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.processBatchByRequest(batchRequest, batchMode, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn getBatchCount(String batchReference) throws java.rmi.RemoteException {
        return _port.getBatchCount(batchReference);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadBatchResponse loadBatch(String batchReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.loadBatch(batchReference, shipmentRequest, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.StageBatchResponse stageBatch(String batchReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.stageBatch(batchReference, shipmentRequest, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn removeBatch(String batchReference) throws java.rmi.RemoteException {
        return _port.removeBatch(batchReference);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn createBatch(String batchReference) throws java.rmi.RemoteException {
        return _port.createBatch(batchReference);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxReturn removeBatchItem(String batchReference, String batchItemReference) throws java.rmi.RemoteException {
        return _port.removeBatchItem(batchReference, batchItemReference);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentResponse shipBatchItem(String batchReference, String batchItemReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.shipBatchItem(batchReference, batchItemReference, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest loadBatchItem(String batchReference, String batchItemReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.loadBatchItem(batchReference, batchItemReference, params);
    }
    
    public String[] getStagedBatches() throws java.rmi.RemoteException {
        return _port.getStagedBatches();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchRequest getStagedBatch(String batchReference) throws java.rmi.RemoteException {
        return _port.getStagedBatch(batchReference);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.BatchRequest getBatchShipmentErrors(String batchReference) throws java.rmi.RemoteException {
        return _port.getBatchShipmentErrors(batchReference);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDocument[] printBatch(String batchReference, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.printBatch(batchReference, printRequest, params);
    }
    
    public String sox_Version() throws java.rmi.RemoteException {
        return _port.sox_Version();
    }
    
    public String sox_Db_Version() throws java.rmi.RemoteException {
        return _port.sox_Db_Version();
    }
    
    public String app_Db_Version() throws java.rmi.RemoteException {
        return _port.app_Db_Version();
    }
    
    public String CSAdapter_Version() throws java.rmi.RemoteException {
        return _port.CSAdapter_Version();
    }
    
    public String managementLayer_Version() throws java.rmi.RemoteException {
        return _port.managementLayer_Version();
    }
    
    public String business_Object_Version() throws java.rmi.RemoteException {
        return _port.business_Object_Version();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadResponse load(String key, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.load(key, shipmentRequest, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.UserMethodResponse userMethod(Object params) throws java.rmi.RemoteException {
        return _port.userMethod(params);
    }
    
    public void validate(String user_name, String password) throws java.rmi.RemoteException {
        _port.validate(user_name, password);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsResponse closeOutBySymbols(String carrier, String shipper, String[] closeOutItems, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.closeOutBySymbols(carrier, shipper, closeOutItems, params);
    }
    
    public int getCloseOutMode(String carrier, long global_msn) throws java.rmi.RemoteException {
        return _port.getCloseOutMode(carrier, global_msn);
    }
    
    public void setCloseOutMode(String carrier, long global_msn, int closeOutMode) throws java.rmi.RemoteException {
        _port.setCloseOutMode(carrier, global_msn, closeOutMode);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutItem[] getCloseOutItems(String carrier, String shipper) throws java.rmi.RemoteException {
        return _port.getCloseOutItems(carrier, shipper);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseOutBySymbolsAndPrintResponse closeOutBySymbolsAndPrint(String carrier, String shipper, String[] closeOutItems, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.closeOutBySymbolsAndPrint(carrier, shipper, closeOutItems, printRequest, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReShipResponse reShip(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package packageToReship, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.reShip(packageToReship, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ReProcessResponse reProcess(String carrier, int[] msnlist) throws java.rmi.RemoteException {
        return _port.reProcess(carrier, msnlist);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ModifyPackageListResult modifyPackageList(String carrier, int[] msnlist, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] packageAttributes) throws java.rmi.RemoteException {
        return _port.modifyPackageList(carrier, msnlist, packageAttributes);
    }
    
    public String[] getSearchFieldList() throws java.rmi.RemoteException {
        return _port.getSearchFieldList();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getSearchFieldswithType() throws java.rmi.RemoteException {
        return _port.getSearchFieldswithType();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package searchByGlobalMsn(long global_msn) throws java.rmi.RemoteException {
        return _port.searchByGlobalMsn(global_msn);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByGlobalBundleId(long global_bundle_id) throws java.rmi.RemoteException {
        return _port.searchByGlobalBundleId(global_bundle_id);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperReference(String shipper_reference) throws java.rmi.RemoteException {
        return _port.searchByShipperReference(shipper_reference);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperReferenceWithCount(String shipper_reference, int recordsToReturn) throws java.rmi.RemoteException {
        return _port.searchByShipperReferenceWithCount(shipper_reference, recordsToReturn);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByConsigneeReference(String consignee_reference) throws java.rmi.RemoteException {
        return _port.searchByConsigneeReference(consignee_reference);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByConsigneeReferenceWithCount(String consignee_reference, int recordsToReturn) throws java.rmi.RemoteException {
        return _port.searchByConsigneeReferenceWithCount(consignee_reference, recordsToReturn);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package searchByTrackingNumber(String trackingNumber) throws java.rmi.RemoteException {
        return _port.searchByTrackingNumber(trackingNumber);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByTrackingNumberWithCount(String trackingNumber, int recordsToReturn) throws java.rmi.RemoteException {
        return _port.searchByTrackingNumberWithCount(trackingNumber, recordsToReturn);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByFilter(String filter, int recordsToReturn, String order_by) throws java.rmi.RemoteException {
        return _port.searchByFilter(filter, recordsToReturn, order_by);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByFilters(String[] filters, int recordsToReturn, String order_by) throws java.rmi.RemoteException {
        return _port.searchByFilters(filters, recordsToReturn, order_by);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperAndShipdate(String shipper, String shipdate) throws java.rmi.RemoteException {
        return _port.searchByShipperAndShipdate(shipper, shipdate);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperAndShipdateWithCount(String shipper, String shipdate, int recordsToReturn) throws java.rmi.RemoteException {
        return _port.searchByShipperAndShipdateWithCount(shipper, shipdate, recordsToReturn);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipperAndShipdateAndStatus(String shipper, String shipdate, int recordsToReturn, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SearchCloseoutStatus searchCloseoutStatus) throws java.rmi.RemoteException {
        return _port.searchByShipperAndShipdateAndStatus(shipper, shipdate, recordsToReturn, searchCloseoutStatus);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchPackageHistory(String startShipDate, String endShipDate, String shipper, String service, long globalMSN, String trackingNumber, String company, String contact, String city, String stateProvince, String country, String postalCode, String phone, String shipperReference, String consigneeReference, String miscReference1, String miscReference2, String miscReference3, String miscReference4, String miscReference5, String carrier, int recordsToReturn) throws java.rmi.RemoteException {
        return _port.searchPackageHistory(startShipDate, endShipDate, shipper, service, globalMSN, trackingNumber, company, contact, city, stateProvince, country, postalCode, phone, shipperReference, consigneeReference, miscReference1, miscReference2, miscReference3, miscReference4, miscReference5, carrier, recordsToReturn);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Package[] searchByShipFileID(long shipFileID, String carrier, int recordsToReturn) throws java.rmi.RemoteException {
        return _port.searchByShipFileID(shipFileID, carrier, recordsToReturn);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipResponse ship(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest request, boolean shipWithoutTransaction, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.ship(request, shipWithoutTransaction, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipOrderResponse shipOrder(String value, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest shipmentRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.shipOrder(value, shipmentRequest, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateResponse rate(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest request, String service, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.rate(request, service, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.RateServicesResponse rateServices(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ShipmentRequest request, String[] services, int sortType, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.rateServices(request, services, sortType, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequestResponse printRequest(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.printRequest(printRequest, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintPositionDocumentXmlResponse printPositionDocumentXml(String pos_doc_xml, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printerSettings, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.printPositionDocumentXml(pos_doc_xml, printerSettings, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintDocumentResponse printDocument(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDocument document, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printer, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.printDocument(document, printer, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getAvailablePrinterStocks() throws java.rmi.RemoteException {
        return _port.getAvailablePrinterStocks();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getAvailablePrinters() throws java.rmi.RemoteException {
        return _port.getAvailablePrinters();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer[] getConfiguredPrinters() throws java.rmi.RemoteException {
        return _port.getConfiguredPrinters();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer getPrinter(int printer_id) throws java.rmi.RemoteException {
        return _port.getPrinter(printer_id);
    }
    
    public boolean addPrinter(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printer) throws java.rmi.RemoteException {
        return _port.addPrinter(printer);
    }
    
    public int copyPrinter(int printer_id) throws java.rmi.RemoteException {
        return _port.copyPrinter(printer_id);
    }
    
    public boolean updatePrinter(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Printer printer) throws java.rmi.RemoteException {
        return _port.updatePrinter(printer);
    }
    
    public boolean deletePrinter(int printer_id) throws java.rmi.RemoteException {
        return _port.deletePrinter(printer_id);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DocumentProfile[] getDocumentProfiles() throws java.rmi.RemoteException {
        return _port.getDocumentProfiles();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DocumentProfile getDocumentProfile(int profile_id) throws java.rmi.RemoteException {
        return _port.getDocumentProfile(profile_id);
    }
    
    public boolean addDocumentProfile(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DocumentProfile documentProfile) throws java.rmi.RemoteException {
        return _port.addDocumentProfile(documentProfile);
    }
    
    public boolean updateDocumentProfile(com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.DocumentProfile documentProfile) throws java.rmi.RemoteException {
        return _port.updateDocumentProfile(documentProfile);
    }
    
    public int copyDocumentProfile(int profile_id) throws java.rmi.RemoteException {
        return _port.copyDocumentProfile(profile_id);
    }
    
    public boolean deleteDocumentProfile(int profile_id) throws java.rmi.RemoteException {
        return _port.deleteDocumentProfile(profile_id);
    }
    
    public void deleteHistoryItem(String carrier, String shipper, int historyItem) throws java.rmi.RemoteException {
        _port.deleteHistoryItem(carrier, shipper, historyItem);
    }
    
    public void deleteHistoryItems(String carrier, String shipper, int[] historyItems) throws java.rmi.RemoteException {
        _port.deleteHistoryItems(carrier, shipper, historyItems);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getHistoryItemList(String carrier, String shipper) throws java.rmi.RemoteException {
        return _port.getHistoryItemList(carrier, shipper);
    }
    
    public boolean areTransmitItemsAvailableForDeletion(String carrier, String shipper) throws java.rmi.RemoteException {
        return _port.areTransmitItemsAvailableForDeletion(carrier, shipper);
    }
    
    public void deleteTransmitItems(String carrier, String shipper, String[] itemsToDelete) throws java.rmi.RemoteException {
        _port.deleteTransmitItems(carrier, shipper, itemsToDelete);
    }
    
    public void deleteTransmitItem(String carrier, String shipper, String itemToDelete) throws java.rmi.RemoteException {
        _port.deleteTransmitItem(carrier, shipper, itemToDelete);
    }
    
    public String[] getTransmitItemsAvailableForDeletion(String carrier, String shipper) throws java.rmi.RemoteException {
        return _port.getTransmitItemsAvailableForDeletion(carrier, shipper);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getTransmitItems(String carrier, String shipper) throws java.rmi.RemoteException {
        return _port.getTransmitItems(carrier, shipper);
    }
    
    public String[] getTransmitItemsByStatus(String carrier, String shipper, int status) throws java.rmi.RemoteException {
        return _port.getTransmitItemsByStatus(carrier, shipper, status);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] transmitItem(String carrier, String shipper, String itemToTransmit, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.transmitItem(carrier, shipper, itemToTransmit, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] transmitItems(String carrier, String shipper, String[] itemsToTransmit, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.transmitItems(carrier, shipper, itemsToTransmit, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getDeleteTransmitItemsList(String carrier, String shipper) throws java.rmi.RemoteException {
        return _port.getDeleteTransmitItemsList(carrier, shipper);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByGlobalMsnResponse voidPackageByGlobalMsn(long global_msn, String carrier, String shipper, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.voidPackageByGlobalMsn(global_msn, carrier, shipper, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackageByTrackingNumberResponse voidPackageByTrackingNumber(String trackingNumber, String carrier, String shipper, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.voidPackageByTrackingNumber(trackingNumber, carrier, shipper, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.VoidPackagesByGlobalMsnListResponse voidPackagesByGlobalMsnList(long[] msnList, String carrier, String shipper, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.voidPackagesByGlobalMsnList(msnList, carrier, shipper, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum additionalHandlingTypes() throws java.rmi.RemoteException {
        return _port.additionalHandlingTypes();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum dryIceRegulationSets() throws java.rmi.RemoteException {
        return _port.dryIceRegulationSets();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum dryIcePurposes() throws java.rmi.RemoteException {
        return _port.dryIcePurposes();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum alcoholTypes() throws java.rmi.RemoteException {
        return _port.alcoholTypes();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum alcoholPackaging() throws java.rmi.RemoteException {
        return _port.alcoholPackaging();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum dispositionMethods() throws java.rmi.RemoteException {
        return _port.dispositionMethods();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum closeOutModes() throws java.rmi.RemoteException {
        return _port.closeOutModes();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum deliveryMethods() throws java.rmi.RemoteException {
        return _port.deliveryMethods();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum returnAddressMethods() throws java.rmi.RemoteException {
        return _port.returnAddressMethods();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum returnDeliveryMethods() throws java.rmi.RemoteException {
        return _port.returnDeliveryMethods();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum CODPaymentMethods() throws java.rmi.RemoteException {
        return _port.CODPaymentMethods();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum CODReturnMethods() throws java.rmi.RemoteException {
        return _port.CODReturnMethods();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazMatCACategories() throws java.rmi.RemoteException {
        return _port.hazMatCACategories();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazmatLabels() throws java.rmi.RemoteException {
        return _port.hazmatLabels();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazmatPackingGroups() throws java.rmi.RemoteException {
        return _port.hazmatPackingGroups();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazMatRegulations() throws java.rmi.RemoteException {
        return _port.hazMatRegulations();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazMatRegulationSets() throws java.rmi.RemoteException {
        return _port.hazMatRegulationSets();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum SEDMethods() throws java.rmi.RemoteException {
        return _port.SEDMethods();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum COMethods() throws java.rmi.RemoteException {
        return _port.COMethods();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum commercialInvoiceMethods() throws java.rmi.RemoteException {
        return _port.commercialInvoiceMethods();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum NAFTARVCMethods() throws java.rmi.RemoteException {
        return _port.NAFTARVCMethods();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum NAFTAPreferenceCriterion() throws java.rmi.RemoteException {
        return _port.NAFTAPreferenceCriterion();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum NAFTAProducer() throws java.rmi.RemoteException {
        return _port.NAFTAProducer();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum exchangeMethods() throws java.rmi.RemoteException {
        return _port.exchangeMethods();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazmatPhysicalForm() throws java.rmi.RemoteException {
        return _port.hazmatPhysicalForm();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum hazmatRadioactiveException() throws java.rmi.RemoteException {
        return _port.hazmatRadioactiveException();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum brokerageMethod() throws java.rmi.RemoteException {
        return _port.brokerageMethod();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum chargesOnDocumentation() throws java.rmi.RemoteException {
        return _port.chargesOnDocumentation();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxEnum commodityCondition() throws java.rmi.RemoteException {
        return _port.commodityCondition();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxCountry[] getCountries() throws java.rmi.RemoteException {
        return _port.getCountries();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxCurrency[] getCurrencies() throws java.rmi.RemoteException {
        return _port.getCurrencies();
    }
    
    public boolean closeGroup(String carrier, String grouping_symbol, String group_id) throws java.rmi.RemoteException {
        return _port.closeGroup(carrier, grouping_symbol, group_id);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CloseGroupAndPrintResponse closeGroupAndPrint(String carrier, String grouping_symbol, String group_id, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PrintRequest printRequest, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] params) throws java.rmi.RemoteException {
        return _port.closeGroupAndPrint(carrier, grouping_symbol, group_id, printRequest, params);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Group getGroup(String carrier, String grouping_symbol, String group_id) throws java.rmi.RemoteException {
        return _port.getGroup(carrier, grouping_symbol, group_id);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxDictionaryItem[] getGroupDocuments(String carrier) throws java.rmi.RemoteException {
        return _port.getGroupDocuments(carrier);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Grouping[] getGroupings(String carrier) throws java.rmi.RemoteException {
        return _port.getGroupings(carrier);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Group[] getGroups(String carrier, String grouping_symbol, int status_flag) throws java.rmi.RemoteException {
        return _port.getGroups(carrier, grouping_symbol, status_flag);
    }
    
    public boolean modifyGroup(String carrier, String grouping_symbol, String group_id, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackageRequest pkg_req) throws java.rmi.RemoteException {
        return _port.modifyGroup(carrier, grouping_symbol, group_id, pkg_req);
    }
    
    public boolean openGroup(String carrier, String grouping_symbol, String group_id) throws java.rmi.RemoteException {
        return _port.openGroup(carrier, grouping_symbol, group_id);
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.SoxGroupingType[] getGroupingTypes() throws java.rmi.RemoteException {
        return _port.getGroupingTypes();
    }
    
    public com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Group createGroup(String carrier, String grouping_symbol, com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackageRequest pkg_req) throws java.rmi.RemoteException {
        return _port.createGroup(carrier, grouping_symbol, pkg_req);
    }
    
    
    /**
     * used to access the JAX-RPC level APIs
     * returns the interface of the port instance
     */
    public com.aasc.erp.carrier.shipexec.proxy.IwcfShip getPort() {
        return _port;
    }
    
    public String getEndpoint() {
        return (String) ((Stub) _port)._getProperty(Stub.ENDPOINT_ADDRESS_PROPERTY);
    }
    
    public void setEndpoint(String endpoint) {
        ((Stub) _port)._setProperty(Stub.ENDPOINT_ADDRESS_PROPERTY, endpoint);
    }
    
    public String getPassword() {
        return (String) ((Stub) _port)._getProperty(Stub.PASSWORD_PROPERTY);
    }
    
    public void setPassword(String password) {
        ((Stub) _port)._setProperty(Stub.PASSWORD_PROPERTY, password);
    }
    
    public String getUsername() {
        return (String) ((Stub) _port)._getProperty(Stub.USERNAME_PROPERTY);
    }
    
    public void setUsername(String username) {
        ((Stub) _port)._setProperty(Stub.USERNAME_PROPERTY, username);
    }
    
    public void setMaintainSession(boolean maintainSession) {
        ((Stub) _port)._setProperty(Stub.SESSION_MAINTAIN_PROPERTY, Boolean.valueOf(maintainSession));
    }
    
    public boolean getMaintainSession() {
        return ((Boolean) ((Stub) _port)._getProperty(Stub.SESSION_MAINTAIN_PROPERTY)).booleanValue();
    }
    
    /**
     * returns the transport context
     */
    public ClientTransport getClientTransport() {
        return ((OracleStub) _port).getClientTransport();
    }
    
}
