// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf;


public class ScanShipMode implements java.io.Serializable {
    private java.lang.String value;
    private static final String _offString = "off";
    private static final String _scanShipString = "scanShip";
    private static final String _basicString = "basic";
    private static final String _integratedString = "integrated";
    private static final String _integratedSinglePieceString = "integratedSinglePiece";
    
    public static final java.lang.String _off = new java.lang.String(_offString);
    public static final java.lang.String _scanShip = new java.lang.String(_scanShipString);
    public static final java.lang.String _basic = new java.lang.String(_basicString);
    public static final java.lang.String _integrated = new java.lang.String(_integratedString);
    public static final java.lang.String _integratedSinglePiece = new java.lang.String(_integratedSinglePieceString);
    
    public static final ScanShipMode off = new ScanShipMode(_off);
    public static final ScanShipMode scanShip = new ScanShipMode(_scanShip);
    public static final ScanShipMode basic = new ScanShipMode(_basic);
    public static final ScanShipMode integrated = new ScanShipMode(_integrated);
    public static final ScanShipMode integratedSinglePiece = new ScanShipMode(_integratedSinglePiece);
    
    protected ScanShipMode(java.lang.String value) {
        this.value = value;
    }
    
    public java.lang.String getValue() {
        return value;
    }
    
    public static ScanShipMode fromValue(java.lang.String value)
        throws java.lang.IllegalStateException {
        if (off.value.equals(value)) {
            return off;
        }if (scanShip.value.equals(value)) {
            return scanShip;
        }if (basic.value.equals(value)) {
            return basic;
        }if (integrated.value.equals(value)) {
            return integrated;
        }if (integratedSinglePiece.value.equals(value)) {
            return integratedSinglePiece;
        }
        throw new IllegalArgumentException();
    }
    
    public static ScanShipMode fromString(String value)
        throws java.lang.IllegalStateException {
        if (value.equals(_offString)) {
            return off;
        }if (value.equals(_scanShipString)) {
            return scanShip;
        }if (value.equals(_basicString)) {
            return basic;
        }if (value.equals(_integratedString)) {
            return integrated;
        }if (value.equals(_integratedSinglePieceString)) {
            return integratedSinglePiece;
        }
        throw new IllegalArgumentException();
    }
    
    public String toString() {
        return value.toString();
    }
    
    public boolean equals(java.lang.Object obj) {
        if (!(obj instanceof ScanShipMode)) {
            return false;
        }
        return ((ScanShipMode)obj).value.equals(value);
    }
    
    public int hashCode() {
        return value.hashCode();
    }
}
