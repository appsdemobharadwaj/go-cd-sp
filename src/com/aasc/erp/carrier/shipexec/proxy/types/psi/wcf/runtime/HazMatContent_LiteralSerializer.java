// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.runtime;

import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.encoding.literal.DetailFragmentDeserializer;
import oracle.j2ee.ws.common.encoding.simpletype.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.xml.UUID;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.xml.soap.SOAPMessage;
import javax.xml.soap.AttachmentPart;

public class HazMatContent_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable {
    private static final QName ns1_hazmat_500kg_exemption_QNAME = new QName("http://PSI.Wcf", "hazmat_500kg_exemption");
    private static final QName ns2_boolean_TYPE_QNAME = SchemaConstants.QNAME_TYPE_BOOLEAN;
    private CombinedSerializer myns2__boolean__java_lang_Boolean_Boolean_Serializer;
    private static final QName ns1_hazmat_accessible_QNAME = new QName("http://PSI.Wcf", "hazmat_accessible");
    private static final QName ns1_hazmat_ca_category_QNAME = new QName("http://PSI.Wcf", "hazmat_ca_category");
    private static final QName ns2_int_TYPE_QNAME = SchemaConstants.QNAME_TYPE_INT;
    private CombinedSerializer myns2__int__java_lang_Integer_Int_Serializer;
    private static final QName ns1_hazmat_cargo_QNAME = new QName("http://PSI.Wcf", "hazmat_cargo");
    private static final QName ns1_hazmat_class_QNAME = new QName("http://PSI.Wcf", "hazmat_class");
    private static final QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer myns2_string__java_lang_String_String_Serializer;
    private static final QName ns1_hazmat_description_QNAME = new QName("http://PSI.Wcf", "hazmat_description");
    private static final QName ns1_hazmat_emergency_contact_QNAME = new QName("http://PSI.Wcf", "hazmat_emergency_contact");
    private static final QName ns1_hazmat_emergency_phone_QNAME = new QName("http://PSI.Wcf", "hazmat_emergency_phone");
    private static final QName ns1_hazmat_ex_number_QNAME = new QName("http://PSI.Wcf", "hazmat_ex_number");
    private static final QName ns1_hazmat_excepted_quantity_QNAME = new QName("http://PSI.Wcf", "hazmat_excepted_quantity");
    private static final QName ns1_hazmat_id_QNAME = new QName("http://PSI.Wcf", "hazmat_id");
    private static final QName ns1_hazmat_infectious_responsible_party_QNAME = new QName("http://PSI.Wcf", "hazmat_infectious_responsible_party");
    private static final QName ns1_NameAddress_TYPE_QNAME = new QName("http://PSI.Wcf", "NameAddress");
    private CombinedSerializer myns1_NameAddress__NameAddress_InterfaceSOAPSerializer;
    private static final QName ns1_hazmat_label_QNAME = new QName("http://PSI.Wcf", "hazmat_label");
    private static final QName ns1_hazmat_limited_quantity_QNAME = new QName("http://PSI.Wcf", "hazmat_limited_quantity");
    private static final QName ns1_hazmat_packing_QNAME = new QName("http://PSI.Wcf", "hazmat_packing");
    private static final QName ns1_hazmat_packing_group_QNAME = new QName("http://PSI.Wcf", "hazmat_packing_group");
    private static final QName ns1_hazmat_packing_instruction_QNAME = new QName("http://PSI.Wcf", "hazmat_packing_instruction");
    private static final QName ns1_hazmat_percentage_QNAME = new QName("http://PSI.Wcf", "hazmat_percentage");
    private static final QName ns2_decimal_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DECIMAL;
    private CombinedSerializer myns2_decimal__java_math_BigDecimal_Decimal_Serializer;
    private static final QName ns1_hazmat_quantity_QNAME = new QName("http://PSI.Wcf", "hazmat_quantity");
    private static final QName ns1_hazmat_quantity_unit_QNAME = new QName("http://PSI.Wcf", "hazmat_quantity_unit");
    private static final QName ns1_hazmat_radioactive_activity_QNAME = new QName("http://PSI.Wcf", "hazmat_radioactive_activity");
    private static final QName ns1_hazmat_radioactive_activity_unit_QNAME = new QName("http://PSI.Wcf", "hazmat_radioactive_activity_unit");
    private static final QName ns1_hazmat_radioactive_chemical_form_QNAME = new QName("http://PSI.Wcf", "hazmat_radioactive_chemical_form");
    private static final QName ns1_hazmat_radioactive_csi_QNAME = new QName("http://PSI.Wcf", "hazmat_radioactive_csi");
    private static final QName ns1_hazmat_radioactive_exception_QNAME = new QName("http://PSI.Wcf", "hazmat_radioactive_exception");
    private static final QName ns1_hazmat_radioactive_name_QNAME = new QName("http://PSI.Wcf", "hazmat_radioactive_name");
    private static final QName ns1_hazmat_radioactive_packaging_QNAME = new QName("http://PSI.Wcf", "hazmat_radioactive_packaging");
    private static final QName ns1_hazmat_radioactive_physical_form_QNAME = new QName("http://PSI.Wcf", "hazmat_radioactive_physical_form");
    private static final QName ns1_hazmat_radioactive_surface_reading_QNAME = new QName("http://PSI.Wcf", "hazmat_radioactive_surface_reading");
    private static final QName ns1_hazmat_radioactive_surface_reading_unit_QNAME = new QName("http://PSI.Wcf", "hazmat_radioactive_surface_reading_unit");
    private static final QName ns1_hazmat_radioactive_transport_index_QNAME = new QName("http://PSI.Wcf", "hazmat_radioactive_transport_index");
    private static final QName ns1_hazmat_reference_QNAME = new QName("http://PSI.Wcf", "hazmat_reference");
    private static final QName ns1_hazmat_regulation_QNAME = new QName("http://PSI.Wcf", "hazmat_regulation");
    private static final QName ns1_hazmat_regulation_set_QNAME = new QName("http://PSI.Wcf", "hazmat_regulation_set");
    private static final QName ns1_hazmat_reportable_quantity_QNAME = new QName("http://PSI.Wcf", "hazmat_reportable_quantity");
    private static final QName ns1_hazmat_special_provisions_QNAME = new QName("http://PSI.Wcf", "hazmat_special_provisions");
    private static final QName ns1_hazmat_subsidiary_risk_class_QNAME = new QName("http://PSI.Wcf", "hazmat_subsidiary_risk_class");
    private static final QName ns1_hazmat_technical_name_QNAME = new QName("http://PSI.Wcf", "hazmat_technical_name");
    private static final QName ns1_user_data_1_QNAME = new QName("http://PSI.Wcf", "user_data_1");
    private static final QName ns1_ArrayOfSoxDictionaryItem_TYPE_QNAME = new QName("http://PSI.Wcf", "ArrayOfSoxDictionaryItem");
    private CombinedSerializer myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer;
    private static final QName ns1_user_data_2_QNAME = new QName("http://PSI.Wcf", "user_data_2");
    private static final QName ns1_user_data_3_QNAME = new QName("http://PSI.Wcf", "user_data_3");
    private static final QName ns1_user_data_4_QNAME = new QName("http://PSI.Wcf", "user_data_4");
    private static final QName ns1_user_data_5_QNAME = new QName("http://PSI.Wcf", "user_data_5");
    
    public HazMatContent_LiteralSerializer(QName type) {
        this(type,  false);
    }
    
    public HazMatContent_LiteralSerializer(QName type, boolean encodeType) {
        super(type, true, encodeType);
        setSOAPVersion(SOAPVersion.SOAP_11);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        myns2__boolean__java_lang_Boolean_Boolean_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.Boolean.class, ns2_boolean_TYPE_QNAME);
        myns2__int__java_lang_Integer_Int_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.Integer.class, ns2_int_TYPE_QNAME);
        myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.String.class, ns2_string_TYPE_QNAME);
        myns1_NameAddress__NameAddress_InterfaceSOAPSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress.class, ns1_NameAddress_TYPE_QNAME);
        myns2_decimal__java_math_BigDecimal_Decimal_Serializer = (CombinedSerializer)registry.getSerializer("", java.math.BigDecimal.class, ns2_decimal_TYPE_QNAME);
        myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem.class, ns1_ArrayOfSoxDictionaryItem_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatContent instance = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatContent();
        java.lang.Object member=null;
        QName elementName;
        List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        java.util.HashSet requiredElements = new java.util.HashSet();
        for (int memberIndex = 0; memberIndex <43; memberIndex++) {
            elementName = reader.getName();
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_500kg_exemption_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_hazmat_500kg_exemption_QNAME, reader, context);
                requiredElements.remove("hazmat_500kg_exemption");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_500Kg_exemption((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_accessible_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_hazmat_accessible_QNAME, reader, context);
                requiredElements.remove("hazmat_accessible");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_accessible((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_ca_category_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_hazmat_ca_category_QNAME, reader, context);
                requiredElements.remove("hazmat_ca_category");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_ca_category((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_cargo_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_hazmat_cargo_QNAME, reader, context);
                requiredElements.remove("hazmat_cargo");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_cargo((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_class_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_class_QNAME, reader, context);
                requiredElements.remove("hazmat_class");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_class((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_description_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_description_QNAME, reader, context);
                requiredElements.remove("hazmat_description");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_description((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_emergency_contact_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_emergency_contact_QNAME, reader, context);
                requiredElements.remove("hazmat_emergency_contact");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_emergency_contact((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_emergency_phone_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_emergency_phone_QNAME, reader, context);
                requiredElements.remove("hazmat_emergency_phone");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_emergency_phone((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_ex_number_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_ex_number_QNAME, reader, context);
                requiredElements.remove("hazmat_ex_number");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_ex_number((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_excepted_quantity_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_hazmat_excepted_quantity_QNAME, reader, context);
                requiredElements.remove("hazmat_excepted_quantity");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_excepted_quantity((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_id_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_id_QNAME, reader, context);
                requiredElements.remove("hazmat_id");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_id((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_infectious_responsible_party_QNAME))) {
                myns1_NameAddress__NameAddress_InterfaceSOAPSerializer.setNullable( false );
                member = myns1_NameAddress__NameAddress_InterfaceSOAPSerializer.deserialize(ns1_hazmat_infectious_responsible_party_QNAME, reader, context);
                requiredElements.remove("hazmat_infectious_responsible_party");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_infectious_responsible_party((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_label_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_hazmat_label_QNAME, reader, context);
                requiredElements.remove("hazmat_label");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_label((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_limited_quantity_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_hazmat_limited_quantity_QNAME, reader, context);
                requiredElements.remove("hazmat_limited_quantity");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_limited_quantity((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_packing_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_packing_QNAME, reader, context);
                requiredElements.remove("hazmat_packing");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_packing((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_packing_group_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_hazmat_packing_group_QNAME, reader, context);
                requiredElements.remove("hazmat_packing_group");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_packing_group((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_packing_instruction_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_packing_instruction_QNAME, reader, context);
                requiredElements.remove("hazmat_packing_instruction");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_packing_instruction((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_percentage_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_hazmat_percentage_QNAME, reader, context);
                requiredElements.remove("hazmat_percentage");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_percentage((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_quantity_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_hazmat_quantity_QNAME, reader, context);
                requiredElements.remove("hazmat_quantity");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_quantity((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_quantity_unit_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_quantity_unit_QNAME, reader, context);
                requiredElements.remove("hazmat_quantity_unit");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_quantity_unit((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_radioactive_activity_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_hazmat_radioactive_activity_QNAME, reader, context);
                requiredElements.remove("hazmat_radioactive_activity");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_radioactive_activity((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_radioactive_activity_unit_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_radioactive_activity_unit_QNAME, reader, context);
                requiredElements.remove("hazmat_radioactive_activity_unit");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_radioactive_activity_unit((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_radioactive_chemical_form_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_radioactive_chemical_form_QNAME, reader, context);
                requiredElements.remove("hazmat_radioactive_chemical_form");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_radioactive_chemical_form((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_radioactive_csi_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_hazmat_radioactive_csi_QNAME, reader, context);
                requiredElements.remove("hazmat_radioactive_csi");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_radioactive_csi((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_radioactive_exception_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_hazmat_radioactive_exception_QNAME, reader, context);
                requiredElements.remove("hazmat_radioactive_exception");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_radioactive_exception((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_radioactive_name_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_radioactive_name_QNAME, reader, context);
                requiredElements.remove("hazmat_radioactive_name");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_radioactive_name((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_radioactive_packaging_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_radioactive_packaging_QNAME, reader, context);
                requiredElements.remove("hazmat_radioactive_packaging");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_radioactive_packaging((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_radioactive_physical_form_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_hazmat_radioactive_physical_form_QNAME, reader, context);
                requiredElements.remove("hazmat_radioactive_physical_form");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_radioactive_physical_form((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_radioactive_surface_reading_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_hazmat_radioactive_surface_reading_QNAME, reader, context);
                requiredElements.remove("hazmat_radioactive_surface_reading");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_radioactive_surface_reading((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_radioactive_surface_reading_unit_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_radioactive_surface_reading_unit_QNAME, reader, context);
                requiredElements.remove("hazmat_radioactive_surface_reading_unit");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_radioactive_surface_reading_unit((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_radioactive_transport_index_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_hazmat_radioactive_transport_index_QNAME, reader, context);
                requiredElements.remove("hazmat_radioactive_transport_index");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_radioactive_transport_index((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_reference_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_reference_QNAME, reader, context);
                requiredElements.remove("hazmat_reference");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_reference((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_regulation_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_hazmat_regulation_QNAME, reader, context);
                requiredElements.remove("hazmat_regulation");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_regulation((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_regulation_set_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_hazmat_regulation_set_QNAME, reader, context);
                requiredElements.remove("hazmat_regulation_set");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_regulation_set((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_reportable_quantity_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_hazmat_reportable_quantity_QNAME, reader, context);
                requiredElements.remove("hazmat_reportable_quantity");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_reportable_quantity((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_special_provisions_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_special_provisions_QNAME, reader, context);
                requiredElements.remove("hazmat_special_provisions");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_special_provisions((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_subsidiary_risk_class_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_subsidiary_risk_class_QNAME, reader, context);
                requiredElements.remove("hazmat_subsidiary_risk_class");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_subsidiary_risk_class((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_hazmat_technical_name_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_hazmat_technical_name_QNAME, reader, context);
                requiredElements.remove("hazmat_technical_name");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHazmat_technical_name((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_user_data_1_QNAME))) {
                myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.deserialize(ns1_user_data_1_QNAME, reader, context);
                requiredElements.remove("user_data_1");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUser_data_1((member == null)? null : ((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_user_data_2_QNAME))) {
                myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.deserialize(ns1_user_data_2_QNAME, reader, context);
                requiredElements.remove("user_data_2");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUser_data_2((member == null)? null : ((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_user_data_3_QNAME))) {
                myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.deserialize(ns1_user_data_3_QNAME, reader, context);
                requiredElements.remove("user_data_3");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUser_data_3((member == null)? null : ((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_user_data_4_QNAME))) {
                myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.deserialize(ns1_user_data_4_QNAME, reader, context);
                requiredElements.remove("user_data_4");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUser_data_4((member == null)? null : ((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_user_data_5_QNAME))) {
                myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.deserialize(ns1_user_data_5_QNAME, reader, context);
                requiredElements.remove("user_data_5");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUser_data_5((member == null)? null : ((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
        }
        if (!requiredElements.isEmpty()) {
            throw new DeserializationException( "literal.expectedElementName" , requiredElements.iterator().next().toString(), DeserializationException.FAULT_CODE_CLIENT );
        }
        
        if( reader.getState() != XMLReader.END)
        {
            reader.skipElement();
        }
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatContent instance = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatContent)obj;
        
    }
    public void doSerializeAnyAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatContent instance = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatContent)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatContent instance = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.HazMatContent)obj;
        
        if (instance.getHazmat_500Kg_exemption() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getHazmat_500Kg_exemption(), ns1_hazmat_500kg_exemption_QNAME, null, writer, context);
        }
        if (instance.getHazmat_accessible() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getHazmat_accessible(), ns1_hazmat_accessible_QNAME, null, writer, context);
        }
        if (instance.getHazmat_ca_category() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getHazmat_ca_category(), ns1_hazmat_ca_category_QNAME, null, writer, context);
        }
        if (instance.getHazmat_cargo() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getHazmat_cargo(), ns1_hazmat_cargo_QNAME, null, writer, context);
        }
        if (instance.getHazmat_class() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_class(), ns1_hazmat_class_QNAME, null, writer, context);
        }
        if (instance.getHazmat_description() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_description(), ns1_hazmat_description_QNAME, null, writer, context);
        }
        if (instance.getHazmat_emergency_contact() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_emergency_contact(), ns1_hazmat_emergency_contact_QNAME, null, writer, context);
        }
        if (instance.getHazmat_emergency_phone() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_emergency_phone(), ns1_hazmat_emergency_phone_QNAME, null, writer, context);
        }
        if (instance.getHazmat_ex_number() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_ex_number(), ns1_hazmat_ex_number_QNAME, null, writer, context);
        }
        if (instance.getHazmat_excepted_quantity() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getHazmat_excepted_quantity(), ns1_hazmat_excepted_quantity_QNAME, null, writer, context);
        }
        if (instance.getHazmat_id() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_id(), ns1_hazmat_id_QNAME, null, writer, context);
        }
        if (instance.getHazmat_infectious_responsible_party() != null) {
            myns1_NameAddress__NameAddress_InterfaceSOAPSerializer.setNullable( false );
            myns1_NameAddress__NameAddress_InterfaceSOAPSerializer.serialize(instance.getHazmat_infectious_responsible_party(), ns1_hazmat_infectious_responsible_party_QNAME, null, writer, context);
        }
        if (instance.getHazmat_label() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getHazmat_label(), ns1_hazmat_label_QNAME, null, writer, context);
        }
        if (instance.getHazmat_limited_quantity() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getHazmat_limited_quantity(), ns1_hazmat_limited_quantity_QNAME, null, writer, context);
        }
        if (instance.getHazmat_packing() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_packing(), ns1_hazmat_packing_QNAME, null, writer, context);
        }
        if (instance.getHazmat_packing_group() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getHazmat_packing_group(), ns1_hazmat_packing_group_QNAME, null, writer, context);
        }
        if (instance.getHazmat_packing_instruction() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_packing_instruction(), ns1_hazmat_packing_instruction_QNAME, null, writer, context);
        }
        if (instance.getHazmat_percentage() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getHazmat_percentage(), ns1_hazmat_percentage_QNAME, null, writer, context);
        }
        if (instance.getHazmat_quantity() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getHazmat_quantity(), ns1_hazmat_quantity_QNAME, null, writer, context);
        }
        if (instance.getHazmat_quantity_unit() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_quantity_unit(), ns1_hazmat_quantity_unit_QNAME, null, writer, context);
        }
        if (instance.getHazmat_radioactive_activity() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getHazmat_radioactive_activity(), ns1_hazmat_radioactive_activity_QNAME, null, writer, context);
        }
        if (instance.getHazmat_radioactive_activity_unit() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_radioactive_activity_unit(), ns1_hazmat_radioactive_activity_unit_QNAME, null, writer, context);
        }
        if (instance.getHazmat_radioactive_chemical_form() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_radioactive_chemical_form(), ns1_hazmat_radioactive_chemical_form_QNAME, null, writer, context);
        }
        if (instance.getHazmat_radioactive_csi() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getHazmat_radioactive_csi(), ns1_hazmat_radioactive_csi_QNAME, null, writer, context);
        }
        if (instance.getHazmat_radioactive_exception() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getHazmat_radioactive_exception(), ns1_hazmat_radioactive_exception_QNAME, null, writer, context);
        }
        if (instance.getHazmat_radioactive_name() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_radioactive_name(), ns1_hazmat_radioactive_name_QNAME, null, writer, context);
        }
        if (instance.getHazmat_radioactive_packaging() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_radioactive_packaging(), ns1_hazmat_radioactive_packaging_QNAME, null, writer, context);
        }
        if (instance.getHazmat_radioactive_physical_form() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getHazmat_radioactive_physical_form(), ns1_hazmat_radioactive_physical_form_QNAME, null, writer, context);
        }
        if (instance.getHazmat_radioactive_surface_reading() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getHazmat_radioactive_surface_reading(), ns1_hazmat_radioactive_surface_reading_QNAME, null, writer, context);
        }
        if (instance.getHazmat_radioactive_surface_reading_unit() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_radioactive_surface_reading_unit(), ns1_hazmat_radioactive_surface_reading_unit_QNAME, null, writer, context);
        }
        if (instance.getHazmat_radioactive_transport_index() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getHazmat_radioactive_transport_index(), ns1_hazmat_radioactive_transport_index_QNAME, null, writer, context);
        }
        if (instance.getHazmat_reference() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_reference(), ns1_hazmat_reference_QNAME, null, writer, context);
        }
        if (instance.getHazmat_regulation() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getHazmat_regulation(), ns1_hazmat_regulation_QNAME, null, writer, context);
        }
        if (instance.getHazmat_regulation_set() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getHazmat_regulation_set(), ns1_hazmat_regulation_set_QNAME, null, writer, context);
        }
        if (instance.getHazmat_reportable_quantity() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getHazmat_reportable_quantity(), ns1_hazmat_reportable_quantity_QNAME, null, writer, context);
        }
        if (instance.getHazmat_special_provisions() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_special_provisions(), ns1_hazmat_special_provisions_QNAME, null, writer, context);
        }
        if (instance.getHazmat_subsidiary_risk_class() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_subsidiary_risk_class(), ns1_hazmat_subsidiary_risk_class_QNAME, null, writer, context);
        }
        if (instance.getHazmat_technical_name() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHazmat_technical_name(), ns1_hazmat_technical_name_QNAME, null, writer, context);
        }
        if (instance.getUser_data_1() != null) {
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem instanceGetUser_data_1_arrayWrapper = (instance.getUser_data_1() == null) ? null : new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem(instance.getUser_data_1());
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.serialize(instanceGetUser_data_1_arrayWrapper, ns1_user_data_1_QNAME, null, writer, context);
        }
        if (instance.getUser_data_2() != null) {
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem instanceGetUser_data_2_arrayWrapper = (instance.getUser_data_2() == null) ? null : new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem(instance.getUser_data_2());
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.serialize(instanceGetUser_data_2_arrayWrapper, ns1_user_data_2_QNAME, null, writer, context);
        }
        if (instance.getUser_data_3() != null) {
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem instanceGetUser_data_3_arrayWrapper = (instance.getUser_data_3() == null) ? null : new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem(instance.getUser_data_3());
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.serialize(instanceGetUser_data_3_arrayWrapper, ns1_user_data_3_QNAME, null, writer, context);
        }
        if (instance.getUser_data_4() != null) {
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem instanceGetUser_data_4_arrayWrapper = (instance.getUser_data_4() == null) ? null : new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem(instance.getUser_data_4());
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.serialize(instanceGetUser_data_4_arrayWrapper, ns1_user_data_4_QNAME, null, writer, context);
        }
        if (instance.getUser_data_5() != null) {
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem instanceGetUser_data_5_arrayWrapper = (instance.getUser_data_5() == null) ? null : new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem(instance.getUser_data_5());
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.serialize(instanceGetUser_data_5_arrayWrapper, ns1_user_data_5_QNAME, null, writer, context);
        }
    }
}
