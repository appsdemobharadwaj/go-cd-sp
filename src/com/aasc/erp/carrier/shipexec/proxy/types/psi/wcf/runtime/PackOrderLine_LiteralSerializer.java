// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.runtime;

import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.encoding.literal.DetailFragmentDeserializer;
import oracle.j2ee.ws.common.encoding.simpletype.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.xml.UUID;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.xml.soap.SOAPMessage;
import javax.xml.soap.AttachmentPart;

public class PackOrderLine_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable {
    private static final QName ns1_id_QNAME = new QName("http://PSI.Wcf", "id");
    private static final QName ns2_int_TYPE_QNAME = SchemaConstants.QNAME_TYPE_INT;
    private CombinedSerializer myns2__int__java_lang_Integer_Int_Serializer;
    private static final QName ns1_product_code_QNAME = new QName("http://PSI.Wcf", "product_code");
    private static final QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer myns2_string__java_lang_String_String_Serializer;
    private static final QName ns1_product_description_QNAME = new QName("http://PSI.Wcf", "product_description");
    private static final QName ns1_quantity_QNAME = new QName("http://PSI.Wcf", "quantity");
    private static final QName ns1_quantity_unit_measure_QNAME = new QName("http://PSI.Wcf", "quantity_unit_measure");
    private static final QName ns1_weight_QNAME = new QName("http://PSI.Wcf", "weight");
    private static final QName ns1_Weight_TYPE_QNAME = new QName("http://PSI.Wcf", "Weight");
    private CombinedSerializer myns1_Weight__Weight_LiteralSerializer;
    private static final QName ns1_dimensions_QNAME = new QName("http://PSI.Wcf", "dimensions");
    private static final QName ns1_Dimensions_TYPE_QNAME = new QName("http://PSI.Wcf", "Dimensions");
    private CombinedSerializer myns1_Dimensions__Dimensions_LiteralSerializer;
    private static final QName ns1_full_pallet_QNAME = new QName("http://PSI.Wcf", "full_pallet");
    private static final QName ns2_boolean_TYPE_QNAME = SchemaConstants.QNAME_TYPE_BOOLEAN;
    private CombinedSerializer myns2__boolean__java_lang_Boolean_Boolean_Serializer;
    private static final QName ns1_shippable_container_QNAME = new QName("http://PSI.Wcf", "shippable_container");
    private static final QName ns1_load_direction_QNAME = new QName("http://PSI.Wcf", "load_direction");
    private static final QName ns1_LoadDirection_TYPE_QNAME = new QName("http://PSI.Wcf", "LoadDirection");
    private CombinedSerializer myns1_LoadDirection__LoadDirection_LiteralSerializer;
    private static final QName ns1_pack_method_QNAME = new QName("http://PSI.Wcf", "pack_method");
    private static final QName ns1_nesting_QNAME = new QName("http://PSI.Wcf", "nesting");
    private static final QName ns1_Nesting_TYPE_QNAME = new QName("http://PSI.Wcf", "Nesting");
    private CombinedSerializer myns1_Nesting__Nesting_LiteralSerializer;
    private static final QName ns1_additional_information_QNAME = new QName("http://PSI.Wcf", "additional_information");
    private static final QName ns2_anyType_TYPE_QNAME = SchemaConstants.QNAME_TYPE_URTYPE;
    private CombinedSerializer ns2_anyType_TYPE_QNAMEjava$2e$lang$2e$Object_Serializer;
    private static final QName ns1_bundle_only_QNAME = new QName("http://PSI.Wcf", "bundle_only");
    private static final QName ns1_keep_together_QNAME = new QName("http://PSI.Wcf", "keep_together");
    private static final QName ns1_foldable_QNAME = new QName("http://PSI.Wcf", "foldable");
    private static final QName ns1_bundle_or_box_QNAME = new QName("http://PSI.Wcf", "bundle_or_box");
    private static final QName ns1_mix_class_id_QNAME = new QName("http://PSI.Wcf", "mix_class_id");
    private static final QName ns1_group_id_QNAME = new QName("http://PSI.Wcf", "group_id");
    private static final QName ns1_master_pack_min_qty_QNAME = new QName("http://PSI.Wcf", "master_pack_min_qty");
    private static final QName ns1_master_pack_max_qty_QNAME = new QName("http://PSI.Wcf", "master_pack_max_qty");
    private static final QName ns1_master_pack_length_QNAME = new QName("http://PSI.Wcf", "master_pack_length");
    private static final QName ns2_double_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DOUBLE;
    private CombinedSerializer myns2__double__java_lang_Double_Double_Serializer;
    private static final QName ns1_master_pack_width_QNAME = new QName("http://PSI.Wcf", "master_pack_width");
    private static final QName ns1_master_pack_height_QNAME = new QName("http://PSI.Wcf", "master_pack_height");
    private static final QName ns1_master_pack_weight_QNAME = new QName("http://PSI.Wcf", "master_pack_weight");
    
    public PackOrderLine_LiteralSerializer(QName type) {
        this(type,  false);
    }
    
    public PackOrderLine_LiteralSerializer(QName type, boolean encodeType) {
        super(type, true, encodeType);
        setSOAPVersion(SOAPVersion.SOAP_11);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        myns2__int__java_lang_Integer_Int_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.Integer.class, ns2_int_TYPE_QNAME);
        myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.String.class, ns2_string_TYPE_QNAME);
        myns1_Weight__Weight_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Weight.class, ns1_Weight_TYPE_QNAME);
        myns1_Dimensions__Dimensions_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Dimensions.class, ns1_Dimensions_TYPE_QNAME);
        myns2__boolean__java_lang_Boolean_Boolean_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.Boolean.class, ns2_boolean_TYPE_QNAME);
        myns1_LoadDirection__LoadDirection_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadDirection.class, ns1_LoadDirection_TYPE_QNAME);
        myns1_Nesting__Nesting_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Nesting.class, ns1_Nesting_TYPE_QNAME);
        ns2_anyType_TYPE_QNAMEjava$2e$lang$2e$Object_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.Object.class, ns2_anyType_TYPE_QNAME);
        myns2__double__java_lang_Double_Double_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.Double.class, ns2_double_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackOrderLine instance = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackOrderLine();
        java.lang.Object member=null;
        QName elementName;
        List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        java.util.HashSet requiredElements = new java.util.HashSet();
        for (int memberIndex = 0; memberIndex <25; memberIndex++) {
            elementName = reader.getName();
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_id_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_id_QNAME, reader, context);
                requiredElements.remove("id");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setId((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_product_code_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_product_code_QNAME, reader, context);
                requiredElements.remove("product_code");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setProduct_code((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_product_description_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_product_description_QNAME, reader, context);
                requiredElements.remove("product_description");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setProduct_description((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_quantity_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_quantity_QNAME, reader, context);
                requiredElements.remove("quantity");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setQuantity((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_quantity_unit_measure_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_quantity_unit_measure_QNAME, reader, context);
                requiredElements.remove("quantity_unit_measure");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setQuantity_unit_measure((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_weight_QNAME))) {
                myns1_Weight__Weight_LiteralSerializer.setNullable( false );
                member = myns1_Weight__Weight_LiteralSerializer.deserialize(ns1_weight_QNAME, reader, context);
                requiredElements.remove("weight");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setWeight((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Weight)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_dimensions_QNAME))) {
                myns1_Dimensions__Dimensions_LiteralSerializer.setNullable( false );
                member = myns1_Dimensions__Dimensions_LiteralSerializer.deserialize(ns1_dimensions_QNAME, reader, context);
                requiredElements.remove("dimensions");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setDimensions((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Dimensions)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_full_pallet_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_full_pallet_QNAME, reader, context);
                requiredElements.remove("full_pallet");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setFull_pallet((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_shippable_container_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_shippable_container_QNAME, reader, context);
                requiredElements.remove("shippable_container");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setShippable_container((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_load_direction_QNAME))) {
                myns1_LoadDirection__LoadDirection_LiteralSerializer.setNullable( false );
                member = myns1_LoadDirection__LoadDirection_LiteralSerializer.deserialize(ns1_load_direction_QNAME, reader, context);
                requiredElements.remove("load_direction");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setLoad_direction((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.LoadDirection)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_pack_method_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_pack_method_QNAME, reader, context);
                requiredElements.remove("pack_method");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setPack_method((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_nesting_QNAME))) {
                myns1_Nesting__Nesting_LiteralSerializer.setNullable( false );
                member = myns1_Nesting__Nesting_LiteralSerializer.deserialize(ns1_nesting_QNAME, reader, context);
                requiredElements.remove("nesting");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNesting((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.Nesting)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_additional_information_QNAME))) {
                ns2_anyType_TYPE_QNAMEjava$2e$lang$2e$Object_Serializer.setNullable( false );
                member = ns2_anyType_TYPE_QNAMEjava$2e$lang$2e$Object_Serializer.deserialize(ns1_additional_information_QNAME, reader, context);
                requiredElements.remove("additional_information");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setAdditional_information((java.lang.Object)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_bundle_only_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_bundle_only_QNAME, reader, context);
                requiredElements.remove("bundle_only");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setBundle_only((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_keep_together_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_keep_together_QNAME, reader, context);
                requiredElements.remove("keep_together");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setKeep_together((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_foldable_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_foldable_QNAME, reader, context);
                requiredElements.remove("foldable");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setFoldable((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_bundle_or_box_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_bundle_or_box_QNAME, reader, context);
                requiredElements.remove("bundle_or_box");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setBundle_or_box((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_mix_class_id_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_mix_class_id_QNAME, reader, context);
                requiredElements.remove("mix_class_id");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setMix_class_id((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_group_id_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_group_id_QNAME, reader, context);
                requiredElements.remove("group_id");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setGroup_id((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_master_pack_min_qty_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_master_pack_min_qty_QNAME, reader, context);
                requiredElements.remove("master_pack_min_qty");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setMaster_pack_min_qty((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_master_pack_max_qty_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_master_pack_max_qty_QNAME, reader, context);
                requiredElements.remove("master_pack_max_qty");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setMaster_pack_max_qty((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_master_pack_length_QNAME))) {
                myns2__double__java_lang_Double_Double_Serializer.setNullable( false );
                member = myns2__double__java_lang_Double_Double_Serializer.deserialize(ns1_master_pack_length_QNAME, reader, context);
                requiredElements.remove("master_pack_length");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setMaster_pack_length((java.lang.Double)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_master_pack_width_QNAME))) {
                myns2__double__java_lang_Double_Double_Serializer.setNullable( false );
                member = myns2__double__java_lang_Double_Double_Serializer.deserialize(ns1_master_pack_width_QNAME, reader, context);
                requiredElements.remove("master_pack_width");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setMaster_pack_width((java.lang.Double)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_master_pack_height_QNAME))) {
                myns2__double__java_lang_Double_Double_Serializer.setNullable( false );
                member = myns2__double__java_lang_Double_Double_Serializer.deserialize(ns1_master_pack_height_QNAME, reader, context);
                requiredElements.remove("master_pack_height");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setMaster_pack_height((java.lang.Double)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_master_pack_weight_QNAME))) {
                myns2__double__java_lang_Double_Double_Serializer.setNullable( false );
                member = myns2__double__java_lang_Double_Double_Serializer.deserialize(ns1_master_pack_weight_QNAME, reader, context);
                requiredElements.remove("master_pack_weight");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setMaster_pack_weight((java.lang.Double)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
        }
        if (!requiredElements.isEmpty()) {
            throw new DeserializationException( "literal.expectedElementName" , requiredElements.iterator().next().toString(), DeserializationException.FAULT_CODE_CLIENT );
        }
        
        if( reader.getState() != XMLReader.END)
        {
            reader.skipElement();
        }
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackOrderLine instance = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackOrderLine)obj;
        
    }
    public void doSerializeAnyAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackOrderLine instance = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackOrderLine)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackOrderLine instance = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.PackOrderLine)obj;
        
        if (instance.getId() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getId(), ns1_id_QNAME, null, writer, context);
        }
        if (instance.getProduct_code() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getProduct_code(), ns1_product_code_QNAME, null, writer, context);
        }
        if (instance.getProduct_description() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getProduct_description(), ns1_product_description_QNAME, null, writer, context);
        }
        if (instance.getQuantity() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getQuantity(), ns1_quantity_QNAME, null, writer, context);
        }
        if (instance.getQuantity_unit_measure() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getQuantity_unit_measure(), ns1_quantity_unit_measure_QNAME, null, writer, context);
        }
        if (instance.getWeight() != null) {
            myns1_Weight__Weight_LiteralSerializer.setNullable( false );
            myns1_Weight__Weight_LiteralSerializer.serialize(instance.getWeight(), ns1_weight_QNAME, null, writer, context);
        }
        if (instance.getDimensions() != null) {
            myns1_Dimensions__Dimensions_LiteralSerializer.setNullable( false );
            myns1_Dimensions__Dimensions_LiteralSerializer.serialize(instance.getDimensions(), ns1_dimensions_QNAME, null, writer, context);
        }
        if (instance.getFull_pallet() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getFull_pallet(), ns1_full_pallet_QNAME, null, writer, context);
        }
        if (instance.getShippable_container() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getShippable_container(), ns1_shippable_container_QNAME, null, writer, context);
        }
        if (instance.getLoad_direction() != null) {
            myns1_LoadDirection__LoadDirection_LiteralSerializer.setNullable( false );
            myns1_LoadDirection__LoadDirection_LiteralSerializer.serialize(instance.getLoad_direction(), ns1_load_direction_QNAME, null, writer, context);
        }
        if (instance.getPack_method() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getPack_method(), ns1_pack_method_QNAME, null, writer, context);
        }
        if (instance.getNesting() != null) {
            myns1_Nesting__Nesting_LiteralSerializer.setNullable( false );
            myns1_Nesting__Nesting_LiteralSerializer.serialize(instance.getNesting(), ns1_nesting_QNAME, null, writer, context);
        }
        if (instance.getAdditional_information() != null) {
            ns2_anyType_TYPE_QNAMEjava$2e$lang$2e$Object_Serializer.setNullable( false );
            ns2_anyType_TYPE_QNAMEjava$2e$lang$2e$Object_Serializer.serialize(instance.getAdditional_information(), ns1_additional_information_QNAME, null, writer, context);
        }
        if (instance.getBundle_only() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getBundle_only(), ns1_bundle_only_QNAME, null, writer, context);
        }
        if (instance.getKeep_together() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getKeep_together(), ns1_keep_together_QNAME, null, writer, context);
        }
        if (instance.getFoldable() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getFoldable(), ns1_foldable_QNAME, null, writer, context);
        }
        if (instance.getBundle_or_box() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getBundle_or_box(), ns1_bundle_or_box_QNAME, null, writer, context);
        }
        if (instance.getMix_class_id() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getMix_class_id(), ns1_mix_class_id_QNAME, null, writer, context);
        }
        if (instance.getGroup_id() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getGroup_id(), ns1_group_id_QNAME, null, writer, context);
        }
        if (instance.getMaster_pack_min_qty() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getMaster_pack_min_qty(), ns1_master_pack_min_qty_QNAME, null, writer, context);
        }
        if (instance.getMaster_pack_max_qty() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getMaster_pack_max_qty(), ns1_master_pack_max_qty_QNAME, null, writer, context);
        }
        if (instance.getMaster_pack_length() != null) {
            myns2__double__java_lang_Double_Double_Serializer.setNullable( false );
            myns2__double__java_lang_Double_Double_Serializer.serialize(instance.getMaster_pack_length(), ns1_master_pack_length_QNAME, null, writer, context);
        }
        if (instance.getMaster_pack_width() != null) {
            myns2__double__java_lang_Double_Double_Serializer.setNullable( false );
            myns2__double__java_lang_Double_Double_Serializer.serialize(instance.getMaster_pack_width(), ns1_master_pack_width_QNAME, null, writer, context);
        }
        if (instance.getMaster_pack_height() != null) {
            myns2__double__java_lang_Double_Double_Serializer.setNullable( false );
            myns2__double__java_lang_Double_Double_Serializer.serialize(instance.getMaster_pack_height(), ns1_master_pack_height_QNAME, null, writer, context);
        }
        if (instance.getMaster_pack_weight() != null) {
            myns2__double__java_lang_Double_Double_Serializer.setNullable( false );
            myns2__double__java_lang_Double_Double_Serializer.serialize(instance.getMaster_pack_weight(), ns1_master_pack_weight_QNAME, null, writer, context);
        }
    }
}
