// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.runtime;

import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.encoding.literal.DetailFragmentDeserializer;
import oracle.j2ee.ws.common.encoding.simpletype.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.xml.UUID;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.xml.soap.SOAPMessage;
import javax.xml.soap.AttachmentPart;

public class CommodityContent_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable {
    private static final QName ns1_user_data_1_QNAME = new QName("http://PSI.Wcf", "user_data_1");
    private static final QName ns1_ArrayOfSoxDictionaryItem_TYPE_QNAME = new QName("http://PSI.Wcf", "ArrayOfSoxDictionaryItem");
    private CombinedSerializer myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer;
    private static final QName ns1_user_data_2_QNAME = new QName("http://PSI.Wcf", "user_data_2");
    private static final QName ns1_user_data_3_QNAME = new QName("http://PSI.Wcf", "user_data_3");
    private static final QName ns1_user_data_4_QNAME = new QName("http://PSI.Wcf", "user_data_4");
    private static final QName ns1_user_data_5_QNAME = new QName("http://PSI.Wcf", "user_data_5");
    private static final QName ns1_cert_of_origin_method_QNAME = new QName("http://PSI.Wcf", "cert_of_origin_method");
    private static final QName ns2_int_TYPE_QNAME = SchemaConstants.QNAME_TYPE_INT;
    private CombinedSerializer myns2__int__java_lang_Integer_Int_Serializer;
    private static final QName ns1_commodity_condition_QNAME = new QName("http://PSI.Wcf", "commodity_condition");
    private static final QName ns1_ddtc_eligible_party_QNAME = new QName("http://PSI.Wcf", "ddtc_eligible_party");
    private static final QName ns2_boolean_TYPE_QNAME = SchemaConstants.QNAME_TYPE_BOOLEAN;
    private CombinedSerializer myns2__boolean__java_lang_Boolean_Boolean_Serializer;
    private static final QName ns1_ddtc_quantity_QNAME = new QName("http://PSI.Wcf", "ddtc_quantity");
    private static final QName ns2_long_TYPE_QNAME = SchemaConstants.QNAME_TYPE_LONG;
    private CombinedSerializer myns2__long__java_lang_Long_Long_Serializer;
    private static final QName ns1_ddtc_registration_number_QNAME = new QName("http://PSI.Wcf", "ddtc_registration_number");
    private static final QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer myns2_string__java_lang_String_String_Serializer;
    private static final QName ns1_ddtc_sme_QNAME = new QName("http://PSI.Wcf", "ddtc_sme");
    private static final QName ns1_ddtc_unit_measure_QNAME = new QName("http://PSI.Wcf", "ddtc_unit_measure");
    private static final QName ns1_ddtc_usml_category_code_QNAME = new QName("http://PSI.Wcf", "ddtc_usml_category_code");
    private static final QName ns1_description_QNAME = new QName("http://PSI.Wcf", "description");
    private static final QName ns1_eccn_QNAME = new QName("http://PSI.Wcf", "eccn");
    private static final QName ns1_export_harmonized_code_QNAME = new QName("http://PSI.Wcf", "export_harmonized_code");
    private static final QName ns1_export_information_code_QNAME = new QName("http://PSI.Wcf", "export_information_code");
    private static final QName ns1_export_quantity_1_QNAME = new QName("http://PSI.Wcf", "export_quantity_1");
    private static final QName ns2_decimal_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DECIMAL;
    private CombinedSerializer myns2_decimal__java_math_BigDecimal_Decimal_Serializer;
    private static final QName ns1_export_quantity_2_QNAME = new QName("http://PSI.Wcf", "export_quantity_2");
    private static final QName ns1_export_quantity_unit_measure_1_QNAME = new QName("http://PSI.Wcf", "export_quantity_unit_measure_1");
    private static final QName ns1_export_quantity_unit_measure_2_QNAME = new QName("http://PSI.Wcf", "export_quantity_unit_measure_2");
    private static final QName ns1_harmonized_code_QNAME = new QName("http://PSI.Wcf", "harmonized_code");
    private static final QName ns1_license_expiration_date_QNAME = new QName("http://PSI.Wcf", "license_expiration_date");
    private static final QName ns1_license_number_QNAME = new QName("http://PSI.Wcf", "license_number");
    private static final QName ns1_license_type_QNAME = new QName("http://PSI.Wcf", "license_type");
    private static final QName ns1_license_unit_value_QNAME = new QName("http://PSI.Wcf", "license_unit_value");
    private static final QName ns1_license_unit_value_unit_QNAME = new QName("http://PSI.Wcf", "license_unit_value_unit");
    private static final QName ns1_manufacturer_id_QNAME = new QName("http://PSI.Wcf", "manufacturer_id");
    private static final QName ns1_nafta_preference_criterion_QNAME = new QName("http://PSI.Wcf", "nafta_preference_criterion");
    private static final QName ns1_nafta_producer_QNAME = new QName("http://PSI.Wcf", "nafta_producer");
    private static final QName ns1_nafta_rvc_avg_end_date_QNAME = new QName("http://PSI.Wcf", "nafta_rvc_avg_end_date");
    private static final QName ns1_nafta_rvc_avg_start_date_QNAME = new QName("http://PSI.Wcf", "nafta_rvc_avg_start_date");
    private static final QName ns1_nafta_rvc_method_QNAME = new QName("http://PSI.Wcf", "nafta_rvc_method");
    private static final QName ns1_origin_QNAME = new QName("http://PSI.Wcf", "origin");
    private static final QName ns1_NameAddress_TYPE_QNAME = new QName("http://PSI.Wcf", "NameAddress");
    private CombinedSerializer myns1_NameAddress__NameAddress_InterfaceSOAPSerializer;
    private static final QName ns1_origin_country_QNAME = new QName("http://PSI.Wcf", "origin_country");
    private static final QName ns1_origin_description_QNAME = new QName("http://PSI.Wcf", "origin_description");
    private static final QName ns1_origin_tax_id_QNAME = new QName("http://PSI.Wcf", "origin_tax_id");
    private static final QName ns1_product_code_QNAME = new QName("http://PSI.Wcf", "product_code");
    private static final QName ns1_quantity_QNAME = new QName("http://PSI.Wcf", "quantity");
    private static final QName ns1_quantity_unit_measure_QNAME = new QName("http://PSI.Wcf", "quantity_unit_measure");
    private static final QName ns1_restricted_article_type_QNAME = new QName("http://PSI.Wcf", "restricted_article_type");
    private static final QName ns1_sed_method_QNAME = new QName("http://PSI.Wcf", "sed_method");
    private static final QName ns1_unit_value_QNAME = new QName("http://PSI.Wcf", "unit_value");
    private static final QName ns1_unit_value_unit_QNAME = new QName("http://PSI.Wcf", "unit_value_unit");
    private static final QName ns1_unit_weight_QNAME = new QName("http://PSI.Wcf", "unit_weight");
    private static final QName ns1_unit_weight_unit_QNAME = new QName("http://PSI.Wcf", "unit_weight_unit");
    
    public CommodityContent_LiteralSerializer(QName type) {
        this(type,  false);
    }
    
    public CommodityContent_LiteralSerializer(QName type, boolean encodeType) {
        super(type, true, encodeType);
        setSOAPVersion(SOAPVersion.SOAP_11);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem.class, ns1_ArrayOfSoxDictionaryItem_TYPE_QNAME);
        myns2__int__java_lang_Integer_Int_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.Integer.class, ns2_int_TYPE_QNAME);
        myns2__boolean__java_lang_Boolean_Boolean_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.Boolean.class, ns2_boolean_TYPE_QNAME);
        myns2__long__java_lang_Long_Long_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.Long.class, ns2_long_TYPE_QNAME);
        myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.String.class, ns2_string_TYPE_QNAME);
        myns2_decimal__java_math_BigDecimal_Decimal_Serializer = (CombinedSerializer)registry.getSerializer("", java.math.BigDecimal.class, ns2_decimal_TYPE_QNAME);
        myns1_NameAddress__NameAddress_InterfaceSOAPSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress.class, ns1_NameAddress_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityContent instance = new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityContent();
        java.lang.Object member=null;
        QName elementName;
        List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        java.util.HashSet requiredElements = new java.util.HashSet();
        for (int memberIndex = 0; memberIndex <46; memberIndex++) {
            elementName = reader.getName();
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_user_data_1_QNAME))) {
                myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.deserialize(ns1_user_data_1_QNAME, reader, context);
                requiredElements.remove("user_data_1");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUser_data_1((member == null)? null : ((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_user_data_2_QNAME))) {
                myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.deserialize(ns1_user_data_2_QNAME, reader, context);
                requiredElements.remove("user_data_2");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUser_data_2((member == null)? null : ((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_user_data_3_QNAME))) {
                myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.deserialize(ns1_user_data_3_QNAME, reader, context);
                requiredElements.remove("user_data_3");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUser_data_3((member == null)? null : ((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_user_data_4_QNAME))) {
                myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.deserialize(ns1_user_data_4_QNAME, reader, context);
                requiredElements.remove("user_data_4");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUser_data_4((member == null)? null : ((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_user_data_5_QNAME))) {
                myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.deserialize(ns1_user_data_5_QNAME, reader, context);
                requiredElements.remove("user_data_5");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUser_data_5((member == null)? null : ((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_cert_of_origin_method_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_cert_of_origin_method_QNAME, reader, context);
                requiredElements.remove("cert_of_origin_method");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCert_of_origin_method((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_commodity_condition_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_commodity_condition_QNAME, reader, context);
                requiredElements.remove("commodity_condition");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCommodity_condition((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ddtc_eligible_party_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_ddtc_eligible_party_QNAME, reader, context);
                requiredElements.remove("ddtc_eligible_party");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setDdtc_eligible_party((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ddtc_quantity_QNAME))) {
                myns2__long__java_lang_Long_Long_Serializer.setNullable( false );
                member = myns2__long__java_lang_Long_Long_Serializer.deserialize(ns1_ddtc_quantity_QNAME, reader, context);
                requiredElements.remove("ddtc_quantity");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setDdtc_quantity((java.lang.Long)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ddtc_registration_number_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ddtc_registration_number_QNAME, reader, context);
                requiredElements.remove("ddtc_registration_number");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setDdtc_registration_number((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ddtc_sme_QNAME))) {
                myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_ddtc_sme_QNAME, reader, context);
                requiredElements.remove("ddtc_sme");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setDdtc_sme((java.lang.Boolean)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ddtc_unit_measure_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ddtc_unit_measure_QNAME, reader, context);
                requiredElements.remove("ddtc_unit_measure");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setDdtc_unit_measure((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ddtc_usml_category_code_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ddtc_usml_category_code_QNAME, reader, context);
                requiredElements.remove("ddtc_usml_category_code");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setDdtc_usml_category_code((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_description_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_description_QNAME, reader, context);
                requiredElements.remove("description");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setDescription((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_eccn_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_eccn_QNAME, reader, context);
                requiredElements.remove("eccn");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setEccn((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_export_harmonized_code_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_export_harmonized_code_QNAME, reader, context);
                requiredElements.remove("export_harmonized_code");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setExport_harmonized_code((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_export_information_code_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_export_information_code_QNAME, reader, context);
                requiredElements.remove("export_information_code");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setExport_information_code((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_export_quantity_1_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_export_quantity_1_QNAME, reader, context);
                requiredElements.remove("export_quantity_1");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setExport_quantity_1((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_export_quantity_2_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_export_quantity_2_QNAME, reader, context);
                requiredElements.remove("export_quantity_2");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setExport_quantity_2((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_export_quantity_unit_measure_1_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_export_quantity_unit_measure_1_QNAME, reader, context);
                requiredElements.remove("export_quantity_unit_measure_1");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setExport_quantity_unit_measure_1((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_export_quantity_unit_measure_2_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_export_quantity_unit_measure_2_QNAME, reader, context);
                requiredElements.remove("export_quantity_unit_measure_2");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setExport_quantity_unit_measure_2((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_harmonized_code_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_harmonized_code_QNAME, reader, context);
                requiredElements.remove("harmonized_code");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHarmonized_code((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_license_expiration_date_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_license_expiration_date_QNAME, reader, context);
                requiredElements.remove("license_expiration_date");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setLicense_expiration_date((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_license_number_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_license_number_QNAME, reader, context);
                requiredElements.remove("license_number");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setLicense_number((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_license_type_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_license_type_QNAME, reader, context);
                requiredElements.remove("license_type");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setLicense_type((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_license_unit_value_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_license_unit_value_QNAME, reader, context);
                requiredElements.remove("license_unit_value");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setLicense_unit_value((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_license_unit_value_unit_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_license_unit_value_unit_QNAME, reader, context);
                requiredElements.remove("license_unit_value_unit");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setLicense_unit_value_unit((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_manufacturer_id_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_manufacturer_id_QNAME, reader, context);
                requiredElements.remove("manufacturer_id");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setManufacturer_id((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_nafta_preference_criterion_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_nafta_preference_criterion_QNAME, reader, context);
                requiredElements.remove("nafta_preference_criterion");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNafta_preference_criterion((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_nafta_producer_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_nafta_producer_QNAME, reader, context);
                requiredElements.remove("nafta_producer");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNafta_producer((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_nafta_rvc_avg_end_date_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_nafta_rvc_avg_end_date_QNAME, reader, context);
                requiredElements.remove("nafta_rvc_avg_end_date");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNafta_rvc_avg_end_date((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_nafta_rvc_avg_start_date_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_nafta_rvc_avg_start_date_QNAME, reader, context);
                requiredElements.remove("nafta_rvc_avg_start_date");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNafta_rvc_avg_start_date((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_nafta_rvc_method_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_nafta_rvc_method_QNAME, reader, context);
                requiredElements.remove("nafta_rvc_method");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNafta_rvc_method((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_origin_QNAME))) {
                myns1_NameAddress__NameAddress_InterfaceSOAPSerializer.setNullable( false );
                member = myns1_NameAddress__NameAddress_InterfaceSOAPSerializer.deserialize(ns1_origin_QNAME, reader, context);
                requiredElements.remove("origin");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setOrigin((com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.NameAddress)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_origin_country_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_origin_country_QNAME, reader, context);
                requiredElements.remove("origin_country");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setOrigin_country((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_origin_description_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_origin_description_QNAME, reader, context);
                requiredElements.remove("origin_description");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setOrigin_description((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_origin_tax_id_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_origin_tax_id_QNAME, reader, context);
                requiredElements.remove("origin_tax_id");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setOrigin_tax_id((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_product_code_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_product_code_QNAME, reader, context);
                requiredElements.remove("product_code");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setProduct_code((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_quantity_QNAME))) {
                myns2__long__java_lang_Long_Long_Serializer.setNullable( false );
                member = myns2__long__java_lang_Long_Long_Serializer.deserialize(ns1_quantity_QNAME, reader, context);
                requiredElements.remove("quantity");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setQuantity((java.lang.Long)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_quantity_unit_measure_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_quantity_unit_measure_QNAME, reader, context);
                requiredElements.remove("quantity_unit_measure");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setQuantity_unit_measure((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_restricted_article_type_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_restricted_article_type_QNAME, reader, context);
                requiredElements.remove("restricted_article_type");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setRestricted_article_type((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_sed_method_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_sed_method_QNAME, reader, context);
                requiredElements.remove("sed_method");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setSed_method((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_unit_value_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_unit_value_QNAME, reader, context);
                requiredElements.remove("unit_value");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUnit_value((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_unit_value_unit_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_unit_value_unit_QNAME, reader, context);
                requiredElements.remove("unit_value_unit");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUnit_value_unit((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_unit_weight_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_unit_weight_QNAME, reader, context);
                requiredElements.remove("unit_weight");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUnit_weight((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_unit_weight_unit_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_unit_weight_unit_QNAME, reader, context);
                requiredElements.remove("unit_weight_unit");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUnit_weight_unit((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
        }
        if (!requiredElements.isEmpty()) {
            throw new DeserializationException( "literal.expectedElementName" , requiredElements.iterator().next().toString(), DeserializationException.FAULT_CODE_CLIENT );
        }
        
        if( reader.getState() != XMLReader.END)
        {
            reader.skipElement();
        }
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityContent instance = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityContent)obj;
        
    }
    public void doSerializeAnyAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityContent instance = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityContent)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityContent instance = (com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.CommodityContent)obj;
        
        if (instance.getUser_data_1() != null) {
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem instanceGetUser_data_1_arrayWrapper = (instance.getUser_data_1() == null) ? null : new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem(instance.getUser_data_1());
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.serialize(instanceGetUser_data_1_arrayWrapper, ns1_user_data_1_QNAME, null, writer, context);
        }
        if (instance.getUser_data_2() != null) {
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem instanceGetUser_data_2_arrayWrapper = (instance.getUser_data_2() == null) ? null : new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem(instance.getUser_data_2());
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.serialize(instanceGetUser_data_2_arrayWrapper, ns1_user_data_2_QNAME, null, writer, context);
        }
        if (instance.getUser_data_3() != null) {
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem instanceGetUser_data_3_arrayWrapper = (instance.getUser_data_3() == null) ? null : new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem(instance.getUser_data_3());
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.serialize(instanceGetUser_data_3_arrayWrapper, ns1_user_data_3_QNAME, null, writer, context);
        }
        if (instance.getUser_data_4() != null) {
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem instanceGetUser_data_4_arrayWrapper = (instance.getUser_data_4() == null) ? null : new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem(instance.getUser_data_4());
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.serialize(instanceGetUser_data_4_arrayWrapper, ns1_user_data_4_QNAME, null, writer, context);
        }
        if (instance.getUser_data_5() != null) {
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.setNullable( false );
            com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem instanceGetUser_data_5_arrayWrapper = (instance.getUser_data_5() == null) ? null : new com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf.ArrayOfSoxDictionaryItem(instance.getUser_data_5());
            myns1_ArrayOfSoxDictionaryItem__ArrayOfSoxDictionaryItem_LiteralSerializer.serialize(instanceGetUser_data_5_arrayWrapper, ns1_user_data_5_QNAME, null, writer, context);
        }
        if (instance.getCert_of_origin_method() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getCert_of_origin_method(), ns1_cert_of_origin_method_QNAME, null, writer, context);
        }
        if (instance.getCommodity_condition() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getCommodity_condition(), ns1_commodity_condition_QNAME, null, writer, context);
        }
        if (instance.getDdtc_eligible_party() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getDdtc_eligible_party(), ns1_ddtc_eligible_party_QNAME, null, writer, context);
        }
        if (instance.getDdtc_quantity() != null) {
            myns2__long__java_lang_Long_Long_Serializer.setNullable( false );
            myns2__long__java_lang_Long_Long_Serializer.serialize(instance.getDdtc_quantity(), ns1_ddtc_quantity_QNAME, null, writer, context);
        }
        if (instance.getDdtc_registration_number() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getDdtc_registration_number(), ns1_ddtc_registration_number_QNAME, null, writer, context);
        }
        if (instance.getDdtc_sme() != null) {
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.setNullable( false );
            myns2__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getDdtc_sme(), ns1_ddtc_sme_QNAME, null, writer, context);
        }
        if (instance.getDdtc_unit_measure() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getDdtc_unit_measure(), ns1_ddtc_unit_measure_QNAME, null, writer, context);
        }
        if (instance.getDdtc_usml_category_code() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getDdtc_usml_category_code(), ns1_ddtc_usml_category_code_QNAME, null, writer, context);
        }
        if (instance.getDescription() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getDescription(), ns1_description_QNAME, null, writer, context);
        }
        if (instance.getEccn() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getEccn(), ns1_eccn_QNAME, null, writer, context);
        }
        if (instance.getExport_harmonized_code() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getExport_harmonized_code(), ns1_export_harmonized_code_QNAME, null, writer, context);
        }
        if (instance.getExport_information_code() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getExport_information_code(), ns1_export_information_code_QNAME, null, writer, context);
        }
        if (instance.getExport_quantity_1() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getExport_quantity_1(), ns1_export_quantity_1_QNAME, null, writer, context);
        }
        if (instance.getExport_quantity_2() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getExport_quantity_2(), ns1_export_quantity_2_QNAME, null, writer, context);
        }
        if (instance.getExport_quantity_unit_measure_1() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getExport_quantity_unit_measure_1(), ns1_export_quantity_unit_measure_1_QNAME, null, writer, context);
        }
        if (instance.getExport_quantity_unit_measure_2() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getExport_quantity_unit_measure_2(), ns1_export_quantity_unit_measure_2_QNAME, null, writer, context);
        }
        if (instance.getHarmonized_code() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getHarmonized_code(), ns1_harmonized_code_QNAME, null, writer, context);
        }
        if (instance.getLicense_expiration_date() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getLicense_expiration_date(), ns1_license_expiration_date_QNAME, null, writer, context);
        }
        if (instance.getLicense_number() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getLicense_number(), ns1_license_number_QNAME, null, writer, context);
        }
        if (instance.getLicense_type() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getLicense_type(), ns1_license_type_QNAME, null, writer, context);
        }
        if (instance.getLicense_unit_value() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getLicense_unit_value(), ns1_license_unit_value_QNAME, null, writer, context);
        }
        if (instance.getLicense_unit_value_unit() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getLicense_unit_value_unit(), ns1_license_unit_value_unit_QNAME, null, writer, context);
        }
        if (instance.getManufacturer_id() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getManufacturer_id(), ns1_manufacturer_id_QNAME, null, writer, context);
        }
        if (instance.getNafta_preference_criterion() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getNafta_preference_criterion(), ns1_nafta_preference_criterion_QNAME, null, writer, context);
        }
        if (instance.getNafta_producer() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getNafta_producer(), ns1_nafta_producer_QNAME, null, writer, context);
        }
        if (instance.getNafta_rvc_avg_end_date() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getNafta_rvc_avg_end_date(), ns1_nafta_rvc_avg_end_date_QNAME, null, writer, context);
        }
        if (instance.getNafta_rvc_avg_start_date() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getNafta_rvc_avg_start_date(), ns1_nafta_rvc_avg_start_date_QNAME, null, writer, context);
        }
        if (instance.getNafta_rvc_method() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getNafta_rvc_method(), ns1_nafta_rvc_method_QNAME, null, writer, context);
        }
        if (instance.getOrigin() != null) {
            myns1_NameAddress__NameAddress_InterfaceSOAPSerializer.setNullable( false );
            myns1_NameAddress__NameAddress_InterfaceSOAPSerializer.serialize(instance.getOrigin(), ns1_origin_QNAME, null, writer, context);
        }
        if (instance.getOrigin_country() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getOrigin_country(), ns1_origin_country_QNAME, null, writer, context);
        }
        if (instance.getOrigin_description() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getOrigin_description(), ns1_origin_description_QNAME, null, writer, context);
        }
        if (instance.getOrigin_tax_id() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getOrigin_tax_id(), ns1_origin_tax_id_QNAME, null, writer, context);
        }
        if (instance.getProduct_code() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getProduct_code(), ns1_product_code_QNAME, null, writer, context);
        }
        if (instance.getQuantity() != null) {
            myns2__long__java_lang_Long_Long_Serializer.setNullable( false );
            myns2__long__java_lang_Long_Long_Serializer.serialize(instance.getQuantity(), ns1_quantity_QNAME, null, writer, context);
        }
        if (instance.getQuantity_unit_measure() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getQuantity_unit_measure(), ns1_quantity_unit_measure_QNAME, null, writer, context);
        }
        if (instance.getRestricted_article_type() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getRestricted_article_type(), ns1_restricted_article_type_QNAME, null, writer, context);
        }
        if (instance.getSed_method() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getSed_method(), ns1_sed_method_QNAME, null, writer, context);
        }
        if (instance.getUnit_value() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getUnit_value(), ns1_unit_value_QNAME, null, writer, context);
        }
        if (instance.getUnit_value_unit() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getUnit_value_unit(), ns1_unit_value_unit_QNAME, null, writer, context);
        }
        if (instance.getUnit_weight() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getUnit_weight(), ns1_unit_weight_QNAME, null, writer, context);
        }
        if (instance.getUnit_weight_unit() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getUnit_weight_unit(), ns1_unit_weight_unit_QNAME, null, writer, context);
        }
    }
}
