// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf;


public class Image_type implements java.io.Serializable {
    private java.lang.String value;
    private static final String _NONEString = "NONE";
    private static final String _PNGString = "PNG";
    private static final String _BMPString = "BMP";
    private static final String _GIFString = "GIF";
    private static final String _JPEGString = "JPEG";
    private static final String _TIFFString = "TIFF";
    
    public static final java.lang.String _NONE = new java.lang.String(_NONEString);
    public static final java.lang.String _PNG = new java.lang.String(_PNGString);
    public static final java.lang.String _BMP = new java.lang.String(_BMPString);
    public static final java.lang.String _GIF = new java.lang.String(_GIFString);
    public static final java.lang.String _JPEG = new java.lang.String(_JPEGString);
    public static final java.lang.String _TIFF = new java.lang.String(_TIFFString);
    
    public static final Image_type NONE = new Image_type(_NONE);
    public static final Image_type PNG = new Image_type(_PNG);
    public static final Image_type BMP = new Image_type(_BMP);
    public static final Image_type GIF = new Image_type(_GIF);
    public static final Image_type JPEG = new Image_type(_JPEG);
    public static final Image_type TIFF = new Image_type(_TIFF);
    
    protected Image_type(java.lang.String value) {
        this.value = value;
    }
    
    public java.lang.String getValue() {
        return value;
    }
    
    public static Image_type fromValue(java.lang.String value)
        throws java.lang.IllegalStateException {
        if (NONE.value.equals(value)) {
            return NONE;
        }if (PNG.value.equals(value)) {
            return PNG;
        }if (BMP.value.equals(value)) {
            return BMP;
        }if (GIF.value.equals(value)) {
            return GIF;
        }if (JPEG.value.equals(value)) {
            return JPEG;
        }if (TIFF.value.equals(value)) {
            return TIFF;
        }
        throw new IllegalArgumentException();
    }
    
    public static Image_type fromString(String value)
        throws java.lang.IllegalStateException {
        if (value.equals(_NONEString)) {
            return NONE;
        }if (value.equals(_PNGString)) {
            return PNG;
        }if (value.equals(_BMPString)) {
            return BMP;
        }if (value.equals(_GIFString)) {
            return GIF;
        }if (value.equals(_JPEGString)) {
            return JPEG;
        }if (value.equals(_TIFFString)) {
            return TIFF;
        }
        throw new IllegalArgumentException();
    }
    
    public String toString() {
        return value.toString();
    }
    
    public boolean equals(java.lang.Object obj) {
        if (!(obj instanceof Image_type)) {
            return false;
        }
        return ((Image_type)obj).value.equals(value);
    }
    
    public int hashCode() {
        return value.hashCode();
    }
}
