// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.shipexec.proxy.types.psi.wcf;


public class ProcessBatchMode implements java.io.Serializable {
    private java.lang.String value;
    private static final String _LoadString = "Load";
    private static final String _ShipString = "Ship";
    private static final String _ShipAndPrintString = "ShipAndPrint";
    private static final String _PrintString = "Print";
    
    public static final java.lang.String _Load = new java.lang.String(_LoadString);
    public static final java.lang.String _Ship = new java.lang.String(_ShipString);
    public static final java.lang.String _ShipAndPrint = new java.lang.String(_ShipAndPrintString);
    public static final java.lang.String _Print = new java.lang.String(_PrintString);
    
    public static final ProcessBatchMode Load = new ProcessBatchMode(_Load);
    public static final ProcessBatchMode Ship = new ProcessBatchMode(_Ship);
    public static final ProcessBatchMode ShipAndPrint = new ProcessBatchMode(_ShipAndPrint);
    public static final ProcessBatchMode Print = new ProcessBatchMode(_Print);
    
    protected ProcessBatchMode(java.lang.String value) {
        this.value = value;
    }
    
    public java.lang.String getValue() {
        return value;
    }
    
    public static ProcessBatchMode fromValue(java.lang.String value)
        throws java.lang.IllegalStateException {
        if (Load.value.equals(value)) {
            return Load;
        }if (Ship.value.equals(value)) {
            return Ship;
        }if (ShipAndPrint.value.equals(value)) {
            return ShipAndPrint;
        }if (Print.value.equals(value)) {
            return Print;
        }
        throw new IllegalArgumentException();
    }
    
    public static ProcessBatchMode fromString(String value)
        throws java.lang.IllegalStateException {
        if (value.equals(_LoadString)) {
            return Load;
        }if (value.equals(_ShipString)) {
            return Ship;
        }if (value.equals(_ShipAndPrintString)) {
            return ShipAndPrint;
        }if (value.equals(_PrintString)) {
            return Print;
        }
        throw new IllegalArgumentException();
    }
    
    public String toString() {
        return value.toString();
    }
    
    public boolean equals(java.lang.Object obj) {
        if (!(obj instanceof ProcessBatchMode)) {
            return false;
        }
        return ((ProcessBatchMode)obj).value.equals(value);
    }
    
    public int hashCode() {
        return value.hashCode();
    }
}
