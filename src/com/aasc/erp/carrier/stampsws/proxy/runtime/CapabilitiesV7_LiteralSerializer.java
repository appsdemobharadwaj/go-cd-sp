// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.stampsws.proxy.runtime;

import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.encoding.literal.DetailFragmentDeserializer;
import oracle.j2ee.ws.common.encoding.simpletype.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.xml.UUID;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.xml.soap.SOAPMessage;
import javax.xml.soap.AttachmentPart;

public class CapabilitiesV7_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable {
    private static final QName ns1_CanPrintShipping_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanPrintShipping");
    private static final QName ns2_boolean_TYPE_QNAME = SchemaConstants.QNAME_TYPE_BOOLEAN;
    private CombinedSerializer myns2__boolean__boolean_Boolean_Serializer;
    private static final QName ns1_CanUseCostCodes_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanUseCostCodes");
    private static final QName ns1_CanUseHiddenPostage_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanUseHiddenPostage");
    private static final QName ns1_CanPurchaseSDCInsurance_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanPurchaseSDCInsurance");
    private static final QName ns1_CanPrintMemoOnShippingLabel_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanPrintMemoOnShippingLabel");
    private static final QName ns1_CanPrintInternational_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanPrintInternational");
    private static final QName ns1_CanPurchasePostage_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanPurchasePostage");
    private static final QName ns1_CanEditCostCodes_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanEditCostCodes");
    private static final QName ns1_MustUseCostCodes_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "MustUseCostCodes");
    private static final QName ns1_CanViewOnlineReports_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanViewOnlineReports");
    private static final QName ns1_PerPrintLimit_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "PerPrintLimit");
    private static final QName ns2_decimal_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DECIMAL;
    private CombinedSerializer myns2_decimal__java_math_BigDecimal_Decimal_Serializer;
    private static final QName ns1_AllowAllMailClasses_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "AllowAllMailClasses");
    private static final QName ns1_CanPrintReturnShippingLabel_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanPrintReturnShippingLabel");
    private static final QName ns1_CanManageUsers_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanManageUsers");
    private static final QName ns1_CanPrintNetStamps_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanPrintNetStamps");
    private static final QName ns1_CanEmailNotifications_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanEmailNotifications");
    private static final QName ns1_CanViewReports_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanViewReports");
    private static final QName ns1_CanCreateSCANForm_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanCreateSCANForm");
    private static final QName ns1_AllowRestrictedSheets_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "AllowRestrictedSheets");
    private static final QName ns1_HideUnavailableFeatures_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "HideUnavailableFeatures");
    private static final QName ns1_WebPostage_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "WebPostage");
    private static final QName ns1_CanViewInsuranceHistory_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanViewInsuranceHistory");
    private static final QName ns1_CanChangeServicePlan_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanChangeServicePlan");
    private static final QName ns1_HideEstimatedDeliveryTime_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "HideEstimatedDeliveryTime");
    private static final QName ns1_CanPurchaseFromStore_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanPurchaseFromStore");
    private static final QName ns1_CanChangePhysicalAddress_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanChangePhysicalAddress");
    private static final QName ns1_CanChangePaymentMethod_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanChangePaymentMethod");
    private static final QName ns1_CanChangeContactInfo_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanChangeContactInfo");
    private static final QName ns1_CanViewAdvancedReporting_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanViewAdvancedReporting");
    private static final QName ns1_IsIBIPEnabled_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "IsIBIPEnabled");
    private static final QName ns1_CanCreateCriticalMail_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanCreateCriticalMail");
    private static final QName ns1_CanUseInvoicing_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanUseInvoicing");
    private static final QName ns1_CanUseCertifiedMail_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanUseCertifiedMail");
    private static final QName ns1_CanPrintAllIndiciumValues_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CanPrintAllIndiciumValues");
    
    public CapabilitiesV7_LiteralSerializer(QName type) {
        this(type,  false);
    }
    
    public CapabilitiesV7_LiteralSerializer(QName type, boolean encodeType) {
        super(type, true, encodeType);
        setSOAPVersion(SOAPVersion.SOAP_11);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        myns2__boolean__boolean_Boolean_Serializer = (CombinedSerializer)registry.getSerializer("", boolean.class, ns2_boolean_TYPE_QNAME);
        myns2_decimal__java_math_BigDecimal_Decimal_Serializer = (CombinedSerializer)registry.getSerializer("", java.math.BigDecimal.class, ns2_decimal_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CapabilitiesV7 instance = new com.aasc.erp.carrier.stampsws.proxy.CapabilitiesV7();
        java.lang.Object member=null;
        QName elementName;
        List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        java.util.HashSet requiredElements = new java.util.HashSet();
        requiredElements.add("CanPrintShipping");
        requiredElements.add("CanUseCostCodes");
        requiredElements.add("CanUseHiddenPostage");
        requiredElements.add("CanPurchaseSDCInsurance");
        requiredElements.add("CanPrintMemoOnShippingLabel");
        requiredElements.add("CanPrintInternational");
        requiredElements.add("CanPurchasePostage");
        requiredElements.add("CanEditCostCodes");
        requiredElements.add("MustUseCostCodes");
        requiredElements.add("CanViewOnlineReports");
        requiredElements.add("PerPrintLimit");
        requiredElements.add("AllowAllMailClasses");
        requiredElements.add("CanPrintReturnShippingLabel");
        requiredElements.add("CanManageUsers");
        requiredElements.add("CanPrintNetStamps");
        requiredElements.add("CanEmailNotifications");
        requiredElements.add("CanViewReports");
        requiredElements.add("CanCreateSCANForm");
        requiredElements.add("AllowRestrictedSheets");
        requiredElements.add("HideUnavailableFeatures");
        requiredElements.add("WebPostage");
        requiredElements.add("CanViewInsuranceHistory");
        requiredElements.add("CanChangeServicePlan");
        requiredElements.add("HideEstimatedDeliveryTime");
        requiredElements.add("CanPurchaseFromStore");
        requiredElements.add("CanChangePhysicalAddress");
        requiredElements.add("CanChangePaymentMethod");
        requiredElements.add("CanChangeContactInfo");
        requiredElements.add("CanViewAdvancedReporting");
        requiredElements.add("IsIBIPEnabled");
        requiredElements.add("CanCreateCriticalMail");
        requiredElements.add("CanUseInvoicing");
        requiredElements.add("CanUseCertifiedMail");
        requiredElements.add("CanPrintAllIndiciumValues");
        for (int memberIndex = 0; memberIndex <34; memberIndex++) {
            elementName = reader.getName();
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanPrintShipping_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanPrintShipping_QNAME, reader, context);
                requiredElements.remove("CanPrintShipping");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanPrintShipping(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanUseCostCodes_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanUseCostCodes_QNAME, reader, context);
                requiredElements.remove("CanUseCostCodes");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanUseCostCodes(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanUseHiddenPostage_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanUseHiddenPostage_QNAME, reader, context);
                requiredElements.remove("CanUseHiddenPostage");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanUseHiddenPostage(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanPurchaseSDCInsurance_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanPurchaseSDCInsurance_QNAME, reader, context);
                requiredElements.remove("CanPurchaseSDCInsurance");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanPurchaseSDCInsurance(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanPrintMemoOnShippingLabel_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanPrintMemoOnShippingLabel_QNAME, reader, context);
                requiredElements.remove("CanPrintMemoOnShippingLabel");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanPrintMemoOnShippingLabel(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanPrintInternational_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanPrintInternational_QNAME, reader, context);
                requiredElements.remove("CanPrintInternational");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanPrintInternational(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanPurchasePostage_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanPurchasePostage_QNAME, reader, context);
                requiredElements.remove("CanPurchasePostage");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanPurchasePostage(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanEditCostCodes_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanEditCostCodes_QNAME, reader, context);
                requiredElements.remove("CanEditCostCodes");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanEditCostCodes(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_MustUseCostCodes_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_MustUseCostCodes_QNAME, reader, context);
                requiredElements.remove("MustUseCostCodes");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setMustUseCostCodes(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanViewOnlineReports_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanViewOnlineReports_QNAME, reader, context);
                requiredElements.remove("CanViewOnlineReports");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanViewOnlineReports(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_PerPrintLimit_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_PerPrintLimit_QNAME, reader, context);
                requiredElements.remove("PerPrintLimit");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setPerPrintLimit((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_AllowAllMailClasses_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_AllowAllMailClasses_QNAME, reader, context);
                requiredElements.remove("AllowAllMailClasses");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setAllowAllMailClasses(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanPrintReturnShippingLabel_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanPrintReturnShippingLabel_QNAME, reader, context);
                requiredElements.remove("CanPrintReturnShippingLabel");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanPrintReturnShippingLabel(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanManageUsers_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanManageUsers_QNAME, reader, context);
                requiredElements.remove("CanManageUsers");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanManageUsers(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanPrintNetStamps_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanPrintNetStamps_QNAME, reader, context);
                requiredElements.remove("CanPrintNetStamps");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanPrintNetStamps(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanEmailNotifications_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanEmailNotifications_QNAME, reader, context);
                requiredElements.remove("CanEmailNotifications");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanEmailNotifications(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanViewReports_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanViewReports_QNAME, reader, context);
                requiredElements.remove("CanViewReports");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanViewReports(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanCreateSCANForm_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanCreateSCANForm_QNAME, reader, context);
                requiredElements.remove("CanCreateSCANForm");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanCreateSCANForm(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_AllowRestrictedSheets_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_AllowRestrictedSheets_QNAME, reader, context);
                requiredElements.remove("AllowRestrictedSheets");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setAllowRestrictedSheets(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_HideUnavailableFeatures_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_HideUnavailableFeatures_QNAME, reader, context);
                requiredElements.remove("HideUnavailableFeatures");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHideUnavailableFeatures(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_WebPostage_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_WebPostage_QNAME, reader, context);
                requiredElements.remove("WebPostage");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setWebPostage(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanViewInsuranceHistory_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanViewInsuranceHistory_QNAME, reader, context);
                requiredElements.remove("CanViewInsuranceHistory");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanViewInsuranceHistory(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanChangeServicePlan_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanChangeServicePlan_QNAME, reader, context);
                requiredElements.remove("CanChangeServicePlan");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanChangeServicePlan(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_HideEstimatedDeliveryTime_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_HideEstimatedDeliveryTime_QNAME, reader, context);
                requiredElements.remove("HideEstimatedDeliveryTime");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setHideEstimatedDeliveryTime(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanPurchaseFromStore_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanPurchaseFromStore_QNAME, reader, context);
                requiredElements.remove("CanPurchaseFromStore");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanPurchaseFromStore(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanChangePhysicalAddress_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanChangePhysicalAddress_QNAME, reader, context);
                requiredElements.remove("CanChangePhysicalAddress");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanChangePhysicalAddress(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanChangePaymentMethod_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanChangePaymentMethod_QNAME, reader, context);
                requiredElements.remove("CanChangePaymentMethod");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanChangePaymentMethod(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanChangeContactInfo_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanChangeContactInfo_QNAME, reader, context);
                requiredElements.remove("CanChangeContactInfo");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanChangeContactInfo(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanViewAdvancedReporting_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanViewAdvancedReporting_QNAME, reader, context);
                requiredElements.remove("CanViewAdvancedReporting");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanViewAdvancedReporting(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_IsIBIPEnabled_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_IsIBIPEnabled_QNAME, reader, context);
                requiredElements.remove("IsIBIPEnabled");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setIsIBIPEnabled(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanCreateCriticalMail_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanCreateCriticalMail_QNAME, reader, context);
                requiredElements.remove("CanCreateCriticalMail");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanCreateCriticalMail(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanUseInvoicing_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanUseInvoicing_QNAME, reader, context);
                requiredElements.remove("CanUseInvoicing");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanUseInvoicing(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanUseCertifiedMail_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanUseCertifiedMail_QNAME, reader, context);
                requiredElements.remove("CanUseCertifiedMail");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanUseCertifiedMail(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CanPrintAllIndiciumValues_QNAME))) {
                myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
                member = myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_CanPrintAllIndiciumValues_QNAME, reader, context);
                requiredElements.remove("CanPrintAllIndiciumValues");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCanPrintAllIndiciumValues(((Boolean)member).booleanValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
        }
        if (!requiredElements.isEmpty()) {
            throw new DeserializationException( "literal.expectedElementName" , requiredElements.iterator().next().toString(), DeserializationException.FAULT_CODE_CLIENT );
        }
        
        if( reader.getState() != XMLReader.END)
        {
            reader.skipElement();
        }
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CapabilitiesV7 instance = (com.aasc.erp.carrier.stampsws.proxy.CapabilitiesV7)obj;
        
    }
    public void doSerializeAnyAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CapabilitiesV7 instance = (com.aasc.erp.carrier.stampsws.proxy.CapabilitiesV7)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CapabilitiesV7 instance = (com.aasc.erp.carrier.stampsws.proxy.CapabilitiesV7)obj;
        
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanPrintShipping()), ns1_CanPrintShipping_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanUseCostCodes()), ns1_CanUseCostCodes_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanUseHiddenPostage()), ns1_CanUseHiddenPostage_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanPurchaseSDCInsurance()), ns1_CanPurchaseSDCInsurance_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanPrintMemoOnShippingLabel()), ns1_CanPrintMemoOnShippingLabel_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanPrintInternational()), ns1_CanPrintInternational_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanPurchasePostage()), ns1_CanPurchasePostage_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanEditCostCodes()), ns1_CanEditCostCodes_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isMustUseCostCodes()), ns1_MustUseCostCodes_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanViewOnlineReports()), ns1_CanViewOnlineReports_QNAME, null, writer, context);
        myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
        myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getPerPrintLimit(), ns1_PerPrintLimit_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isAllowAllMailClasses()), ns1_AllowAllMailClasses_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanPrintReturnShippingLabel()), ns1_CanPrintReturnShippingLabel_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanManageUsers()), ns1_CanManageUsers_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanPrintNetStamps()), ns1_CanPrintNetStamps_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanEmailNotifications()), ns1_CanEmailNotifications_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanViewReports()), ns1_CanViewReports_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanCreateSCANForm()), ns1_CanCreateSCANForm_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isAllowRestrictedSheets()), ns1_AllowRestrictedSheets_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isHideUnavailableFeatures()), ns1_HideUnavailableFeatures_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isWebPostage()), ns1_WebPostage_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanViewInsuranceHistory()), ns1_CanViewInsuranceHistory_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanChangeServicePlan()), ns1_CanChangeServicePlan_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isHideEstimatedDeliveryTime()), ns1_HideEstimatedDeliveryTime_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanPurchaseFromStore()), ns1_CanPurchaseFromStore_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanChangePhysicalAddress()), ns1_CanChangePhysicalAddress_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanChangePaymentMethod()), ns1_CanChangePaymentMethod_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanChangeContactInfo()), ns1_CanChangeContactInfo_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanViewAdvancedReporting()), ns1_CanViewAdvancedReporting_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isIsIBIPEnabled()), ns1_IsIBIPEnabled_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanCreateCriticalMail()), ns1_CanCreateCriticalMail_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanUseInvoicing()), ns1_CanUseInvoicing_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanUseCertifiedMail()), ns1_CanUseCertifiedMail_QNAME, null, writer, context);
        myns2__boolean__boolean_Boolean_Serializer.setNullable( false );
        myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isCanPrintAllIndiciumValues()), ns1_CanPrintAllIndiciumValues_QNAME, null, writer, context);
    }
}
