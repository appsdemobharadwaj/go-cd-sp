// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.stampsws.proxy.runtime;

import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.encoding.literal.DetailFragmentDeserializer;
import oracle.j2ee.ws.common.encoding.simpletype.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.xml.UUID;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.xml.soap.SOAPMessage;
import javax.xml.soap.AttachmentPart;

public class CarrierPickup_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable {
    private static final QName ns1_Credentials_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Credentials");
    private static final QName ns1_Credentials_TYPE_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Credentials");
    private CombinedSerializer myns1_Credentials__Credentials_LiteralSerializer;
    private static final QName ns1_Authenticator_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Authenticator");
    private static final QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer myns2_string__java_lang_String_String_Serializer;
    private static final QName ns1_FirstName_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "FirstName");
    private static final QName ns1_LastName_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "LastName");
    private static final QName ns1_Company_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Company");
    private static final QName ns1_Address_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Address");
    private static final QName ns1_SuiteOrApt_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "SuiteOrApt");
    private static final QName ns1_City_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "City");
    private static final QName ns1_State_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "State");
    private static final QName ns1_ZIP_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "ZIP");
    private static final QName ns1_ZIP4_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "ZIP4");
    private static final QName ns1_PhoneNumber_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "PhoneNumber");
    private static final QName ns1_PhoneExt_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "PhoneExt");
    private static final QName ns1_NumberOfExpressMailPieces_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "NumberOfExpressMailPieces");
    private static final QName ns2_int_TYPE_QNAME = SchemaConstants.QNAME_TYPE_INT;
    private CombinedSerializer myns2__int__java_lang_Integer_Int_Serializer;
    private static final QName ns1_NumberOfPriorityMailPieces_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "NumberOfPriorityMailPieces");
    private static final QName ns1_NumberOfInternationalPieces_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "NumberOfInternationalPieces");
    private static final QName ns1_NumberOfOtherPieces_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "NumberOfOtherPieces");
    private static final QName ns1_TotalWeightOfPackagesLbs_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "TotalWeightOfPackagesLbs");
    private CombinedSerializer myns2__int__int_Int_Serializer;
    private static final QName ns1_PackageLocation_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "PackageLocation");
    private static final QName ns1_CarrierPickupLocationV1_TYPE_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CarrierPickupLocationV1");
    private CombinedSerializer myns1_CarrierPickupLocationV1__CarrierPickupLocationV1_LiteralSerializer;
    private static final QName ns1_SpecialInstruction_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "SpecialInstruction");
    
    public CarrierPickup_LiteralSerializer(QName type) {
        this(type,  false);
    }
    
    public CarrierPickup_LiteralSerializer(QName type, boolean encodeType) {
        super(type, true, encodeType);
        setSOAPVersion(SOAPVersion.SOAP_11);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        myns1_Credentials__Credentials_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.stampsws.proxy.Credentials.class, ns1_Credentials_TYPE_QNAME);
        myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.String.class, ns2_string_TYPE_QNAME);
        myns2__int__java_lang_Integer_Int_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.Integer.class, ns2_int_TYPE_QNAME);
        myns2__int__int_Int_Serializer = (CombinedSerializer)registry.getSerializer("", int.class, ns2_int_TYPE_QNAME);
        myns1_CarrierPickupLocationV1__CarrierPickupLocationV1_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.stampsws.proxy.CarrierPickupLocationV1.class, ns1_CarrierPickupLocationV1_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CarrierPickup instance = new com.aasc.erp.carrier.stampsws.proxy.CarrierPickup();
        java.lang.Object member=null;
        QName elementName;
        List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        java.util.HashSet requiredElements = new java.util.HashSet();
        requiredElements.add("FirstName");
        requiredElements.add("LastName");
        requiredElements.add("Address");
        requiredElements.add("City");
        requiredElements.add("State");
        requiredElements.add("ZIP");
        requiredElements.add("PhoneNumber");
        requiredElements.add("TotalWeightOfPackagesLbs");
        requiredElements.add("PackageLocation");
        for (int memberIndex = 0; memberIndex <20; memberIndex++) {
            elementName = reader.getName();
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Credentials_QNAME))) {
                myns1_Credentials__Credentials_LiteralSerializer.setNullable( false );
                member = myns1_Credentials__Credentials_LiteralSerializer.deserialize(ns1_Credentials_QNAME, reader, context);
                requiredElements.remove("Credentials");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCredentials((com.aasc.erp.carrier.stampsws.proxy.Credentials)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Authenticator_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Authenticator_QNAME, reader, context);
                requiredElements.remove("Authenticator");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setAuthenticator((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_FirstName_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_FirstName_QNAME, reader, context);
                requiredElements.remove("FirstName");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setFirstName((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_LastName_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_LastName_QNAME, reader, context);
                requiredElements.remove("LastName");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setLastName((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Company_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Company_QNAME, reader, context);
                requiredElements.remove("Company");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCompany((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Address_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Address_QNAME, reader, context);
                requiredElements.remove("Address");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setAddress((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_SuiteOrApt_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_SuiteOrApt_QNAME, reader, context);
                requiredElements.remove("SuiteOrApt");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setSuiteOrApt((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_City_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_City_QNAME, reader, context);
                requiredElements.remove("City");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCity((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_State_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_State_QNAME, reader, context);
                requiredElements.remove("State");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setState((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ZIP_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ZIP_QNAME, reader, context);
                requiredElements.remove("ZIP");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setZIP((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ZIP4_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ZIP4_QNAME, reader, context);
                requiredElements.remove("ZIP4");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setZIP4((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_PhoneNumber_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_PhoneNumber_QNAME, reader, context);
                requiredElements.remove("PhoneNumber");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setPhoneNumber((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_PhoneExt_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_PhoneExt_QNAME, reader, context);
                requiredElements.remove("PhoneExt");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setPhoneExt((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_NumberOfExpressMailPieces_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_NumberOfExpressMailPieces_QNAME, reader, context);
                requiredElements.remove("NumberOfExpressMailPieces");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNumberOfExpressMailPieces((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_NumberOfPriorityMailPieces_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_NumberOfPriorityMailPieces_QNAME, reader, context);
                requiredElements.remove("NumberOfPriorityMailPieces");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNumberOfPriorityMailPieces((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_NumberOfInternationalPieces_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_NumberOfInternationalPieces_QNAME, reader, context);
                requiredElements.remove("NumberOfInternationalPieces");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNumberOfInternationalPieces((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_NumberOfOtherPieces_QNAME))) {
                myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
                member = myns2__int__java_lang_Integer_Int_Serializer.deserialize(ns1_NumberOfOtherPieces_QNAME, reader, context);
                requiredElements.remove("NumberOfOtherPieces");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNumberOfOtherPieces((java.lang.Integer)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_TotalWeightOfPackagesLbs_QNAME))) {
                myns2__int__int_Int_Serializer.setNullable( false );
                member = myns2__int__int_Int_Serializer.deserialize(ns1_TotalWeightOfPackagesLbs_QNAME, reader, context);
                requiredElements.remove("TotalWeightOfPackagesLbs");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setTotalWeightOfPackagesLbs(((Integer)member).intValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_PackageLocation_QNAME))) {
                myns1_CarrierPickupLocationV1__CarrierPickupLocationV1_LiteralSerializer.setNullable( false );
                member = myns1_CarrierPickupLocationV1__CarrierPickupLocationV1_LiteralSerializer.deserialize(ns1_PackageLocation_QNAME, reader, context);
                requiredElements.remove("PackageLocation");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setPackageLocation((com.aasc.erp.carrier.stampsws.proxy.CarrierPickupLocationV1)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_SpecialInstruction_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_SpecialInstruction_QNAME, reader, context);
                requiredElements.remove("SpecialInstruction");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setSpecialInstruction((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
        }
        if (!requiredElements.isEmpty()) {
            throw new DeserializationException( "literal.expectedElementName" , requiredElements.iterator().next().toString(), DeserializationException.FAULT_CODE_CLIENT );
        }
        
        if( reader.getState() != XMLReader.END)
        {
            reader.skipElement();
        }
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CarrierPickup instance = (com.aasc.erp.carrier.stampsws.proxy.CarrierPickup)obj;
        
    }
    public void doSerializeAnyAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CarrierPickup instance = (com.aasc.erp.carrier.stampsws.proxy.CarrierPickup)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CarrierPickup instance = (com.aasc.erp.carrier.stampsws.proxy.CarrierPickup)obj;
        
        if (instance.getCredentials() != null) {
            myns1_Credentials__Credentials_LiteralSerializer.setNullable( false );
            myns1_Credentials__Credentials_LiteralSerializer.serialize(instance.getCredentials(), ns1_Credentials_QNAME, null, writer, context);
        }
        if (instance.getAuthenticator() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getAuthenticator(), ns1_Authenticator_QNAME, null, writer, context);
        }
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getFirstName(), ns1_FirstName_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getLastName(), ns1_LastName_QNAME, null, writer, context);
        if (instance.getCompany() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getCompany(), ns1_Company_QNAME, null, writer, context);
        }
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getAddress(), ns1_Address_QNAME, null, writer, context);
        if (instance.getSuiteOrApt() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getSuiteOrApt(), ns1_SuiteOrApt_QNAME, null, writer, context);
        }
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getCity(), ns1_City_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getState(), ns1_State_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getZIP(), ns1_ZIP_QNAME, null, writer, context);
        if (instance.getZIP4() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getZIP4(), ns1_ZIP4_QNAME, null, writer, context);
        }
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getPhoneNumber(), ns1_PhoneNumber_QNAME, null, writer, context);
        if (instance.getPhoneExt() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getPhoneExt(), ns1_PhoneExt_QNAME, null, writer, context);
        }
        if (instance.getNumberOfExpressMailPieces() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getNumberOfExpressMailPieces(), ns1_NumberOfExpressMailPieces_QNAME, null, writer, context);
        }
        if (instance.getNumberOfPriorityMailPieces() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getNumberOfPriorityMailPieces(), ns1_NumberOfPriorityMailPieces_QNAME, null, writer, context);
        }
        if (instance.getNumberOfInternationalPieces() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getNumberOfInternationalPieces(), ns1_NumberOfInternationalPieces_QNAME, null, writer, context);
        }
        if (instance.getNumberOfOtherPieces() != null) {
            myns2__int__java_lang_Integer_Int_Serializer.setNullable( false );
            myns2__int__java_lang_Integer_Int_Serializer.serialize(instance.getNumberOfOtherPieces(), ns1_NumberOfOtherPieces_QNAME, null, writer, context);
        }
        myns2__int__int_Int_Serializer.setNullable( false );
        myns2__int__int_Int_Serializer.serialize(new Integer(instance.getTotalWeightOfPackagesLbs()), ns1_TotalWeightOfPackagesLbs_QNAME, null, writer, context);
        myns1_CarrierPickupLocationV1__CarrierPickupLocationV1_LiteralSerializer.setNullable( false );
        myns1_CarrierPickupLocationV1__CarrierPickupLocationV1_LiteralSerializer.serialize(instance.getPackageLocation(), ns1_PackageLocation_QNAME, null, writer, context);
        if (instance.getSpecialInstruction() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getSpecialInstruction(), ns1_SpecialInstruction_QNAME, null, writer, context);
        }
    }
}
