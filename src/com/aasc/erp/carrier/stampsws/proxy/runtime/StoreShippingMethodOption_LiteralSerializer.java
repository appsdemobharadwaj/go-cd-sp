// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.stampsws.proxy.runtime;

import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.encoding.literal.DetailFragmentDeserializer;
import oracle.j2ee.ws.common.encoding.simpletype.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.xml.UUID;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.xml.soap.SOAPMessage;
import javax.xml.soap.AttachmentPart;

public class StoreShippingMethodOption_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable {
    private static final QName ns1_StoreShippingMethod_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "StoreShippingMethod");
    private static final QName ns1_StoreShippingMethodType_TYPE_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "StoreShippingMethodType");
    private CombinedSerializer myns1_StoreShippingMethodType__StoreShippingMethodType_LiteralSerializer;
    private static final QName ns1_StoreDeliveryTimeMinimum_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "StoreDeliveryTimeMinimum");
    private static final QName ns2_int_TYPE_QNAME = SchemaConstants.QNAME_TYPE_INT;
    private CombinedSerializer myns2__int__int_Int_Serializer;
    private static final QName ns1_StoreDeliveryTimeMaximum_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "StoreDeliveryTimeMaximum");
    private static final QName ns1_Skus_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Skus");
    private static final QName ns1_ArrayOfSku_TYPE_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "ArrayOfSku");
    private CombinedSerializer myns1_ArrayOfSku__ArrayOfSku_LiteralSerializer;
    private static final QName ns1_StoreProductTotal_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "StoreProductTotal");
    private static final QName ns2_decimal_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DECIMAL;
    private CombinedSerializer myns2_decimal__java_math_BigDecimal_Decimal_Serializer;
    private static final QName ns1_StoreProductDiscount_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "StoreProductDiscount");
    private static final QName ns1_StoreShippingAmount_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "StoreShippingAmount");
    private static final QName ns1_StoreTaxTotal_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "StoreTaxTotal");
    private static final QName ns1_StoreOrderTotal_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "StoreOrderTotal");
    
    public StoreShippingMethodOption_LiteralSerializer(QName type) {
        this(type,  false);
    }
    
    public StoreShippingMethodOption_LiteralSerializer(QName type, boolean encodeType) {
        super(type, true, encodeType);
        setSOAPVersion(SOAPVersion.SOAP_11);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        myns1_StoreShippingMethodType__StoreShippingMethodType_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.stampsws.proxy.StoreShippingMethodType.class, ns1_StoreShippingMethodType_TYPE_QNAME);
        myns2__int__int_Int_Serializer = (CombinedSerializer)registry.getSerializer("", int.class, ns2_int_TYPE_QNAME);
        myns1_ArrayOfSku__ArrayOfSku_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.stampsws.proxy.ArrayOfSku.class, ns1_ArrayOfSku_TYPE_QNAME);
        myns2_decimal__java_math_BigDecimal_Decimal_Serializer = (CombinedSerializer)registry.getSerializer("", java.math.BigDecimal.class, ns2_decimal_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.StoreShippingMethodOption instance = new com.aasc.erp.carrier.stampsws.proxy.StoreShippingMethodOption();
        java.lang.Object member=null;
        QName elementName;
        List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        java.util.HashSet requiredElements = new java.util.HashSet();
        requiredElements.add("StoreShippingMethod");
        requiredElements.add("StoreDeliveryTimeMinimum");
        requiredElements.add("StoreDeliveryTimeMaximum");
        requiredElements.add("Skus");
        for (int memberIndex = 0; memberIndex <9; memberIndex++) {
            elementName = reader.getName();
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_StoreShippingMethod_QNAME))) {
                myns1_StoreShippingMethodType__StoreShippingMethodType_LiteralSerializer.setNullable( false );
                member = myns1_StoreShippingMethodType__StoreShippingMethodType_LiteralSerializer.deserialize(ns1_StoreShippingMethod_QNAME, reader, context);
                requiredElements.remove("StoreShippingMethod");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setStoreShippingMethod((com.aasc.erp.carrier.stampsws.proxy.StoreShippingMethodType)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_StoreDeliveryTimeMinimum_QNAME))) {
                myns2__int__int_Int_Serializer.setNullable( false );
                member = myns2__int__int_Int_Serializer.deserialize(ns1_StoreDeliveryTimeMinimum_QNAME, reader, context);
                requiredElements.remove("StoreDeliveryTimeMinimum");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setStoreDeliveryTimeMinimum(((Integer)member).intValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_StoreDeliveryTimeMaximum_QNAME))) {
                myns2__int__int_Int_Serializer.setNullable( false );
                member = myns2__int__int_Int_Serializer.deserialize(ns1_StoreDeliveryTimeMaximum_QNAME, reader, context);
                requiredElements.remove("StoreDeliveryTimeMaximum");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setStoreDeliveryTimeMaximum(((Integer)member).intValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Skus_QNAME))) {
                myns1_ArrayOfSku__ArrayOfSku_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfSku__ArrayOfSku_LiteralSerializer.deserialize(ns1_Skus_QNAME, reader, context);
                requiredElements.remove("Skus");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setSkus((member == null)? null : ((com.aasc.erp.carrier.stampsws.proxy.ArrayOfSku)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_StoreProductTotal_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_StoreProductTotal_QNAME, reader, context);
                requiredElements.remove("StoreProductTotal");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setStoreProductTotal((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_StoreProductDiscount_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_StoreProductDiscount_QNAME, reader, context);
                requiredElements.remove("StoreProductDiscount");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setStoreProductDiscount((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_StoreShippingAmount_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_StoreShippingAmount_QNAME, reader, context);
                requiredElements.remove("StoreShippingAmount");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setStoreShippingAmount((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_StoreTaxTotal_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_StoreTaxTotal_QNAME, reader, context);
                requiredElements.remove("StoreTaxTotal");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setStoreTaxTotal((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_StoreOrderTotal_QNAME))) {
                myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
                member = myns2_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_StoreOrderTotal_QNAME, reader, context);
                requiredElements.remove("StoreOrderTotal");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setStoreOrderTotal((java.math.BigDecimal)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
        }
        if (!requiredElements.isEmpty()) {
            throw new DeserializationException( "literal.expectedElementName" , requiredElements.iterator().next().toString(), DeserializationException.FAULT_CODE_CLIENT );
        }
        
        if( reader.getState() != XMLReader.END)
        {
            reader.skipElement();
        }
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.StoreShippingMethodOption instance = (com.aasc.erp.carrier.stampsws.proxy.StoreShippingMethodOption)obj;
        
    }
    public void doSerializeAnyAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.StoreShippingMethodOption instance = (com.aasc.erp.carrier.stampsws.proxy.StoreShippingMethodOption)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.StoreShippingMethodOption instance = (com.aasc.erp.carrier.stampsws.proxy.StoreShippingMethodOption)obj;
        
        myns1_StoreShippingMethodType__StoreShippingMethodType_LiteralSerializer.setNullable( false );
        myns1_StoreShippingMethodType__StoreShippingMethodType_LiteralSerializer.serialize(instance.getStoreShippingMethod(), ns1_StoreShippingMethod_QNAME, null, writer, context);
        myns2__int__int_Int_Serializer.setNullable( false );
        myns2__int__int_Int_Serializer.serialize(new Integer(instance.getStoreDeliveryTimeMinimum()), ns1_StoreDeliveryTimeMinimum_QNAME, null, writer, context);
        myns2__int__int_Int_Serializer.setNullable( false );
        myns2__int__int_Int_Serializer.serialize(new Integer(instance.getStoreDeliveryTimeMaximum()), ns1_StoreDeliveryTimeMaximum_QNAME, null, writer, context);
        myns1_ArrayOfSku__ArrayOfSku_LiteralSerializer.setNullable( false );
        com.aasc.erp.carrier.stampsws.proxy.ArrayOfSku instanceGetSkus_arrayWrapper = (instance.getSkus() == null) ? null : new com.aasc.erp.carrier.stampsws.proxy.ArrayOfSku(instance.getSkus());
        myns1_ArrayOfSku__ArrayOfSku_LiteralSerializer.serialize(instanceGetSkus_arrayWrapper, ns1_Skus_QNAME, null, writer, context);
        if (instance.getStoreProductTotal() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getStoreProductTotal(), ns1_StoreProductTotal_QNAME, null, writer, context);
        }
        if (instance.getStoreProductDiscount() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getStoreProductDiscount(), ns1_StoreProductDiscount_QNAME, null, writer, context);
        }
        if (instance.getStoreShippingAmount() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getStoreShippingAmount(), ns1_StoreShippingAmount_QNAME, null, writer, context);
        }
        if (instance.getStoreTaxTotal() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getStoreTaxTotal(), ns1_StoreTaxTotal_QNAME, null, writer, context);
        }
        if (instance.getStoreOrderTotal() != null) {
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.setNullable( false );
            myns2_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getStoreOrderTotal(), ns1_StoreOrderTotal_QNAME, null, writer, context);
        }
    }
}
