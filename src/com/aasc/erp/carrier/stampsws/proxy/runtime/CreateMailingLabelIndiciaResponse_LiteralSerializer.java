// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.stampsws.proxy.runtime;

import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.encoding.literal.DetailFragmentDeserializer;
import oracle.j2ee.ws.common.encoding.simpletype.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.xml.UUID;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.xml.soap.SOAPMessage;
import javax.xml.soap.AttachmentPart;

public class CreateMailingLabelIndiciaResponse_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable {
    private static final QName ns1_Authenticator_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Authenticator");
    private static final QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer myns2_string__java_lang_String_String_Serializer;
    private static final QName ns1_StampsTxId_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "StampsTxId");
    private static final QName ns1_Url_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Url");
    private static final QName ns1_ConfirmationNumbers_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "ConfirmationNumbers");
    private static final QName ns1_ArrayOfString_TYPE_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "ArrayOfString");
    private CombinedSerializer myns1_ArrayOfString__ArrayOfString_LiteralSerializer;
    private static final QName ns1_PostageBalance_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "PostageBalance");
    private static final QName ns1_PostageBalance_TYPE_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "PostageBalance");
    private CombinedSerializer myns1_PostageBalance__PostageBalance_LiteralSerializer;
    private static final QName ns1_IssuedLabelCount_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "IssuedLabelCount");
    private static final QName ns2_int_TYPE_QNAME = SchemaConstants.QNAME_TYPE_INT;
    private CombinedSerializer myns2__int__int_Int_Serializer;
    private static final QName ns1_ErrorReason_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "ErrorReason");
    private static final QName ns1_Mac_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Mac");
    
    public CreateMailingLabelIndiciaResponse_LiteralSerializer(QName type) {
        this(type,  false);
    }
    
    public CreateMailingLabelIndiciaResponse_LiteralSerializer(QName type, boolean encodeType) {
        super(type, true, encodeType);
        setSOAPVersion(SOAPVersion.SOAP_11);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.String.class, ns2_string_TYPE_QNAME);
        myns1_ArrayOfString__ArrayOfString_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.stampsws.proxy.ArrayOfString.class, ns1_ArrayOfString_TYPE_QNAME);
        myns1_PostageBalance__PostageBalance_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.aasc.erp.carrier.stampsws.proxy.PostageBalance.class, ns1_PostageBalance_TYPE_QNAME);
        myns2__int__int_Int_Serializer = (CombinedSerializer)registry.getSerializer("", int.class, ns2_int_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CreateMailingLabelIndiciaResponse instance = new com.aasc.erp.carrier.stampsws.proxy.CreateMailingLabelIndiciaResponse();
        java.lang.Object member=null;
        QName elementName;
        List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        java.util.HashSet requiredElements = new java.util.HashSet();
        requiredElements.add("Authenticator");
        requiredElements.add("StampsTxId");
        requiredElements.add("Url");
        requiredElements.add("ConfirmationNumbers");
        requiredElements.add("PostageBalance");
        requiredElements.add("IssuedLabelCount");
        requiredElements.add("ErrorReason");
        requiredElements.add("Mac");
        for (int memberIndex = 0; memberIndex <8; memberIndex++) {
            elementName = reader.getName();
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Authenticator_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Authenticator_QNAME, reader, context);
                requiredElements.remove("Authenticator");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setAuthenticator((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_StampsTxId_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_StampsTxId_QNAME, reader, context);
                requiredElements.remove("StampsTxId");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setStampsTxId((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Url_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Url_QNAME, reader, context);
                requiredElements.remove("Url");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUrl((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ConfirmationNumbers_QNAME))) {
                myns1_ArrayOfString__ArrayOfString_LiteralSerializer.setNullable( false );
                member = myns1_ArrayOfString__ArrayOfString_LiteralSerializer.deserialize(ns1_ConfirmationNumbers_QNAME, reader, context);
                requiredElements.remove("ConfirmationNumbers");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setConfirmationNumbers((member == null)? null : ((com.aasc.erp.carrier.stampsws.proxy.ArrayOfString)member).toArray());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_PostageBalance_QNAME))) {
                myns1_PostageBalance__PostageBalance_LiteralSerializer.setNullable( false );
                member = myns1_PostageBalance__PostageBalance_LiteralSerializer.deserialize(ns1_PostageBalance_QNAME, reader, context);
                requiredElements.remove("PostageBalance");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setPostageBalance((com.aasc.erp.carrier.stampsws.proxy.PostageBalance)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_IssuedLabelCount_QNAME))) {
                myns2__int__int_Int_Serializer.setNullable( false );
                member = myns2__int__int_Int_Serializer.deserialize(ns1_IssuedLabelCount_QNAME, reader, context);
                requiredElements.remove("IssuedLabelCount");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setIssuedLabelCount(((Integer)member).intValue());
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ErrorReason_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ErrorReason_QNAME, reader, context);
                requiredElements.remove("ErrorReason");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setErrorReason((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Mac_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Mac_QNAME, reader, context);
                requiredElements.remove("Mac");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setMac((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
        }
        if (!requiredElements.isEmpty()) {
            throw new DeserializationException( "literal.expectedElementName" , requiredElements.iterator().next().toString(), DeserializationException.FAULT_CODE_CLIENT );
        }
        
        if( reader.getState() != XMLReader.END)
        {
            reader.skipElement();
        }
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CreateMailingLabelIndiciaResponse instance = (com.aasc.erp.carrier.stampsws.proxy.CreateMailingLabelIndiciaResponse)obj;
        
    }
    public void doSerializeAnyAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CreateMailingLabelIndiciaResponse instance = (com.aasc.erp.carrier.stampsws.proxy.CreateMailingLabelIndiciaResponse)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.CreateMailingLabelIndiciaResponse instance = (com.aasc.erp.carrier.stampsws.proxy.CreateMailingLabelIndiciaResponse)obj;
        
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getAuthenticator(), ns1_Authenticator_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getStampsTxId(), ns1_StampsTxId_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getUrl(), ns1_Url_QNAME, null, writer, context);
        myns1_ArrayOfString__ArrayOfString_LiteralSerializer.setNullable( false );
        com.aasc.erp.carrier.stampsws.proxy.ArrayOfString instanceGetConfirmationNumbers_arrayWrapper = (instance.getConfirmationNumbers() == null) ? null : new com.aasc.erp.carrier.stampsws.proxy.ArrayOfString(instance.getConfirmationNumbers());
        myns1_ArrayOfString__ArrayOfString_LiteralSerializer.serialize(instanceGetConfirmationNumbers_arrayWrapper, ns1_ConfirmationNumbers_QNAME, null, writer, context);
        myns1_PostageBalance__PostageBalance_LiteralSerializer.setNullable( false );
        myns1_PostageBalance__PostageBalance_LiteralSerializer.serialize(instance.getPostageBalance(), ns1_PostageBalance_QNAME, null, writer, context);
        myns2__int__int_Int_Serializer.setNullable( false );
        myns2__int__int_Int_Serializer.serialize(new Integer(instance.getIssuedLabelCount()), ns1_IssuedLabelCount_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getErrorReason(), ns1_ErrorReason_QNAME, null, writer, context);
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getMac(), ns1_Mac_QNAME, null, writer, context);
    }
}
