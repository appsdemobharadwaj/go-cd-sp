// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.stampsws.proxy.runtime;

import oracle.j2ee.ws.common.encoding.*;
import oracle.j2ee.ws.common.encoding.literal.*;
import oracle.j2ee.ws.common.encoding.literal.DetailFragmentDeserializer;
import oracle.j2ee.ws.common.encoding.simpletype.*;
import oracle.j2ee.ws.common.soap.SOAPEncodingConstants;
import oracle.j2ee.ws.common.soap.SOAPEnvelopeConstants;
import oracle.j2ee.ws.common.soap.SOAPVersion;
import oracle.j2ee.ws.common.streaming.*;
import oracle.j2ee.ws.common.wsdl.document.schema.SchemaConstants;
import oracle.j2ee.ws.common.util.xml.UUID;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.xml.soap.SOAPMessage;
import javax.xml.soap.AttachmentPart;

public class Address_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable {
    private static final QName ns1_FullName_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "FullName");
    private static final QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer myns2_string__java_lang_String_String_Serializer;
    private static final QName ns1_NamePrefix_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "NamePrefix");
    private static final QName ns1_FirstName_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "FirstName");
    private static final QName ns1_MiddleName_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "MiddleName");
    private static final QName ns1_LastName_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "LastName");
    private static final QName ns1_NameSuffix_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "NameSuffix");
    private static final QName ns1_Title_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Title");
    private static final QName ns1_Department_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Department");
    private static final QName ns1_Company_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Company");
    private static final QName ns1_Address1_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Address1");
    private static final QName ns1_Address2_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Address2");
    private static final QName ns1_Address3_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Address3");
    private static final QName ns1_City_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "City");
    private static final QName ns1_State_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "State");
    private static final QName ns1_ZIPCode_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "ZIPCode");
    private static final QName ns1_ZIPCodeAddOn_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "ZIPCodeAddOn");
    private static final QName ns1_DPB_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "DPB");
    private static final QName ns1_CheckDigit_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CheckDigit");
    private static final QName ns1_Province_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Province");
    private static final QName ns1_PostalCode_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "PostalCode");
    private static final QName ns1_Country_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Country");
    private static final QName ns1_Urbanization_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Urbanization");
    private static final QName ns1_PhoneNumber_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "PhoneNumber");
    private static final QName ns1_Extension_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "Extension");
    private static final QName ns1_CleanseHash_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "CleanseHash");
    private static final QName ns1_OverrideHash_QNAME = new QName("http://stamps.com/xml/namespace/2014/07/swsim/swsimv37", "OverrideHash");
    
    public Address_LiteralSerializer(QName type) {
        this(type,  false);
    }
    
    public Address_LiteralSerializer(QName type, boolean encodeType) {
        super(type, true, encodeType);
        setSOAPVersion(SOAPVersion.SOAP_11);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.String.class, ns2_string_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.Address instance = new com.aasc.erp.carrier.stampsws.proxy.Address();
        java.lang.Object member=null;
        QName elementName;
        List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        java.util.HashSet requiredElements = new java.util.HashSet();
        requiredElements.add("Address1");
        for (int memberIndex = 0; memberIndex <26; memberIndex++) {
            elementName = reader.getName();
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_FullName_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_FullName_QNAME, reader, context);
                requiredElements.remove("FullName");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setFullName((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_NamePrefix_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_NamePrefix_QNAME, reader, context);
                requiredElements.remove("NamePrefix");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNamePrefix((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_FirstName_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_FirstName_QNAME, reader, context);
                requiredElements.remove("FirstName");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setFirstName((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_MiddleName_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_MiddleName_QNAME, reader, context);
                requiredElements.remove("MiddleName");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setMiddleName((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_LastName_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_LastName_QNAME, reader, context);
                requiredElements.remove("LastName");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setLastName((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_NameSuffix_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_NameSuffix_QNAME, reader, context);
                requiredElements.remove("NameSuffix");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setNameSuffix((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Title_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Title_QNAME, reader, context);
                requiredElements.remove("Title");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setTitle((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Department_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Department_QNAME, reader, context);
                requiredElements.remove("Department");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setDepartment((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Company_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Company_QNAME, reader, context);
                requiredElements.remove("Company");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCompany((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Address1_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Address1_QNAME, reader, context);
                requiredElements.remove("Address1");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setAddress1((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Address2_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Address2_QNAME, reader, context);
                requiredElements.remove("Address2");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setAddress2((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Address3_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Address3_QNAME, reader, context);
                requiredElements.remove("Address3");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setAddress3((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_City_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_City_QNAME, reader, context);
                requiredElements.remove("City");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCity((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_State_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_State_QNAME, reader, context);
                requiredElements.remove("State");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setState((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ZIPCode_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ZIPCode_QNAME, reader, context);
                requiredElements.remove("ZIPCode");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setZIPCode((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_ZIPCodeAddOn_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ZIPCodeAddOn_QNAME, reader, context);
                requiredElements.remove("ZIPCodeAddOn");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setZIPCodeAddOn((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_DPB_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_DPB_QNAME, reader, context);
                requiredElements.remove("DPB");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setDPB((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CheckDigit_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_CheckDigit_QNAME, reader, context);
                requiredElements.remove("CheckDigit");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCheckDigit((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Province_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Province_QNAME, reader, context);
                requiredElements.remove("Province");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setProvince((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_PostalCode_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_PostalCode_QNAME, reader, context);
                requiredElements.remove("PostalCode");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setPostalCode((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Country_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Country_QNAME, reader, context);
                requiredElements.remove("Country");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCountry((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Urbanization_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Urbanization_QNAME, reader, context);
                requiredElements.remove("Urbanization");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setUrbanization((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_PhoneNumber_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_PhoneNumber_QNAME, reader, context);
                requiredElements.remove("PhoneNumber");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setPhoneNumber((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_Extension_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Extension_QNAME, reader, context);
                requiredElements.remove("Extension");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setExtension((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_CleanseHash_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_CleanseHash_QNAME, reader, context);
                requiredElements.remove("CleanseHash");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setCleanseHash((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
            if ((reader.getState() == XMLReader.START) && (matchQName(elementName, ns1_OverrideHash_QNAME))) {
                myns2_string__java_lang_String_String_Serializer.setNullable( false );
                member = myns2_string__java_lang_String_String_Serializer.deserialize(ns1_OverrideHash_QNAME, reader, context);
                requiredElements.remove("OverrideHash");
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull",DeserializationException.FAULT_CODE_CLIENT);
                }
                instance.setOverrideHash((java.lang.String)member);
                context.setXmlFragmentWrapperName( null );
                reader.nextElementContent();
            }
        }
        if (!requiredElements.isEmpty()) {
            throw new DeserializationException( "literal.expectedElementName" , requiredElements.iterator().next().toString(), DeserializationException.FAULT_CODE_CLIENT );
        }
        
        if( reader.getState() != XMLReader.END)
        {
            reader.skipElement();
        }
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.Address instance = (com.aasc.erp.carrier.stampsws.proxy.Address)obj;
        
    }
    public void doSerializeAnyAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.Address instance = (com.aasc.erp.carrier.stampsws.proxy.Address)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.aasc.erp.carrier.stampsws.proxy.Address instance = (com.aasc.erp.carrier.stampsws.proxy.Address)obj;
        
        if (instance.getFullName() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getFullName(), ns1_FullName_QNAME, null, writer, context);
        }
        if (instance.getNamePrefix() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getNamePrefix(), ns1_NamePrefix_QNAME, null, writer, context);
        }
        if (instance.getFirstName() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getFirstName(), ns1_FirstName_QNAME, null, writer, context);
        }
        if (instance.getMiddleName() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getMiddleName(), ns1_MiddleName_QNAME, null, writer, context);
        }
        if (instance.getLastName() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getLastName(), ns1_LastName_QNAME, null, writer, context);
        }
        if (instance.getNameSuffix() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getNameSuffix(), ns1_NameSuffix_QNAME, null, writer, context);
        }
        if (instance.getTitle() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getTitle(), ns1_Title_QNAME, null, writer, context);
        }
        if (instance.getDepartment() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getDepartment(), ns1_Department_QNAME, null, writer, context);
        }
        if (instance.getCompany() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getCompany(), ns1_Company_QNAME, null, writer, context);
        }
        myns2_string__java_lang_String_String_Serializer.setNullable( false );
        myns2_string__java_lang_String_String_Serializer.serialize(instance.getAddress1(), ns1_Address1_QNAME, null, writer, context);
        if (instance.getAddress2() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getAddress2(), ns1_Address2_QNAME, null, writer, context);
        }
        if (instance.getAddress3() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getAddress3(), ns1_Address3_QNAME, null, writer, context);
        }
        if (instance.getCity() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getCity(), ns1_City_QNAME, null, writer, context);
        }
        if (instance.getState() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getState(), ns1_State_QNAME, null, writer, context);
        }
        if (instance.getZIPCode() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getZIPCode(), ns1_ZIPCode_QNAME, null, writer, context);
        }
        if (instance.getZIPCodeAddOn() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getZIPCodeAddOn(), ns1_ZIPCodeAddOn_QNAME, null, writer, context);
        }
        if (instance.getDPB() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getDPB(), ns1_DPB_QNAME, null, writer, context);
        }
        if (instance.getCheckDigit() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getCheckDigit(), ns1_CheckDigit_QNAME, null, writer, context);
        }
        if (instance.getProvince() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getProvince(), ns1_Province_QNAME, null, writer, context);
        }
        if (instance.getPostalCode() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getPostalCode(), ns1_PostalCode_QNAME, null, writer, context);
        }
        if (instance.getCountry() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getCountry(), ns1_Country_QNAME, null, writer, context);
        }
        if (instance.getUrbanization() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getUrbanization(), ns1_Urbanization_QNAME, null, writer, context);
        }
        if (instance.getPhoneNumber() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getPhoneNumber(), ns1_PhoneNumber_QNAME, null, writer, context);
        }
        if (instance.getExtension() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getExtension(), ns1_Extension_QNAME, null, writer, context);
        }
        if (instance.getCleanseHash() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getCleanseHash(), ns1_CleanseHash_QNAME, null, writer, context);
        }
        if (instance.getOverrideHash() != null) {
            myns2_string__java_lang_String_String_Serializer.setNullable( false );
            myns2_string__java_lang_String_String_Serializer.serialize(instance.getOverrideHash(), ns1_OverrideHash_QNAME, null, writer, context);
        }
    }
}
