// !DO NOT EDIT THIS FILE!
// This source file is generated by Oracle tools
// Contents may be subject to change
// For reporting problems, use the following
// Version = Oracle WebServices (10.1.3.4.0, build 080709.0800.28953)

package com.aasc.erp.carrier.stampsws.proxy;


public class NonDeliveryOption implements java.io.Serializable {
    private java.lang.String value;
    private static final String _UndefinedString = "Undefined";
    private static final String _ReturnString = "Return";
    private static final String _AbandonString = "Abandon";
    private static final String _RedirectString = "Redirect";
    
    public static final java.lang.String _Undefined = new java.lang.String(_UndefinedString);
    public static final java.lang.String _Return = new java.lang.String(_ReturnString);
    public static final java.lang.String _Abandon = new java.lang.String(_AbandonString);
    public static final java.lang.String _Redirect = new java.lang.String(_RedirectString);
    
    public static final NonDeliveryOption Undefined = new NonDeliveryOption(_Undefined);
    public static final NonDeliveryOption Return = new NonDeliveryOption(_Return);
    public static final NonDeliveryOption Abandon = new NonDeliveryOption(_Abandon);
    public static final NonDeliveryOption Redirect = new NonDeliveryOption(_Redirect);
    
    public NonDeliveryOption(java.lang.String value) {
        this.value = value;
    }
    
    public java.lang.String getValue() {
        return value;
    }
    
    public static NonDeliveryOption fromValue(java.lang.String value)
        throws java.lang.IllegalStateException {
        if (Undefined.value.equals(value)) {
            return Undefined;
        }if (Return.value.equals(value)) {
            return Return;
        }if (Abandon.value.equals(value)) {
            return Abandon;
        }if (Redirect.value.equals(value)) {
            return Redirect;
        }
        throw new IllegalArgumentException();
    }
    
    public static NonDeliveryOption fromString(String value)
        throws java.lang.IllegalStateException {
        if (value.equals(_UndefinedString)) {
            return Undefined;
        }if (value.equals(_ReturnString)) {
            return Return;
        }if (value.equals(_AbandonString)) {
            return Abandon;
        }if (value.equals(_RedirectString)) {
            return Redirect;
        }
        throw new IllegalArgumentException();
    }
    
    public String toString() {
        return value.toString();
    }
    
    public boolean equals(java.lang.Object obj) {
        if (!(obj instanceof NonDeliveryOption)) {
            return false;
        }
        return ((NonDeliveryOption)obj).value.equals(value);
    }
    
    public int hashCode() {
        return value.hashCode();
    }
}
